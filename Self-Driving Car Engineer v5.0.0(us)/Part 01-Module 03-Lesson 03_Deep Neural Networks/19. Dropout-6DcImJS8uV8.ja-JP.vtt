WEBVTT
Kind: captions
Language: ja-JP

00:00:00.410 --> 00:00:03.330
重要な正則化の手法が
もう1つあります

00:00:03.330 --> 00:00:06.759
比較的最近使われるようになったものですが
とてもうまく機能します

00:00:08.028 --> 00:00:12.230
その真価がわかるまで
しばらくお付き合いください

00:00:12.230 --> 00:00:13.663
名前はドロップアウトです

00:00:13.663 --> 00:00:15.859
ドロップアウトは次のように機能します

00:00:15.859 --> 00:00:19.339
ある層が別の層に
接続されているとします

00:00:19.339 --> 00:00:23.140
ある層から次の層に移動する値は
多くの場合 アクティベーションと呼ばれます

00:00:24.399 --> 00:00:26.209
これらのアクティベーションを取得し

00:00:26.210 --> 00:00:31.015
すべての例についてランダムにネットワークをトレーニングし
半分をゼロに設定します

00:00:32.310 --> 00:00:36.250
基本的には ネットワークを流れるデータの半分を
完全にランダムに取得して破棄し

00:00:36.250 --> 00:00:40.159
ランダムな処理を
繰り返します

00:00:41.390 --> 00:00:44.899
これをまともな処理だと思える場合は
この手法を提唱したジェフリー・ヒントンの

00:00:44.899 --> 00:00:48.119
生徒になる
資格があるでしょう

00:00:48.119 --> 00:00:50.070
ドロップアウトでは何が起きるのでしょうか?

00:00:50.070 --> 00:00:55.329
ネットワークは
必ずしも実行されているとは限らないアクティベーションに

00:00:55.329 --> 00:00:57.820
頼ることは
できません

00:00:58.890 --> 00:01:01.810
そのため
少なくとも一部の情報が確実に残るよう

00:01:01.810 --> 00:01:06.150
すべての冗長表現を
学習する必要があります

00:01:06.150 --> 00:01:08.170
まるでモグラ叩きゲームです

00:01:08.170 --> 00:01:11.409
1つのアクティベーションを
使えなくなっても

00:01:11.409 --> 00:01:13.840
同じ機能を果たすものが常に1つ以上あり

00:01:13.840 --> 00:01:15.340
尽きることはありません

00:01:15.340 --> 00:01:18.120
そのため 最終的にはすべてうまくいきます

00:01:18.120 --> 00:01:21.770
ネットワークに冗長表現を習得させることは
非常に非効率的に

00:01:21.769 --> 00:01:23.000
見えるかもしれません

00:01:23.000 --> 00:01:27.230
しかし実際には 堅牢さが増し
過学習が防止されます

00:01:27.230 --> 00:01:31.670
また、ネットワークはネットワ
ーク同士で同意を取り合うようにして動作します

00:01:31.670 --> 00:01:35.105
これはパフォーマンスを向上させるための
優れた方法です

00:01:35.105 --> 00:01:37.510
ドロップアウトは この数年に登場したなかで

00:01:37.510 --> 00:01:39.252
最も重要な手法の1つです

00:01:39.251 --> 00:01:40.399
ドロップアウトがうまく機能しない場合は

00:01:40.400 --> 00:01:43.020
ネットワーク規模の拡大を
検討してください

