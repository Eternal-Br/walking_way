WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.544
我们来考虑一个简单的自动售货机 里面每样东西价格都是20分

00:00:04.544 --> 00:00:07.290
假设此机器只接受5分和10分的硬币

00:00:07.290 --> 00:00:10.240
其他面额的都不接受

00:00:10.240 --> 00:00:11.849
那么 我们就可以为此机器的状态建立模型了

00:00:11.849 --> 00:00:14.984
具体状态是机器内存放的硬币总量

00:00:14.984 --> 00:00:17.355
开始状态是0分

00:00:17.355 --> 00:00:20.140
接下来会发生两种事情

00:00:20.140 --> 00:00:21.390
我们可以投入一个5分硬币

00:00:21.390 --> 00:00:23.940
此时状态变为5分

00:00:23.940 --> 00:00:26.700
或者 我们投入一个10分硬币 状态变为10分

00:00:26.699 --> 00:00:30.509
这看起来挺简单 但是 考虑下面的情况

00:00:30.510 --> 00:00:34.465
机器内有15分 此刻有人投入了10分

00:00:34.465 --> 00:00:35.985
我们也许会把状态变为20

00:00:35.984 --> 00:00:39.450
但是假设此机器需要精确找零

00:00:39.450 --> 00:00:41.490
那么它就会

00:00:41.490 --> 00:00:43.785
把一枚5分硬币吐出到底部的小托盘里

00:00:43.784 --> 00:00:47.619
正如大家所见 有限状态机在概念上相当简单直接

00:00:47.619 --> 00:00:48.899
那为何我们还要讨论它？

00:00:48.899 --> 00:00:51.000
因为 有限状态机有它的优点和不足

00:00:51.000 --> 00:00:52.244
我们从优点开始讨论

00:00:52.244 --> 00:00:55.765
首先 有限状态机非常容易推导出来

00:00:55.765 --> 00:00:58.230
它们的状态基本上是只看名称就能明白的

00:00:58.229 --> 00:01:01.884
因为基本上 状态机的逻辑状态和实体机的物理状态是一一对应关系

00:01:01.884 --> 00:01:03.989
当投入5分硬币

00:01:03.990 --> 00:01:07.765
则状态改变 当前状态加5分 就这么简单

00:01:07.765 --> 00:01:09.329
其次 有限状态机维护方便

00:01:09.329 --> 00:01:12.299
如果我们想把每件商品价格调为25分

00:01:12.299 --> 00:01:15.759
那么只需要略作调整 便可达到目的

00:01:15.760 --> 00:01:18.960
但是 这也暴露了有限状态机的不足之处

00:01:18.959 --> 00:01:21.974
首先一点是 它们很容易被滥用

00:01:21.974 --> 00:01:25.049
如果一开始就没设计好 或者要解决的问题有所改变

00:01:25.049 --> 00:01:28.244
你很容易发现自己会陷入懊悔的境地

00:01:28.245 --> 00:01:29.454
责怪自己当初为什么没想到一些东西

00:01:29.454 --> 00:01:34.469
好吧 那就增加一个状态 但是这样很可能导致粗心的代码 马虎的逻辑 

00:01:34.469 --> 00:01:37.679
实际上 当状态集合比较大的时候

00:01:37.680 --> 00:01:40.860
有限状态机是相当难以维护的

