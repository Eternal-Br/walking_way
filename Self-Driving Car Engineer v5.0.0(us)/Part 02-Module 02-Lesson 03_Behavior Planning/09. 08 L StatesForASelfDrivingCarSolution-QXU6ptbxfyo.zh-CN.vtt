WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.585
在准备这个课程时 虽然我们知道我们的重点是讲述高速路上的驾驶

00:00:03.585 --> 00:00:07.714
但是 我们仍然不太确定我们的有限状态机将使用哪些状态

00:00:07.714 --> 00:00:09.644
很快 我们确定了三种状态

00:00:09.644 --> 00:00:11.279
因为 在我们看来

00:00:11.279 --> 00:00:15.750
这三种状态是最基本的最小集合 而仅仅一个车道变换状态显然是不够的

00:00:15.750 --> 00:00:19.259
我们同时也排除掉了许多其他状态

00:00:19.260 --> 00:00:22.860
因为大部分这些状态可以看做是维持车道状态的不同实现

00:00:22.859 --> 00:00:24.750
对于其他两种我们选择的状态 准备向左车道变换

00:00:24.750 --> 00:00:27.579
和准备向左车道变换 我们也并不是特别确定是否要选择

00:00:27.579 --> 00:00:31.195
但是 最后 我们还是决定在本课程中使用这两种状态

00:00:31.195 --> 00:00:34.325
所以我们或许应该阐明一下我们使用这些状态的目的何在

00:00:34.325 --> 00:00:36.510
让我们设想一下 如果没有这两种预先状态

00:00:36.509 --> 00:00:39.086
机动车的行为将会如何

00:00:39.087 --> 00:00:42.365
首先 让我解释一下这个例子如何工作

00:00:42.365 --> 00:00:46.535
这里有一个两车道高速路 上面有向右的车辆在行驶

00:00:46.534 --> 00:00:50.579
这是我们的无人车 别的车辆用红色标识

00:00:50.579 --> 00:00:51.780
当你看这个动画的时候

00:00:51.780 --> 00:00:54.344
你可以设想你正在一架直升机上向下看

00:00:54.344 --> 00:00:57.960
直升机和无人车目标速度相同

00:00:57.960 --> 00:01:01.679
这些红色线条指示出别的车辆的相对速度

00:01:01.679 --> 00:01:04.829
在这种情况下 车道一上的车辆移动得比无人车快

00:01:04.829 --> 00:01:08.204
车道二上的车辆移动得比无人车慢

00:01:08.204 --> 00:01:11.609
当我们只有三种状态 以及第四种“就绪”状态时

00:01:11.609 --> 00:01:13.984
有限状态机看起来像这样

00:01:13.984 --> 00:01:19.465
我们假设 当我们开始观察时 我们已经处于保持车道状态

00:01:19.465 --> 00:01:23.640
现在 在我们观测我们使用有限状态机的车辆接下来会怎么做之前

00:01:23.640 --> 00:01:25.829
让我来解释一下这些状态的含义

00:01:25.829 --> 00:01:28.010
保持车道状态试图通过保持车辆位置在接近车道中线附近

00:01:28.010 --> 00:01:31.295
来保持在当前车道行驶

00:01:31.295 --> 00:01:32.900
所以 考虑下限定坐标

00:01:32.900 --> 00:01:37.385
我们可以说目标 d 对于该车而言等同于 d 对于车道的情况

00:01:37.385 --> 00:01:38.900
但是对于 s 方向

00:01:38.900 --> 00:01:42.765
保持车道状态则试图以可行的目标车速行驶

00:01:42.765 --> 00:01:46.969
如果目标车速不可行 那么该车会以某个该车道上的最安全车速行驶

00:01:46.969 --> 00:01:51.519
对于车道变换 目标是从最初的车道移动到目标车道

00:01:51.519 --> 00:01:55.484
d 行为表示你可能期待根据情况从左向右移动

00:01:55.484 --> 00:01:58.090
所以目标 d 意味着

00:01:58.090 --> 00:02:00.823
ego 车当前车道两侧车道上的任意点

00:02:00.823 --> 00:02:03.509
保持车道的规则同样适用于 s

00:02:03.510 --> 00:02:05.969
车辆将试图以目标速度行驶

00:02:05.969 --> 00:02:07.215
但是 如果那个速度行不通

00:02:07.215 --> 00:02:11.039
那么 他将以某种安全速度行驶

00:02:11.039 --> 00:02:14.804
现在 让我们观察车辆的行为 当我们及时向前移动

00:02:14.805 --> 00:02:16.550
对于最开始的几个时间步进

00:02:16.550 --> 00:02:19.260
我们看到 当左边车道上的车辆超过 ego 的时候

00:02:19.259 --> 00:02:23.185
ego 车越来越接近 2.2 车

00:02:23.185 --> 00:02:25.860
然后 在这个时间段中 这辆车继续留在保持车道状态中

00:02:25.860 --> 00:02:29.470
因为没有足够的空档来做安全变道操作

00:02:29.469 --> 00:02:31.439
注意 此时 ego 开始减速了

00:02:31.439 --> 00:02:34.139
即使状态未更改

00:02:34.139 --> 00:02:37.079
因为保持车道状态包含减速行为

00:02:37.080 --> 00:02:39.145
当目标速度不可能

00:02:39.145 --> 00:02:41.340
它会调到安全速度

00:02:41.340 --> 00:02:46.800
此时 该车决策到 左变道是最佳操作

00:02:46.800 --> 00:02:48.250
现在 处于变道状态

00:02:48.250 --> 00:02:52.645
大家可以看到 该车开始左移 但是速度没变

00:02:52.645 --> 00:02:56.685
这与我们预先定义的变道行为一致

00:02:56.685 --> 00:02:59.115
这时候 该车已经越过车道线

00:02:59.115 --> 00:03:01.435
变道成功

00:03:01.435 --> 00:03:05.383
现在 它希望切回到车道保持状态

00:03:05.383 --> 00:03:06.750
然后当切换成功

00:03:06.750 --> 00:03:12.030
它马上开始加速 达到新车道的安全车速

00:03:12.030 --> 00:03:15.224
现在 它和左边车道上的车辆以同样速度行驶

00:03:15.224 --> 00:03:19.634
它会保持该速度 直到它越过右边车道上的车辆

00:03:19.634 --> 00:03:22.109
尽管以上操作会成功 但是这里还有些问题

00:03:22.110 --> 00:03:24.600
首先 即使左边有个明显空档

00:03:24.599 --> 00:03:26.969
因此我们可以进入左边车道

00:03:26.969 --> 00:03:30.840
但是我们没有办法告诉车辆 让它主动和空档并行

00:03:30.840 --> 00:03:33.950
我们不得不等待 直到空档靠近我们

00:03:33.949 --> 00:03:36.959
其次 这种变道不是那么安全

00:03:36.960 --> 00:03:39.060
理想情况下 在真正变道前

00:03:39.060 --> 00:03:42.719
我们可以接近左边车道的车速  

00:03:42.719 --> 00:03:46.500
第三 在这个场景中 何时我们打开转向灯 我们并不清楚

00:03:46.500 --> 00:03:50.115
打开灯的信号是行为团队的职责

00:03:50.115 --> 00:03:52.050
理想情况下 在我们具体进行车道变换前几秒钟

00:03:52.050 --> 00:03:55.250
我们希望打开它

00:03:55.250 --> 00:03:56.715
使用这个有限状态机

00:03:56.715 --> 00:03:58.575
做到这一点比较困难

00:03:58.574 --> 00:04:00.149
为了解决上述问题

00:04:00.150 --> 00:04:02.700
我们可以引入一个变道准备状态

00:04:02.699 --> 00:04:06.989
在这个状态中 我们做变道前准备 无论是向左还是向右

00:04:06.990 --> 00:04:09.240
哪意味着在 d 方向 我们仍然能够

00:04:09.240 --> 00:04:11.670
待在当前车道 但是在 s 方向

00:04:11.669 --> 00:04:16.560
我们将试图匹配相邻车道空档的位置和速度

00:04:16.560 --> 00:04:20.089
这也是我们打开转向指示灯的时间

00:04:20.089 --> 00:04:24.250
我们也改变状态机 它起来像这样

00:04:24.250 --> 00:04:29.589
注意 变道操作之前必定有一个准备变道状态

00:04:29.589 --> 00:04:32.099
我们来看看具体过程

00:04:32.100 --> 00:04:34.939
在第一个步进时间点上 通过追踪这里的空档

00:04:34.939 --> 00:04:37.264
我们能够决定 开始准备一个变道操作 

00:04:37.264 --> 00:04:40.365
此操作会让我们马上开始减速

00:04:40.365 --> 00:04:42.800
在这个时间点上 车辆也许开始慢慢加速

00:04:42.800 --> 00:04:46.160
以接近左边车道的速度

00:04:46.160 --> 00:04:50.245
然后在这个点上 车辆已经达到左边车道车辆行驶速度

00:04:50.245 --> 00:04:55.170
并且处于换道操作的有利位置

00:04:55.170 --> 00:04:58.410
从这时候开始 所有事情看起来和以前非常相似

00:04:58.410 --> 00:05:00.005
通过这些添加的状态

00:05:00.004 --> 00:05:03.000
现在 我们可以更加安全有效地进行换道操作

