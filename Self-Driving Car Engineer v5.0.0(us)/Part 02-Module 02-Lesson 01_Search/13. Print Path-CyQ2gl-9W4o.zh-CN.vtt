WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.000
这里是我的解

00:00:02.000 --> 00:00:05.000
我创建了一个称为 action 的域 其大小和网格相同

00:00:05.000 --> 00:00:10.000
这里会为每个单元格存储到达该单元格的动作

00:00:10.000 --> 00:00:15.000
例如 如果目标单元格在这里 那么这个单元格的动作将是

00:00:15.000 --> 00:00:17.000
从前一个单元格向下

00:00:17.000 --> 00:00:20.000
这时候 这个单元格会存储一个向下动作的索引值

00:00:20.000 --> 00:00:25.000
这看起来有些复杂 不过编程实现的话还是相当容易的

00:00:25.000 --> 00:00:31.000
在我的节点扩展代码中 我从 x 到达 x2 在前面我们讨论过这段 

00:00:31.000 --> 00:00:38.000
我现在为后续状态 x2 和 y2 添加一个命令

00:00:38.000 --> 00:00:42.000
存储到达它的动作

00:00:42.000 --> 00:00:46.000
大家注意 我并没有把它和 x y 也就是起始状态联系起来 

00:00:46.000 --> 00:00:51.000
因为从起始状态 我将尝试多个不同动作

00:00:51.000 --> 00:00:54.000
而我并不知道哪一个动作是成功的

00:00:54.000 --> 00:00:57.000
当我到达状态2 并第一次扩展它时

00:00:57.000 --> 00:01:01.000
它成为优化路径的一部分

00:01:01.000 --> 00:01:05.000
所以我会把动作和接续状态关联

00:01:05.000 --> 00:01:07.000
而不是起始状态

00:01:07.000 --> 00:01:08.000
这里有些微妙 但是却非常重要

00:01:08.000 --> 00:01:12.000
如果你能正确执行这个操作 你就完全能明白我说的意思

00:01:12.000 --> 00:01:15.000
现在我有了一个域 来存储这里的所有这些状态

00:01:15.000 --> 00:01:18.000
也就是到达它们的动作

00:01:18.000 --> 00:01:22.000
但是我还没有把它们可视化地展示出来 像这里一样

00:01:22.000 --> 00:01:26.000
上面这些结果会被存入一个称为策略或者规划的域里面

00:01:26.000 --> 00:01:33.000
这个域我会用空值初始化 它的网格大小和这里的这个域相同

00:01:33.000 --> 00:01:36.000
该域的值我最后会在这里打印出来

00:01:36.000 --> 00:01:43.000
在那个域里面 我把目标位置用星号标示出来 在这里设置

00:01:43.000 --> 00:01:46.000
然后我从目标回溯

00:01:46.000 --> 00:01:53.000
现在我开始从目标向起点反向迭代所有的路径

00:01:53.000 --> 00:01:57.000
只要未达到起点 就一直迭代

00:01:57.000 --> 00:02:00.000
我把反向动作应用到单元格上

00:02:00.000 --> 00:02:04.000
现在 通过获取当前状态 并减去之前我使用同样方式添加进去的动作

00:02:04.000 --> 00:02:10.000
最终我找到了初始状态

00:02:10.000 --> 00:02:12.000
并找到了实际被应用的动作

00:02:12.000 --> 00:02:16.000
第一次执行这个时 x y 是目标状态

00:02:16.000 --> 00:02:19.000
x2 和 y2 变成了上一个状态

00:02:19.000 --> 00:02:23.000
我已经知道在目标状态 动作是向下的

00:02:23.000 --> 00:02:27.000
如果我应用反向动作 那么我向上到达这里

00:02:27.000 --> 00:02:31.000
然后 我把策略域标记为最初状态

00:02:31.000 --> 00:02:36.000
使用这个特殊符号和这个特殊动作

00:02:36.000 --> 00:02:38.000
然后我继续追溯

00:02:38.000 --> 00:02:43.000
我设置 x he y 到状态 x2 和 y2 然后继续前行一步

00:02:43.000 --> 00:02:49.000
在此过程中 我会沿着这条路径反向地一步一步行进 并打印出关联的动作

00:02:49.000 --> 00:02:51.000
结果会和这张表格一模一样

00:02:51.000 --> 00:02:55.000
是不是感觉有点精妙？ 大家最好把现在讲的当做一堂人工智能课的内容

00:02:55.000 --> 00:02:57.000
也许你也能便写出同样精妙的代码

00:02:57.000 --> 99:59:59.999
编写这里的代码花费了我一些时间 不过最后我还是调试成功了

