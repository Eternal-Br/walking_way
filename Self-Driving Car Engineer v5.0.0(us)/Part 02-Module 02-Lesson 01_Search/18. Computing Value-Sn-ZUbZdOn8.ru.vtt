WEBVTT
Kind: captions
Language: ru

00:00:00.000 --> 00:00:04.000
Давайте рассмотрим очень простой кусок кода, реализующий этот алгоритм планирования.

00:00:04.000 --> 00:00:09.000
У нас есть сетки здесь, как и раньше с нулями и единицами. Вы знакомы с этим.

00:00:09.000 --> 00:00:13.000
Отправная точка сверху слева, местоположение цели внизу справа.

00:00:13.000 --> 00:00:19.000
Мы можем создать произвольных препятствий как стена здесь и стену здесь

00:00:19.000 --> 00:00:23.000
Это вынуждает робот в вид S-кривой вокруг угла.

00:00:23.000 --> 00:00:29.000
Если запустить этот код с этой таблицей, что я получаю — это таблица, которая выглядит как эта.

00:00:29.000 --> 00:00:33.000
Это для каждого из положений, которое является положение-стена.

00:00:33.000 --> 00:00:35.000
Он говорит мне, что это оптимальное что нужно сделать.

00:00:35.000 --> 00:00:40.000
Здесь он говорит, идти на юг. Здесь говорит идти справа. Здесь говорит идти вверх.

00:00:40.000 --> 00:00:43.000
Здесь говорит идти снова направо и идти на юг.

00:00:43.000 --> 00:00:46.000
Реализовать что четное положение, и я не склонен их всех достигать,

00:00:46.000 --> 00:00:49.000
как этот здесь и на более чем здесь, имеет оптимальную тактику

00:00:49.000 --> 00:00:53.000
и действий, связанных, потому что на самом деле нету начального состояния.

00:00:53.000 --> 00:00:55.000
Есть только цели положения здесь.

00:00:55.000 --> 00:01:00.000
Спецификация начального состояния не влияет на этот результат.

00:01:00.000 --> 00:01:04.000
Как мы можем вычислить это эффективно?

00:01:04.000 --> 00:01:09.000
Позвольте мне сделать простой пример мира как этот с препятствием здесь.

00:01:09.000 --> 00:01:12.000
Скажем наша цель находится в углу здесь.

00:01:12.000 --> 00:01:15.000
Вместо того, говорю вам, как для расчета оптимальной тактики,

00:01:15.000 --> 00:01:18.000
который назначает действия каждого из этих клеток

00:01:18.000 --> 00:01:20.000
Позвольте мне рассказать вам о «значение.»

00:01:20.000 --> 00:01:28.000
«Значение функции» связывается с каждой ячейкой сетки, длина кратчайшего пути к достижению цели.

00:01:28.000 --> 00:01:31.000
Для цели очевидно, это 0.

00:01:31.000 --> 00:01:34.000
Для каждой смежной ячейки цели это очевидно, что 1.

00:01:34.000 --> 00:01:44.000
Для ребят здесь 2, 3, 4, 5, 6 и 7.

00:01:44.000 --> 00:01:51.000
Это рекурсивно рассчитано путем вычитания оптимальных соседей x-prime, y-prime,

00:01:51.000 --> 00:01:56.000
учитывая ее значение и путем добавления издержек требуется, чтобы добраться туда,

00:01:56.000 --> 00:01:59.000
в нашем примере будет плюс 1.

00:01:59.000 --> 00:02:02.000
Применяя это обновление уравнение рекурсивно,

00:02:02.000 --> 00:02:04.000
Мы можем достичь этой функции значение здесь.

00:02:04.000 --> 00:02:08.000
Как только у нас есть эта функция значение, мы находим, что действие оптимального управления

00:02:08.000 --> 00:02:15.000
получается путем минимизации значение, являющееся пониженным типом действий.

00:02:15.000 --> 00:02:18.000
Позвольте мне дать вам экзамен.

00:02:18.000 --> 00:02:22.000
В этом мире с местоположение цели здесь,

00:02:22.000 --> 09:59:59.000
Хотелось бы понять, что такое значение ячейки в нижнем правом углу.

