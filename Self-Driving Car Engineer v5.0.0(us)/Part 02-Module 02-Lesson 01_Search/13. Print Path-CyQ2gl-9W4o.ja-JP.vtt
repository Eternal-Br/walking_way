WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:02.000
これが私の解答です

00:00:02.000 --> 00:00:05.000
グリッドと同じサイズの action と呼ばれるフィールドを作成します

00:00:05.000 --> 00:00:10.000
ここで 各セルに対して到達するにはどのような動作を取るか記憶させます

00:00:10.000 --> 00:00:15.000
たとえばこのゴールのセルに到達するには

00:00:15.000 --> 00:00:17.000
前のセルから下に進む action を実行します

00:00:17.000 --> 00:00:20.000
このセルには下へ進むという action インデックスを設定します

00:00:20.000 --> 00:00:25.000
少し面倒ですがプログラミング自体は非常に簡単だということが分かります

00:00:25.000 --> 00:00:31.000
私が作成したノード展開ルーチンでは以前に説明したように x が x2 になっています

00:00:31.000 --> 00:00:38.000
今回は連続する状態である x2 と y2 に対するコマンドを 1 つだけ追加します

00:00:38.000 --> 00:00:42.000
そこに到達するために取る action を記憶させます

00:00:42.000 --> 00:00:46.000
注意してほしいことは これを from 状態である x と y に関連付けていないことです

00:00:46.000 --> 00:00:51.000
from 状態ではさまざまな action を試行しているため

00:00:51.000 --> 00:00:54.000
どの action が成功するのかまだわからないからです

00:00:54.000 --> 00:00:57.000
2 つの状態になった時点で初めてノードを展開します

00:00:57.000 --> 00:01:01.000
よってこの部分が最適パスの一部として展開されます

00:01:01.000 --> 00:01:05.000
この部分の最初の状態ではなく

00:01:05.000 --> 00:01:07.000
連続する状態と action を関連付けています

00:01:07.000 --> 00:01:08.000
これはとても重要です

00:01:08.000 --> 00:01:12.000
このことを正しく理解すれば これからお話する内容も把握できるでしょう

00:01:12.000 --> 00:01:15.000
さて これらすべての状態と

00:01:15.000 --> 00:01:18.000
そこへ到達するための action を記憶するフィールドが完成しました

00:01:18.000 --> 00:01:22.000
しかしここにはわかりやすい表示がありません

00:01:22.000 --> 00:01:26.000
これは policy や plan と呼ばれるフィールドへコンパイルされます

00:01:26.000 --> 00:01:33.000
これはブランクで初期化されますが このフィールドと同じサイズのグリッドとなっていて

00:01:33.000 --> 00:01:36.000
最終的にこの下の部分に出力されます

00:01:36.000 --> 00:01:43.000
この policy フィールドにゴールの位置 * を明示して ここでリセットします

00:01:43.000 --> 00:01:46.000
そして ゴールからさかのぼります

00:01:46.000 --> 00:01:53.000
ゴール位置である x と y から繰り返しますが ここではスタート位置まですべて逆の順序となります

00:01:53.000 --> 00:01:57.000
x と y が initial の位置にならない限り繰り返します

00:01:57.000 --> 00:02:00.000
私は逆の action を適用しました

00:02:00.000 --> 00:02:04.000
現在の状態を採用し また action フィールドを使用して

00:02:04.000 --> 00:02:10.000
どのような動作が使用されているのか突き止めるために以前追加したものと同じ方法で

00:02:10.000 --> 00:02:12.000
動作を差し引いて 1 つ前の状態を見つけます

00:02:12.000 --> 00:02:16.000
その場合 最初の時点で x と y をゴール状態とすると

00:02:16.000 --> 00:02:19.000
 x2 と y2 が直前の状態になります

00:02:19.000 --> 00:02:23.000
ここでゴール状態では action はダウン動作であることがわかりました

00:02:23.000 --> 00:02:27.000
また負を適用すると アップ動作となりここに到達します

00:02:27.000 --> 00:02:31.000
次に最初の状態の policy フィールドにマークし

00:02:31.000 --> 00:02:36.000
ここにある特定の action と関連した特別なシンボルとします

00:02:36.000 --> 00:02:38.000
そしてこれを用います

00:02:38.000 --> 00:02:43.000
x と y をそれぞれ x2 と y2 とし 先に進めます

00:02:43.000 --> 00:02:49.000
この時 1 ステップごとにパスを戻って関連付けられている action を出力すると

00:02:49.000 --> 00:02:51.000
まさにこの状態を得ます

00:02:51.000 --> 00:02:55.000
非常に複雑ですが このコースを受講する皆さんは

00:02:55.000 --> 00:02:57.000
複雑なプログラミングの経験があるかと思います

00:02:57.000 --> 99:59:59.999
私自身もプログラミングするのに少し時間がかかりましたが 最後には完成しました

