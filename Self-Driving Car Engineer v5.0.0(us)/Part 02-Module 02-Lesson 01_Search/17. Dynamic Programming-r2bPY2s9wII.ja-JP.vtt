WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:04.000
プランニングの代わりのメソッドを説明します

00:00:04.000 --> 00:00:09.000
この代わりのメソッドは 多くの利点と欠点があります

00:00:09.000 --> 00:00:11.000
動的計画法といい A-star のようで

00:00:11.000 --> 00:00:14.000
一番近いパスを見つけます

00:00:14.000 --> 00:00:20.000
A-star で行ったように 1 つ以上のゴールの位置を環境の地図に配置します

00:00:20.000 --> 00:00:22.000
まずは 1 つのゴールの位置を配置しましょう

00:00:22.000 --> 00:00:26.000
それが出力するものは 可能な開始位置からのベストパスです

00:00:26.000 --> 00:00:30.000
このプランニングテクニックは 1 つの開始位置に制限するのではなく

00:00:30.000 --> 00:00:35.000
どの開始位置も可能ですどうしてこれを気にするのでしょうか?

00:00:35.000 --> 00:00:37.000
例を示しましょう

00:00:37.000 --> 00:00:43.000
自分が このような環境での Google 自動運転車と想定します

00:00:43.000 --> 00:00:47.000
ここの小さい道にいます 右に曲がるか聞かれましたが

00:00:47.000 --> 00:00:50.000
ゴールはこっちです

00:00:50.000 --> 00:00:57.000
前のように ここには 2 つの異なる車線があります 左に曲がる車線と直進する車線です

00:00:57.000 --> 00:01:00.000
直進の車線にいる場合は ゴールにたどり着くには

00:01:00.000 --> 00:01:04.000
ここのブロックをぐるっと回ってこの方角に行くしかありません

00:01:04.000 --> 00:01:06.000
この例を見たことがあると思います

00:01:06.000 --> 00:01:09.000
ここで言いたいことは これとは異なります

00:01:09.000 --> 00:01:15.000
それは ここで車線変更しようとしてもできないかもしれませんどうしてできないのでしょうか?

00:01:15.000 --> 00:01:21.000
それは ここにとても大きなトラックがあるかもしれません

00:01:21.000 --> 00:01:26.000
トラックが行くのを待ってから右車線に行こうとすると

00:01:26.000 --> 00:01:31.000
自分の後ろで待っている車がクラクションを鳴らすかもしれません

00:01:31.000 --> 00:01:34.000
トラックを行くのを待っていられないと思います

00:01:34.000 --> 00:01:37.000
環境は推定でしかないということです

00:01:37.000 --> 00:01:40.000
アクションができるかどうかは決定できません

00:01:40.000 --> 00:01:43.000
プランニングではこれを無視してきましたが 実際にはこれは起こりうるのです

00:01:43.000 --> 00:01:50.000
実際には 自分で見つけれるかもしれません--おお ここにいるどうやってここにきたのでしょうか?

00:01:50.000 --> 00:01:54.000
世の中が推定したからここに来たのです ここのトラック

00:01:54.000 --> 00:01:57.000
この間抜けなトラックはここに入れてくれませんでした

00:01:57.000 --> 00:02:02.000
これは このような位置にはプランが必要だということを言っているのです

00:02:02.000 --> 00:02:05.000
でも ほかの位置でもプランが必要になることがあります

00:02:05.000 --> 00:02:10.000
動的計画法では すべての位置でのプランを提供します

00:02:10.000 --> 00:02:19.000
この環境をグリッド上にゴールの場所と障害を含めて再現すると

00:02:19.000 --> 00:02:26.000
動的計画法は すべてのシングルグリッドセルで行う最適なアクションを提供します

00:02:26.000 --> 00:02:29.000
見てわかるように 各グリッドセルにはラベルがあります

00:02:29.000 --> 00:02:32.000
そのラベルは 通常ポリシーと呼ばれ ポリシーはアクションにグリッドセルを描く関数です

00:02:32.000 --> 00:02:39.000
この場合のアクションは

00:02:39.000 --> 00:02:44.000
左に動く 下に動く 右に動く または上に動くです

00:02:44.000 --> 00:02:51.000
動的計画法を使ってポリシーを計算します

00:02:51.000 --> 00:02:55.000
このようなグリッドの世界とこのようなゴールステートが提供され

00:02:55.000 --> 00:03:00.000
各グリッドセルを出力するソフトウェアを記述します

00:03:00.000 --> 00:03:05.000
一番するべきことは ロボット自身にそこを見つけさせることです

00:03:05.000 --> 00:03:07.000
それには A-star 以外の別のアルゴリズムが必要です

00:03:07.000 --> 00:03:10.000
アルゴリズムがかかわる計算がもっと増えます

00:03:10.000 --> 99:59:59.999
前にも言ったように それがロボットのパスプランニングの動的計画法と呼ばれます

