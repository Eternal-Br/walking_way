WEBVTT
Kind: captions
Language: ru

00:00:00.000 --> 00:00:05.000
Давайте теперь иметь некоторую потеху и применить это к фактической автомобиля проблему.

00:00:05.000 --> 00:00:10.000
Один, я буду использовать немного упрощен, как всегда,

00:00:10.000 --> 00:00:15.000
но он относиться к реальным миром путь планирования, как это делается, например, Google Maps.

00:00:15.000 --> 00:00:17.000
Предположим, что у нас есть автомобиль вниз здесь.

00:00:17.000 --> 00:00:23.000
Этот автомобиль теперь имеет свое состояние x, y и ориентации, тета.

00:00:23.000 --> 00:00:34.000
По ориентации для простоты выбирается из 4 возможных направлений--вверх, вниз, влево и вправо.

00:00:34.000 --> 00:00:39.000
Как я викторины вам в начале, я хотел добраться до места здесь, перед слева.

00:00:39.000 --> 00:00:46.000
Понимаю, что теперь пространства государства является 3-мерной, так же, как в нашем примере локализации.

00:00:46.000 --> 00:00:50.000
Я хотел бы теперь реализации динамического программирования планировщик

00:00:50.000 --> 00:00:53.000
Это дает мне оптимальный путь для идти здесь здесь

00:00:53.000 --> 00:00:55.000
и что меня поиграем с функций издержек.

00:00:55.000 --> 00:00:58.000
Есть три принципа действия.

00:00:58.000 --> 00:01:05.000
Один является двигаться в котором автомобиль просто идет 1 ячейке вперед в своей нынешней ориентации.

00:01:05.000 --> 00:01:10.000
Это не получится вообще. Что могут применяться в любом месте в лабиринте в любом направлении.

00:01:10.000 --> 00:01:14.000
Можно повернуть налево, а затем перейти.

00:01:14.000 --> 00:01:20.000
Этот автомобиль в этой позиции в ячейку над здесь мог бы выбрал

00:01:20.000 --> 00:01:23.000
Поверните налево и двигаться, что делает его наведите здесь.

00:01:23.000 --> 00:01:26.000
Последний является повернуть направо и двигаться,

00:01:26.000 --> 00:01:29.000
в этом случае она будет, от этой ячейки над здесь,

00:01:29.000 --> 00:01:31.000
Переверните здесь и голову в этом направлении.

00:01:31.000 --> 00:01:33.000
Вот наш мир снова.

00:01:33.000 --> 00:01:36.000
Вы можете видеть есть улица здесь, является судоходным, один над здесь, что судоходна.

00:01:36.000 --> 00:01:39.000
Вы видите петлю на правой стороне.

00:01:39.000 --> 00:01:43.000
Помните, что теперь это государство пространство является 3-мерной, не 2-мерных.

00:01:43.000 --> 00:01:47.000
Наша цель – чтобы перейти к ячейке [2, 0], который является одним над здесь.

00:01:47.000 --> 00:01:50.000
Наши начальное состояние является здесь,

00:01:50.000 --> 00:01:54.000
и начальное состояние имеет не только позицию [4, 3] но также ориентация 0.

00:01:54.000 --> 00:01:57.000
Это 3-мерного государство.

00:01:57.000 --> 00:02:02.000
Вот мои ориентации--0, 1, 2 и 3.

00:02:02.000 --> 00:02:05.000
Первый из них делает робот идти вверх, второй идем налево,

00:02:05.000 --> 00:02:08.000
Третий один идти вниз, и четвертый идти прямо.

00:02:08.000 --> 00:02:11.000
Вот имена, связанные с ним---вверх, влево, вниз и вправо.

00:02:11.000 --> 00:02:13.000
Эта вещь здесь интересно.

00:02:13.000 --> 00:02:16.000
Как действия у нас есть 3 действия.

00:02:16.000 --> 00:02:20.000
Мы можем добавить в индекс ориентации -1, 0 или 1.

00:02:20.000 --> 00:02:24.000
Если мы добавим -1 мы перепрыгнуть 1 вверх в массиве циклических здесь,

00:02:24.000 --> 00:02:27.000
Это так же, как делает правый поворот.

00:02:27.000 --> 00:02:34.000
Например, если вы идете от идем налево идти вверх, что так же, как поворотный правый.

00:02:34.000 --> 00:02:38.000
Если мы добавим + 1, это то же самое, как поворот налево.

00:02:38.000 --> 00:02:41.000
Если мы оставить без изменений, ориентация

00:02:41.000 --> 00:02:46.000
Тогда мы идем прямо, который обозначается этим символом хэш здесь.

00:02:46.000 --> 00:02:48.000
Эти действия поставляются с различными затратами.

00:02:48.000 --> 00:02:51.000
Сейчас левый поворот расходы мне 2, идя прямые затраты меня 1,

00:02:51.000 --> 00:02:54.000
и собирается правый расходы мне 1 а, который, как мы все знаем,

00:02:54.000 --> 00:02:58.000
делает левый поворот предпочтительное решение здесь.

00:02:58.000 --> 00:03:04.000
Действительно как я запускаю его, вы можете увидеть, как автомобиль оказывается осталось здесь местоположение цели.

00:03:04.000 --> 00:03:10.000
Если я, чтобы увеличить стоимость для левой действий до 20, мое решение изменяется.

00:03:10.000 --> 00:03:13.000
Вы можете увидеть тире автомобиль прямо над здесь, оказывается прямо над здесь,

00:03:13.000 --> 00:03:18.000
прямо здесь, прямо над здесь и затем идет прямо к местоположение цели.

00:03:18.000 --> 00:03:21.000
Это программное обеспечение, я хочу вам реализовать. Существует еще один намек.

00:03:21.000 --> 00:03:27.000
Сама функция значение 3-мерного, и вот код, который я использую.

00:03:27.000 --> 00:03:33.000
Не обязательно наиболее эффективным, но она имеет внутри 4 идентичных массивы

00:03:33.000 --> 00:03:37.000
размера сетки, объединены в megagrid

00:03:37.000 --> 00:03:41.000
и инициализируется все на очень большое значение — 999 в данном случае.

00:03:41.000 --> 00:03:47.000
Вам нужно функции так же, как эти, и оказывается, это делает его более трудным для написания кода.

00:03:47.000 --> 00:03:50.000
Это наш последний викторины в этой лекции.

00:03:50.000 --> 00:03:53.000
Наши последние программирования уступки и вы могли бы потратить некоторое время.

00:03:53.000 --> 09:59:59.000
Он взял меня некоторое время, чтобы программировать себя, чтобы получить выход, как это здесь.

