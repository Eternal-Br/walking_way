WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:03.000
値関数を計算するものを実装してみましょう

00:00:03.000 --> 00:00:05.000
もう一度よくわかっているグリッドを見てみましょう

00:00:05.000 --> 00:00:09.000
ここに縦の障害があり ここには T 字型の障害があります

00:00:09.000 --> 00:00:12.000
ゴールの場所は下の右端です

00:00:12.000 --> 00:00:16.000
実行すると ここのこのテーブルを取得します グリッドのそれぞれの障害の値に 99を設定したので

00:00:16.000 --> 00:00:23.000
少し見にくいです

00:00:23.000 --> 00:00:28.000
ここのすべての 99 は グリッドの実際の障害に対応します

00:00:28.000 --> 00:00:31.000
そこから ゴールの場所が 0--

00:00:31.000 --> 00:00:38.000
1, 2, 3, 4, 5 の値であることがわかります ここのこれらの 2 つの状態は 6 と続いていきます

00:00:38.000 --> 00:00:43.000
このテーブルが入力になる関数を実装して

00:00:43.000 --> 00:00:47.000
 はっきりとしているここのこのテーブルを計算するべきです

00:00:47.000 --> 00:00:50.000
ここでは これと全く同じテーブルを出力できるはずです

00:00:50.000 --> 00:00:55.000
実際 定義を変更した場合 たとえば

00:00:55.000 --> 00:01:00.000
ここのパスを開けて あなたの関数は

00:01:00.000 --> 00:01:04.000
ここの この車線に真っ直ぐ広げている値がわかるところの

00:01:04.000 --> 00:01:06.000
とても異なる値関数を計算するはずです

00:01:06.000 --> 00:01:10.000
これを実装する前に 前と同じように 異なるアクション 上 左 下 右のΔテーブルを

00:01:10.000 --> 00:01:13.000
提供します

00:01:13.000 --> 00:01:18.000
また あとで出てくるクイズで使用するものも提供します

00:01:18.000 --> 99:59:59.999
ステップのコストは 1 になるはずです

