WEBVTT
Kind: captions
Language: ja

00:00:00.360 --> 00:00:03.000
ここに取り組みがいのある
ソフトウェアを用意しました

00:00:03.000 --> 00:00:08.000
引数を加えてまったく異なるものが
出力されるようにしてください

00:00:08.000 --> 00:00:13.000
これはexpandとは関係ありませんが新たに
よく似たデルタ構造体を実装する必要があります

00:00:13.000 --> 00:00:15.000
これが出力です　確認してみましょう

00:00:15.000 --> 00:00:19.980
右向きの矢印はここにあるセルで取るべき
最適な動作を示しています

00:00:19.980 --> 00:00:23.000
以前と同じく同程度の最適な動作が
他にあるかもしれません

00:00:23.000 --> 00:00:26.000
しかし ここでは右に進む動作が選択されています

00:00:26.000 --> 00:00:29.890
この小文字のvは下向きの矢印を表しています

00:00:29.890 --> 00:00:34.500
矢印は再び右、右、右、右、下、下、下となります

00:00:34.500 --> 00:00:39.000
最後に＊にたどりつきます
これはゴールの位置を表しています

00:00:39.000 --> 00:00:42.000
この迷路を少し変更してみましょう

00:00:42.000 --> 00:00:48.000
ここを壁で閉じて
下の方の壁を取り除いてから実行します

00:00:48.000 --> 00:00:50.000
ポリシーはこのようになります

00:00:50.000 --> 00:00:54.000
グリッドで確認するとこれがゴールに至る
唯一の経路であることが分かります

00:00:54.000 --> 00:00:58.720
この特定の経路が出力されるような
ソフトウェアを作成してください

00:01:00.000 --> 00:01:05.000
その一部として使用するのが
私が少し改良を加えたdelta＿nameです

00:01:05.000 --> 00:01:08.000
これら4つの記号はそれぞれ

00:01:08.000 --> 00:01:11.000
上向き、左向き、下向き、右向きの
矢印を示しています

00:01:11.000 --> 00:01:16.000
それぞれ上、左、下、右に移動する
4つの動作に対応しています

00:01:16.000 --> 00:01:20.000
これらを使用してこの表を出力します

00:01:20.000 --> 00:01:24.000
あとで分かりますがこれを記述するのは
簡単な作業ではありません

00:01:24.000 --> 00:01:28.000
最終的なコードの量は多くありませんが
どのように動作がキャッシュされ

00:01:28.000 --> 00:01:31.000
それらの動作をこの表に割り当てるかを
慎重に考えなければいけません

00:01:31.000 --> 00:01:34.000
では難しいですが作成してみてください

00:01:34.000 --> 00:01:36.000
うまくいかなくても大丈夫です

00:01:36.000 --> 00:01:39.000
Submitボタンを押せば
内容を理解することができますし

00:01:39.000 --> 00:01:41.630
コードが表示されて先に進めます

