WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:07.000
これが私の解答です 値関数を初期化しました999 のロットがあります

00:00:07.000 --> 00:00:11.000
ポリシーは 3D の似たような関数です

00:00:11.000 --> 00:00:15.000
policy2d という関数があります これはあとでプリントします

00:00:15.000 --> 00:00:17.000
それは 2D と同じです

00:00:17.000 --> 00:00:23.000
下にスクロールしていくと

00:00:23.000 --> 00:00:29.000
[x, y] にわたって変更があり すべての方向が 4 の場合 更新関数は 動的計画法の前と全く同じです

00:00:29.000 --> 00:00:32.000
よって より深いループになります

00:00:32.000 --> 00:00:36.000
ゴールの場所がわかったら値を更新し

00:00:36.000 --> 00:00:39.000
実際に更新がある場合は 「change」 をTrue に設定し

00:00:39.000 --> 00:00:42.000
また ゴールの場所としてマークします

00:00:42.000 --> 00:00:45.000
そうでないと グリッドセルがナビゲートできる場合

00:00:45.000 --> 00:00:48.000
3 つの異なるアクションをしてみましょう ここがひっかけ部分です

00:00:48.000 --> 00:00:52.000
アクションがどうすればうまくいくのか でもとてもうまくいきます

00:00:52.000 --> 00:00:54.000
異なる 3 つのアクションを見ていきます

00:00:54.000 --> 00:00:57.000
ith アクションにタグをつけると

00:00:57.000 --> 00:01:04.000
対応方向の変更を方向 modulo 4 に追加します

00:01:04.000 --> 00:01:07.000
それは周期的なバッファで これは 1 引くことがあります

00:01:07.000 --> 00:01:10.000
同じままにすると 方向に 1 たします

00:01:10.000 --> 00:01:16.000
対応する新しいモーションモデルを x と y に適用し x2 と y2 を取得します

00:01:16.000 --> 00:01:21.000
その後 これが 最初に曲がり その後動く車のモデルです

00:01:21.000 --> 00:01:25.000
さらに下にスクロールしていくと グリッド内にある有効なグリッドセルにたどりつき それが障害ではない場合

00:01:25.000 --> 00:01:34.000
前と同じように この新しいグリッドセルの値と

00:01:34.000 --> 00:01:37.000
対応するアクションのコストに値を追加します

00:01:37.000 --> 00:01:40.000
これは形式化されておらず 今選んだアクションによって異なります

00:01:40.000 --> 00:01:43.000
これは 既存の値を超えて向上します

00:01:43.000 --> 00:01:47.000
この値を新しい値に設定して 変更を True としてマークします

00:01:47.000 --> 00:01:50.000
また 前のようにアクション名を暗記します

00:01:50.000 --> 00:01:53.000
これは 2 次元の世界で動的計画法を行ったとき

00:01:53.000 --> 00:01:57.000
前にあったコードと全く同じような効果を発揮します

00:01:57.000 --> 00:02:00.000
それで値関数を取得でき ポリシーアクションも取得できます

00:02:00.000 --> 00:02:04.000
ただし 3 次元テーブルではなく 2 次元テーブルをプリントアウトします

00:02:04.000 --> 00:02:09.000
2 次元テーブルを取得するには 初期状態に慎重になる必要があります

00:02:09.000 --> 00:02:12.000
でないと 未定義になってしまいます

00:02:12.000 --> 00:02:17.000
初期状態を x y 方向に設定させてください

00:02:17.000 --> 00:02:20.000
今することはポリシーの実行だけです

00:02:20.000 --> 00:02:26.000
最初の状態で ポリシーフォームの 3 次元テーブルを 2 次元テーブルにコピーします

00:02:26.000 --> 00:02:29.000
ここのこのハッシュマークになります

00:02:29.000 --> 00:02:32.000
ポリシーテーブルのスターをチェックして

00:02:32.000 --> 00:02:35.000
示されたようなゴール状態にはまだ達していません

00:02:35.000 --> 00:02:38.000
ポリシーテーブルにはハッシュマーク R と Lがありますが

00:02:38.000 --> 00:02:40.000
それ以外は前と同じです

00:02:40.000 --> 00:02:43.000
それがハッシュマークの場合は 方向はそのままにします

00:02:43.000 --> 00:02:45.000
それが R の場合は 右に曲がりますL は左に曲がります

00:02:45.000 --> 00:02:48.000
前に進むモーションを適用して

00:02:48.000 --> 00:02:52.000
モーションの後に対応する

00:02:52.000 --> 00:02:55.000
新しい x と y 座標を更新し

00:02:55.000 --> 00:02:58.000
方向を o2 に更新します

00:02:58.000 --> 00:03:05.000
最終的に ポリシーの 3 次元記号を 2 次元配列にコピーします

00:03:05.000 --> 00:03:07.000
これが最終的にプリントした配列です

00:03:07.000 --> 00:03:10.000
ここでのカギとなるインサイトは 3 次元のフルポリシーから

00:03:10.000 --> 00:03:14.000
ポリシーを実行する必要のある 2 次元配列に移動することです

00:03:14.000 --> 00:03:18.000
これが ここのこのテーブルに戻るためにやったことだと思います

00:03:18.000 --> 00:03:21.000
それは重要なことですこれは話していませんでしたが 既に自分で分かったことと思います

00:03:21.000 --> 99:59:59.999
でも それ以外のことは前に見た動的計画法ループと同じです

