WEBVTT
Kind: captions
Language: ru

00:00:00.000 --> 00:00:04.000
Вот моя реализация, которая должна быть довольно прямо вперед.

00:00:04.000 --> 00:00:07.000
У нас есть значение функции, которая является же размера, как мой мир

00:00:07.000 --> 00:00:10.000
и я инициализировать с 99 везде.

00:00:10.000 --> 00:00:15.000
Это должно оцениваться как достаточно большой, не конфликтующую с любым фактическим значением.

00:00:15.000 --> 00:00:19.000
Я теперь обновить функцию value число раз--не знаю, как часто--

00:00:19.000 --> 00:00:22.000
но как долго, как что-то изменить, я обновить его.

00:00:22.000 --> 00:00:26.000
Поэтому, я представил переменная «смена», который я установил значение True в начале.

00:00:26.000 --> 00:00:30.000
Хотя изменение является случай, я обновить, но я аккуратно набор изменений в значение False.

00:00:30.000 --> 00:00:34.000
Единственный способ вернуться к True является, что я на самом деле изменил что-то.

00:00:34.000 --> 00:00:38.000
Теперь я иду через все ячейки сетки в фиксированном порядке.

00:00:38.000 --> 00:00:42.000
Это случается быть не очень эффективно, но, безусловно, получает работу сделано.

00:00:42.000 --> 00:00:46.000
Я сначала проверить, если ячейки сетки, которую я рассматриваю это цель.

00:00:46.000 --> 00:00:49.000
Вот типичный случай, когда я проверить изменения.

00:00:49.000 --> 00:00:53.000
Если в настоящее время правильно задано значение 0, я ничего не делают.

00:00:53.000 --> 00:00:59.000
Если это больше, чем 0, например 99, затем я установить его до 0, и я только что изменил что-то.

00:00:59.000 --> 00:01:02.000
Таким образом я установил флаг изменения обратно в значение True.

00:01:02.000 --> 00:01:07.000
Если это не цель ячейку, то вот моя функция полное обновление.

00:01:07.000 --> 00:01:10.000
Я иду через все действия.

00:01:10.000 --> 00:01:14.000
Я проекта потенциальным следующее состояние после выполнения действия

00:01:14.000 --> 00:01:17.000
путем добавления соответствующих дельта x и y.

00:01:17.000 --> 00:01:20.000
Это дает мне x 2 и y2.

00:01:20.000 --> 00:01:24.000
Я проверить, являются ли x 2 и y2 легитимных государств.

00:01:24.000 --> 00:01:26.000
Для этого они должны быть внутри grid.

00:01:26.000 --> 00:01:31.000
Я проверить, являются ли число больше 0 и меньше, чем размер сетки.

00:01:31.000 --> 00:01:34.000
И он должен быть действие что действий судоходных ячейке.

00:01:34.000 --> 00:01:38.000
Поэтому я проверить, что координаты в сетке имеет значение 0.

00:01:38.000 --> 00:01:41.000
Если это так, я могу распространять обратно значение.

00:01:41.000 --> 00:01:46.000
Мое новое значение является значением этого будущего ячейке плюс стоимость шаг,

00:01:46.000 --> 00:01:48.000
который случается быть 1.

00:01:48.000 --> 00:01:53.000
Теперь если это значение равно лучше, чем значение, у меня уже, который означает, что он меньше,

00:01:53.000 --> 00:02:01.000
затем назначить моей первоначальной ячейки сетки это новое значение x и y, плюс конечно стоимость шаг.

00:02:01.000 --> 00:02:04.000
Тогда я знаю, что я изменил что-то.

00:02:04.000 --> 00:02:08.000
Поэтому я задать изменение «True», и повторяется процедура.

00:02:08.000 --> 00:02:11.000
Единственное, что отсутствует в самом конце, когда я сделал,

00:02:11.000 --> 00:02:14.000
Я распечатать значение функции, используя эти команды над здесь.

00:02:14.000 --> 00:02:17.000
Я должен предупредить вас, что это не очень эффективным.

00:02:17.000 --> 00:02:20.000
Почему это не эффективный причина что значение медленно распространяется

00:02:20.000 --> 00:02:23.000
от конца к началу.

00:02:23.000 --> 00:02:26.000
Но оставляя эту озабоченность в стороне, она на самом деле вычисляет функцию правильное значение.

00:02:26.000 --> 00:02:28.000
Есть способы, чтобы сделать его более эффективным.

00:02:28.000 --> 00:02:33.000
Это также интересно посмотреть, что произойдет, если я отрезал любой путь к цели.

00:02:33.000 --> 00:02:37.000
Результирующее значение функция сохранит 99s для большинства переменных состояния--

00:02:37.000 --> 09:59:59.000
именно те там, где нет действительный путь к цели.

