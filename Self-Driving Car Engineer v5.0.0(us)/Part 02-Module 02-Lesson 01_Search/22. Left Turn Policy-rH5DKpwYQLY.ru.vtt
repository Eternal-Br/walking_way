WEBVTT
Kind: captions
Language: ru

00:00:00.000 --> 00:00:07.000
Вот мое решение, я имею значение функции инициализации. Он имеет множество 999s.

00:00:07.000 --> 00:00:11.000
Политика является аналогичные функции в 3D.

00:00:11.000 --> 00:00:15.000
Затем у меня есть функция под названием policy2d, который является один, я позже собираюсь печатать.

00:00:15.000 --> 00:00:17.000
Это то же самое в 2D.

00:00:17.000 --> 00:00:23.000
Прокрутка вниз, моя функция update является точно так же, как и раньше для динамического программирования

00:00:23.000 --> 00:00:29.000
Хотя изменение существует пройти через [x, y] и все направления

00:00:29.000 --> 00:00:32.000
из которых есть 4, так что теперь более глубокого цикла.

00:00:32.000 --> 00:00:36.000
Если вы нашли местоположение цели, затем обновите значение,

00:00:36.000 --> 00:00:39.000
и если фактическое обновление, установите «изменить» в значение True

00:00:39.000 --> 00:00:42.000
а также пометить его как местоположение цели.

00:00:42.000 --> 00:00:45.000
Иначе, если наши ячейки сетки судоходен на всех,

00:00:45.000 --> 00:00:48.000
Давайте пройдемся по 3 различных действий и здесь Каверзная часть

00:00:48.000 --> 00:00:52.000
как сделать работу действий, но он работает прекрасно.

00:00:52.000 --> 00:00:54.000
Мы идем через 3 различных действий.

00:00:54.000 --> 00:00:57.000
Когда мы помечать ith действий,

00:00:57.000 --> 00:01:04.000
Мы добавляем соответствующего изменения ориентации нашей ориентации по модулю 4.

00:01:04.000 --> 00:01:07.000
Это циклический буфер, поэтому это может вычесть 1.

00:01:07.000 --> 00:01:10.000
Сохранение же будет добавить 1 ориентации.

00:01:10.000 --> 00:01:16.000
Затем мы применяем соответствующие новой модели движения к x и y для получения x 2 и y2.

00:01:16.000 --> 00:01:21.000
Затем над здесь является наша модель автомобиля, который направляет сначала и затем перемещается.

00:01:21.000 --> 00:01:25.000
Прокрутка вниз далее, если мы прибыли в ячейке действительный сетки в том, что до сих пор внутри grid

00:01:25.000 --> 00:01:34.000
и это не является препятствием, тогда как прежде мы добавить к значению

00:01:34.000 --> 00:01:37.000
значение этой новой ячейки сетки плюс стоимость соответствующих действий.

00:01:37.000 --> 00:01:40.000
Это non-uniform, в зависимости от того, какие меры мы выбираем сейчас.

00:01:40.000 --> 00:01:43.000
Это улучшает существующее значение.

00:01:43.000 --> 00:01:47.000
Это значение будет новое значение, и мы отмечаем изменения как True.

00:01:47.000 --> 00:01:50.000
Мы также запомнить имя действия как раньше.

00:01:50.000 --> 00:01:53.000
Это все фактически тот же код, как у нас было раньше

00:01:53.000 --> 00:01:57.000
Когда мы сделали динамического программирования в мире, 2-мерных.

00:01:57.000 --> 00:02:00.000
Он получает нас значение функции, и он получает нас действие политики.

00:02:00.000 --> 00:02:04.000
Однако я распечатать 2-мерных, а не 3-мерного таблицы.

00:02:04.000 --> 00:02:09.000
Чтобы попасть в таблице 2-мерных, я теперь нужно быть чувствительным моего первоначального государства.

00:02:09.000 --> 00:02:12.000
В противном случае на самом деле оказывается, чтобы быть неопределенным.

00:02:12.000 --> 00:02:17.000
Позвольте мне задать начальное состояние быть x, y и ориентации.

00:02:17.000 --> 00:02:20.000
Все, что я делаю теперь запускается политики.

00:02:20.000 --> 00:02:26.000
С самого первого государства скопировать над формой политики 3-мерного таблицы

00:02:26.000 --> 00:02:29.000
в 2-мерной один, который будет этот хэш знак над здесь.

00:02:29.000 --> 00:02:32.000
Хотя я еще не достиг цели государство совсем еще как указано

00:02:32.000 --> 00:02:35.000
установив для звезды в моей таблице политики.

00:02:35.000 --> 00:02:38.000
Теперь моя таблица политики имеет хэш знак R и L,

00:02:38.000 --> 00:02:40.000
но в остальном же, как и раньше.

00:02:40.000 --> 00:02:43.000
Если это хэш знак, мы просто держать наши ориентации так, как это.

00:02:43.000 --> 00:02:45.000
Если это R, я перехожу к праву. L поверните налево.

00:02:45.000 --> 00:02:48.000
Я применить мой движение вперед

00:02:48.000 --> 00:02:52.000
и затем обновить мой новый x и y координат

00:02:52.000 --> 00:02:55.000
чтобы быть соответствующий после движения,

00:02:55.000 --> 00:02:58.000
и я обновить мою ориентации быть o2.

00:02:58.000 --> 00:03:05.000
Наконец я скопировать 3-мерного символ для моей политики прямо в 2-мерный массив.

00:03:05.000 --> 00:03:07.000
Это массив, который наконец печати.

00:03:07.000 --> 00:03:10.000
Ключевой Инсайт здесь заключается в переходе от 3-мерного полного политики

00:03:10.000 --> 00:03:14.000
2-мерный массив пришлось выполнить политики.

00:03:14.000 --> 00:03:18.000
Это то, что вы бы сделали получить обратно в этой таблице здесь.

00:03:18.000 --> 00:03:21.000
Вот несколько нетривиальной задачей. Я не говорю вам это, но я надеюсь, что вы догадались.

00:03:21.000 --> 09:59:59.000
Но все остальное же динамического программирования цикл, который вы уже видели раньше.

