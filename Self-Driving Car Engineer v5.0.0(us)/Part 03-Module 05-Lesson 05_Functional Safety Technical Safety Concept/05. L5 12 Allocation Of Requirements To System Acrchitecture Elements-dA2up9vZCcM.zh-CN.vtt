WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.520
就像前面功能安全概念中我们所做的

00:00:02.520 --> 00:00:07.255
现在我们把技术安全要求纳入我们的系统架构中

00:00:07.254 --> 00:00:09.929
我们会把前三个技术安全要求

00:00:09.929 --> 00:00:14.785
放在我们的 LDW 软件安全组件中

00:00:14.785 --> 00:00:19.644
我们来总结一下这三个安全要求完成的工作

00:00:19.644 --> 00:00:23.144
LDW 安全软件元素从基础车道保持功能块中

00:00:23.144 --> 00:00:29.006
获取震动扭矩请求

00:00:29.006 --> 00:00:32.789
然后 LDW 安全软件元素检查请求

00:00:32.789 --> 00:00:37.454
确保其值小于最大幅度和频率值

00:00:37.454 --> 00:00:41.259
如果请求值大于限定值

00:00:41.259 --> 00:00:48.472
LDW 安全软件元素会忽略该请求并将扭矩请求值设为0

00:00:48.472 --> 00:00:51.060
然后 LDW 安全块把存储的请求数据

00:00:51.060 --> 00:00:55.204
发送给最终的 EPS 扭矩生成块

00:00:55.204 --> 00:00:59.229
报警灯会闪烁 提示司机有故障

00:00:59.229 --> 00:01:04.271
然后 LDW 安全模块会发送状态信号到车辆的显示模块

00:01:04.272 --> 00:01:06.885
信号用来提示是否

00:01:06.885 --> 00:01:11.094
车道辅助系统处于活动状态且工作正常

00:01:11.094 --> 00:01:15.984
状态信号也会进入最终 EPS 扭矩生成模块

00:01:15.984 --> 00:01:19.439
该模块使用状态信号做附加检测

00:01:19.439 --> 00:01:23.280
以决定是否发送无效信号到引擎

00:01:23.280 --> 00:01:27.629
为了检测扭矩请求的正确性和完整性

00:01:27.629 --> 00:01:31.759
在 LDW 安全块和最终 EPS 扭矩生成块之间

00:01:31.760 --> 00:01:36.680
我们会专门放一个软件模块

00:01:36.680 --> 00:01:42.188
该模块确保信号在传输过程中没有损坏

00:01:42.188 --> 00:01:44.236
对于内存检测要求

00:01:44.236 --> 00:01:47.704
我们用一个分离的外部代码块来实现

00:01:47.704 --> 00:01:51.399
因为车辆上的各个 ECU 并不能集成这个代码块

00:01:51.400 --> 00:01:56.510
所以在车辆启动时 我们会运行它

00:01:56.510 --> 00:02:02.640
各功能模块的 ASIL 从技术安全要求中得出

00:02:02.640 --> 00:02:07.094
大家可以看到 这些安全相关模块被标为 ASIL C

00:02:07.094 --> 00:02:09.974
除了内存检测代码块

00:02:09.974 --> 00:02:14.829
我们前面讲了 内存检测模块需要被标为 ASIL A

00:02:14.830 --> 00:02:18.665
基础车道辅助功能被标为 QM

00:02:18.664 --> 00:02:23.789
这个我们在上一课中讲 ASIL 分解时提到过

00:02:23.789 --> 00:02:29.219
现在 我们已经得出各个技术安全要求 并已经把它们放在我们的架构中

