WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:04.155
メッセージ定義とトピック情報の表示が有益である一方で

00:00:04.155 --> 00:00:06.769
進行状況の把握に最適な方法はメッセージがトピックに出力される際に

00:00:06.769 --> 00:00:09.539
メッセージそのものを確認することです

00:00:09.539 --> 00:00:11.720
たとえば亀が左右に回転するときは

00:00:11.720 --> 00:00:14.584
どの軸が実際に回転しているでしょうか?

00:00:14.584 --> 00:00:16.414
また回転の単位は何でしょうか?

00:00:16.414 --> 00:00:19.710
回転はラジアン単位ですか それとも度単位ですか?

00:00:19.710 --> 00:00:21.525
この質問の答えを出すために

00:00:21.525 --> 00:00:23.385
rostopic echo コマンドを使用します

00:00:23.385 --> 00:00:24.890
それでは実際にやってみましょう

00:00:24.890 --> 00:00:28.749
Rostopic echo

00:00:28.749 --> 00:00:31.079
トピック名として /turtle1

00:00:31.079 --> 00:00:34.759
/cmd_vel とします

00:00:34.759 --> 00:00:36.314
トピック名を忘れてしまった場合

00:00:36.314 --> 00:00:37.710
rostopic list を使用して簡単に探すことができます

00:00:37.710 --> 00:00:41.340
これはスクリーンタスクで前に導入しました

00:00:41.340 --> 00:00:44.445
enter をクリックすると ターミナルカーソルが新しいラインに移動し

00:00:44.445 --> 00:00:47.659
何も起こっていないように見えますそのままお待ちください

00:00:47.659 --> 00:00:51.795
Rostopic echo は com_vel トピックに出力されるメッセージを待っているだけです

00:00:51.795 --> 00:00:53.760
トピックにメッセージが出力されるために

00:00:53.760 --> 00:00:55.979
turtle_teleop_key ノード用のコンソールウィンドウまで

00:00:55.979 --> 00:00:59.125
さかのぼります

00:00:59.125 --> 00:01:03.530
ここで左矢印をクリックすると 予想したとおり

00:01:03.530 --> 00:01:07.340
亀は 1 秒間ある角度で反時計回りに回転しました

00:01:07.340 --> 00:01:12.125
実際はだいたい 90 度以上 135 度より少ない角度を

00:01:12.125 --> 00:01:14.689
想定しています

00:01:14.689 --> 00:01:17.819
rostopic echo ターミナルに戻り どうなるか見てみましょう

00:01:17.819 --> 00:01:20.030
ご覧のように メッセージが表示されます

00:01:20.030 --> 00:01:22.340
角速度の z 成分を除き

00:01:22.340 --> 00:01:24.980
すべての速度成分は 0 です

00:01:24.980 --> 00:01:26.689
ここに 2.0 の数値が確認できます

00:01:26.689 --> 00:01:29.405
これは亀が反時計回りに

00:01:29.405 --> 00:01:31.459
Z 軸の周りに回転することを意味します

00:01:31.459 --> 00:01:32.719
動きに関連した単位を意味する

00:01:32.719 --> 00:01:35.030
速度の大きさはおそらく 1 秒あたりのラジアン単位となります

00:01:35.030 --> 00:01:38.049
どのようにして得られたのでしょうか?

00:01:38.049 --> 00:01:41.750
簡単な演算により 2 つのラジアンが

00:01:41.750 --> 00:01:46.150
約 114.6 度に換算されることがわかりますさ できました

00:01:46.150 --> 00:01:49.040
これで rostopic echo についてと トピック内での

00:01:49.040 --> 00:01:52.310
調査メッセージの使用方法について 理解できたと思います

00:01:52.310 --> 00:01:56.074
追記として この単位の調査は

00:01:56.074 --> 00:01:57.814
確かに少し工夫を要します

00:01:57.814 --> 00:01:59.359
賢明な技術者のように ROS のディベロッパーは

00:01:59.359 --> 00:02:04.129
適用可能であれば S-I 単位の標準化を選択しました

00:02:04.129 --> 00:02:06.980
すなわち 長さはメートル単位で測定します

00:02:06.980 --> 00:02:08.400
重量はキログラム単位で

00:02:08.400 --> 00:02:12.735
時間は秒で測定し 角度はラジアンで測定します

00:02:12.735 --> 00:02:15.889
これで ROS コマンドラインツールに関する概要説明を終わります

00:02:15.889 --> 00:02:16.969
この知識を身につけて

00:02:16.969 --> 00:02:19.685
ROS コミュニケーションアークテクチャーの概要を理解することで

00:02:19.685 --> 00:02:21.469
次のステップ 最初の catkin ワークスペースへ進むための

00:02:21.469 --> 00:02:24.139
準備ができました

