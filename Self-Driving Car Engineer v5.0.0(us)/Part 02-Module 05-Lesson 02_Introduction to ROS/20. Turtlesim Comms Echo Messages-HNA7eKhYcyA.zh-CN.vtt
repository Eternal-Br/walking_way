WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.155
查看消息定义和主题消息会很有帮助

00:00:04.155 --> 00:00:06.769
有时候 要了解当前情况

00:00:06.769 --> 00:00:09.539
最好的方式是查看发布到主题的消息本身

00:00:09.539 --> 00:00:11.720
例如 当乌龟向左和向右旋转时

00:00:11.720 --> 00:00:14.584
实际上是围绕哪个轴旋转？

00:00:14.584 --> 00:00:16.414
旋转单位是什么？

00:00:16.414 --> 00:00:19.710
旋转是使用弧度耗时度数表示的？

00:00:19.710 --> 00:00:21.525
要知道这些问题的答案

00:00:21.525 --> 00:00:23.385
你可以使用 rostopic echo 命令

00:00:23.385 --> 00:00:24.890
我们来看下具体用法

00:00:24.890 --> 00:00:28.749
Rostopic、echo

00:00:28.749 --> 00:00:31.079
然后是主题名称 斜线

00:00:31.079 --> 00:00:34.759
Turtle 斜线 command 下划线 vel

00:00:34.759 --> 00:00:36.314
如果你忘了主题名称

00:00:36.314 --> 00:00:37.710
有个办法很简单

00:00:37.710 --> 00:00:41.340
使用你之前的 screentask 里学到的 rostopic list 命令

00:00:41.340 --> 00:00:44.445
点击回车键 终端光标或移动到新的一行

00:00:44.445 --> 00:00:47.659
看上去好像没任何变化 但别担心

00:00:47.659 --> 00:00:51.795
Rostopic echo 只是在等待消息发布在 command vel 主题上

00:00:51.795 --> 00:00:53.760
要向主题发布一条消息

00:00:53.760 --> 00:00:55.979
我们必须跳回控制台窗口

00:00:55.979 --> 00:00:59.125
找到 turtle 下划线 telecop 下划线 key 节点

00:00:59.125 --> 00:01:03.530
我点击向左的箭头 和预料的一样

00:01:03.530 --> 00:01:07.340
乌龟以某个角度顺时针旋转大约 1 秒钟

00:01:07.340 --> 00:01:12.125
我估计 实际数字可能超过了 90 度

00:01:12.125 --> 00:01:14.689
但应该不到 135 度

00:01:14.689 --> 00:01:17.819
我们回到 rostopic echo 终端 看看会发生什么

00:01:17.819 --> 00:01:20.030
你可以看到 我们捕捉到了一条消息

00:01:20.030 --> 00:01:22.340
所有速度分量都是零

00:01:22.340 --> 00:01:24.980
唯一的例外是角速度的 z 分量

00:01:24.980 --> 00:01:26.689
这里 我们看到值是 2

00:01:26.689 --> 00:01:29.405
这告诉我们 当乌龟逆时针旋转时

00:01:29.405 --> 00:01:31.459
它是围绕 z 轴旋转的

00:01:31.459 --> 00:01:32.719
速度的量级告诉我们

00:01:32.719 --> 00:01:35.030
和运动相关联的单位

00:01:35.030 --> 00:01:38.049
很可能是弧度每秒 这是怎么得到的呢

00:01:38.049 --> 00:01:41.750
做个快速匹配 即可得知 两个弧度

00:01:41.750 --> 00:01:46.150
对应的大约是 114.6 度 就在这里

00:01:46.150 --> 00:01:49.040
现在 你应该对 rostopic echo 有所了解

00:01:49.040 --> 00:01:52.310
并知道如何使用它来研究在主题上传递的消息了

00:01:52.310 --> 00:01:56.074
另外说一下 如果这个单位有点不太自然

00:01:56.074 --> 00:01:57.814
那是因为它本来就这样

00:01:57.814 --> 00:01:59.359
和所有理性的工程师一样

00:01:59.359 --> 00:02:04.129
ROS 的开发者选择了尽可能使用国际标准单位

00:02:04.129 --> 00:02:06.980
也就是说 长度的单位是米

00:02:06.980 --> 00:02:08.400
质量单位是千克

00:02:08.400 --> 00:02:12.735
时间单位是秒 角度单位是弧度 等等

00:02:12.735 --> 00:02:15.889
现在 你已经大致了解了 ROS 命令行工具

00:02:15.889 --> 00:02:16.969
利用这些知识

00:02:16.969 --> 00:02:19.685
结合你对 ROS 通信架构的一般了解

00:02:19.685 --> 00:02:21.469
你已经可以继续下一个步骤了

00:02:21.469 --> 00:02:24.139
设置你的第一个 catkin 工作空间

