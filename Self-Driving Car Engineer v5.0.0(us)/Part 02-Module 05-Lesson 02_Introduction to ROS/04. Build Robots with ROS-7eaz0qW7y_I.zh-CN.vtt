WEBVTT
Kind: captions
Language: zh-CN

00:00:02.459 --> 00:00:05.500
你好 Brandon 想做个机器人吗？

00:00:05.500 --> 00:00:08.913
当然 听起来不错 看起来你这里有一些硬件 我们需要做什么？

00:00:08.913 --> 00:00:13.778
对 我们需要做的是 是为所有传感器和驱动器编写设备驱动

00:00:13.778 --> 00:00:17.289
开发一个可以只是四种不同协议的通信框架

00:00:17.289 --> 00:00:19.570
编写算法进行感知

00:00:19.570 --> 00:00:21.399
导航和运动规划

00:00:21.399 --> 00:00:22.945
对 然后

00:00:22.945 --> 00:00:25.160
我们可以实现一个机制 记录我们的数据

00:00:25.160 --> 00:00:26.980
编写控制算法

00:00:26.980 --> 00:00:29.170
噢 别忘了错误处理

00:00:29.170 --> 00:00:31.489
太棒了 我们开始吧

00:00:31.489 --> 00:00:43.118
大家做的怎么样？

00:00:43.118 --> 00:00:43.658
非常好！

00:00:43.658 --> 00:00:48.495
是的 我们要打开灯

00:00:48.496 --> 00:01:01.140
造机器人曾经非常麻烦 耗时很长

00:01:01.140 --> 00:01:03.859
所有部件都需要从头开始制造

00:01:03.859 --> 00:01:08.430
在本课中 我们会介绍一下机器人操作系统 ROS

00:01:08.430 --> 00:01:12.450
这是一个软件框架 可以简化机器人开发

00:01:12.450 --> 00:01:14.930
使用 ROS 开发机器人有很多优势

00:01:14.930 --> 00:01:16.125
但在我们深入研究之前

00:01:16.125 --> 00:01:19.075
我觉得我们有必要解释 ROS 究竟是什么

00:01:19.075 --> 00:01:23.954
的确 ROS 是一个机器人开发的开源软件框架

00:01:23.953 --> 00:01:27.144
为了帮助你更好地理解什么是 ROS

00:01:27.144 --> 00:01:30.015
我们来看看它的部分组件和功能

00:01:30.015 --> 00:01:32.924
ROS 并不是传统意义上的操作系统

00:01:32.924 --> 00:01:35.280
但是 和操作系统一样 它让我们能够和

00:01:35.280 --> 00:01:38.250
硬件对话 而无需编写自己的设备驱动

00:01:38.250 --> 00:01:40.590
它还提供了不同程序通过

00:01:40.590 --> 00:01:43.680
信息传递相互沟通的方法

00:01:43.680 --> 00:01:46.049
最后 ROS 采用了最新构造和

00:01:46.049 --> 00:01:50.739
包管理系统 你可以轻松开发并部署软件

00:01:50.739 --> 00:01:54.870
ROS 还提供了可视化、仿真和分析工具

00:01:54.870 --> 00:01:57.185
以及广泛的社区支持和

00:01:57.185 --> 00:02:00.129
大量有用的软件库的借口

00:02:00.129 --> 00:02:01.950
在深入了解之前

00:02:01.950 --> 00:02:05.000
我们先大致了解一下 ROS 的历史

