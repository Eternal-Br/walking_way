WEBVTT
Kind: captions
Language: ja-JP

00:00:01.840 --> 00:00:06.785
rosmsg info コマンドでは コンソールにメッセージ形式で情報を出力できます

00:00:06.785 --> 00:00:09.250
cmd_vel トピックについて さらに情報を取得してみましょう

00:00:09.250 --> 00:00:10.750
まずはターミナルをクリアします

00:00:10.750 --> 00:00:14.224
それからコマンド rosmsg show

00:00:14.224 --> 00:00:17.179
メッセージタイプを指定したパッケージの名前を入力します

00:00:17.178 --> 00:00:20.369
この場合は 少し前に見たばかりですが

00:00:20.370 --> 00:00:22.695
geometry_msgs/Twist ですね

00:00:22.695 --> 00:00:25.035
メッセージタイプの名前を入力して このとおり

00:00:25.035 --> 00:00:27.600
Twist タイプのメッセージの完全な定義です

00:00:27.600 --> 00:00:29.759
コマンド出力から Twist メッセージは

00:00:29.759 --> 00:00:32.259
Vector3 タイプの 2 つのメッセージで構成されているのがわかります

00:00:32.259 --> 00:00:35.670
geometry_msgs パッケージでもタイプは定義されています

00:00:35.670 --> 00:00:39.715
線形速度に対して 3 次元ベクトルが 1 つと 角速度が 1 つあります

00:00:39.715 --> 00:00:45.179
それぞれのベクトルは 3 つの 64 ビット浮動小数点コンポーネントから構成されています

00:00:45.179 --> 00:00:48.320
コンポーネント x y z です float64 はプリミティブ型のデータ型ビルドで

00:00:48.320 --> 00:00:51.779
カスタムメッセージの作成に使用できます

00:00:51.779 --> 00:00:55.740
一般的なタイプとメッセージの定義にあるビルドについて詳しい情報を取得するには

00:00:55.740 --> 00:00:58.783
スクリーンキャストに付いているテキストモジュールのリンクを参照してください

00:00:58.783 --> 00:01:02.969
rosmsg info はメッセージに関する情報を得るにはとても便利なツールですが

00:01:02.969 --> 00:01:05.420
知りたいことがすべてわかるわけではありません

00:01:05.420 --> 00:01:08.459
rosed も使いやすいツールです

00:01:08.459 --> 00:01:10.379
rosed はシンプルな bash コマンドで

00:01:10.379 --> 00:01:13.299
ros 環境内のファイルを簡単に表示して編集できます

00:01:13.299 --> 00:01:16.109
これを使って Twist メッセージの定義を表示しましょう

00:01:16.108 --> 00:01:18.568
ターミナルをもう一度クリアします

00:01:18.569 --> 00:01:21.754
コマンド rosed を実行して次に geometry_msgs

00:01:21.754 --> 00:01:24.420
問題のメッセージを含むパッケージの名前です

00:01:24.420 --> 00:01:27.969
それから twist.msg

00:01:27.968 --> 00:01:30.589
表示するメッセージ定義の名前です

00:01:30.590 --> 00:01:33.840
ここでヒントです パッケージ名やメッセージタイプの名前を思い出せないときは

00:01:33.840 --> 00:01:36.489
タブ完了が役に立ちます

00:01:36.489 --> 00:01:39.290
さて このとおり実際のメッセージ定義が表示されました

00:01:39.290 --> 00:01:42.965
rosmsg info コマンドの出力とよく似ていますが

00:01:42.965 --> 00:01:45.739
いくつか大切なポイントが違います

00:01:45.739 --> 00:01:47.540
1 つ目は それぞれの Vector3 メッセージ定義について

00:01:47.540 --> 00:01:51.150
詳細がありません

00:01:51.150 --> 00:01:52.549
この詳細は別のところ

00:01:52.549 --> 00:01:57.325
特に Vector3.msg ファイル内と このパッケージ内にあります

00:01:57.325 --> 00:01:59.569
rosmsg info コマンドは

00:01:59.569 --> 00:02:03.140
コンソール出力の定義を拡張してくれるだけです

00:02:03.140 --> 00:02:05.379
2 つ目は コメントです

00:02:05.379 --> 00:02:07.234
今までの内容はこのためにあります

00:02:07.233 --> 00:02:09.228
不明な点はソースコードを参照してください

00:02:09.229 --> 00:02:11.599
rosmsg info では Twist メッセージが実際はどのように使用されるかは

00:02:11.598 --> 00:02:14.234
まったくわかりませんが

00:02:14.235 --> 00:02:17.794
メッセージを作成した親切な ROS 開発者がサポートしてくれます

00:02:17.794 --> 00:02:20.120
標準の ROS ディストリビューションに含まれるメッセージタイプ定義では

00:02:20.120 --> 00:02:22.250
たいていの場合

00:02:22.250 --> 00:02:25.205
使い方についてさまざまにコメントされています

00:02:25.205 --> 00:02:27.710
この Twist メッセージは 実のところ線形速度ベクトルと角速度ベクトルを

00:02:27.710 --> 00:02:30.800
含むようになっているのがわかります

00:02:30.800 --> 00:02:32.960
使い方から明らかなのはこういうところです

00:02:32.960 --> 00:02:36.875
こうしたメッセージは cmd_vel トピックの周辺でやり取りされていますが

00:02:36.875 --> 00:02:38.870
rosmsg show コマンドの出力から

00:02:38.870 --> 00:02:41.125
わかる内容ではありません

00:02:41.125 --> 00:02:43.788
繰り返しますが 不明な点はソースコードを参照してください

00:02:43.788 --> 00:02:46.008
これは ROS 開発では一般的なテーマです

