WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.924
Design Patterns are proven, well established architectures.

00:00:03.924 --> 00:00:09.304
One of the most common software patterns in the automotive industry is called E-Gas.

00:00:09.304 --> 00:00:12.974
An E-Gas pattern, defines three levels of software.

00:00:12.974 --> 00:00:18.660
Level one is a functional level which contains the intended functionality of the system.

00:00:18.660 --> 00:00:23.262
For the lane assistants example used in previous lessons,

00:00:23.262 --> 00:00:25.365
the intended functionality would be,

00:00:25.364 --> 00:00:30.643
to turn the wheel towards center and vibrate the steering wheel based on camera data.

00:00:30.643 --> 00:00:34.949
Levels two and three of the E-Gas pattern, are for monitoring.

00:00:34.950 --> 00:00:36.660
Level two refers to

00:00:36.659 --> 00:00:42.384
functional monitoring which monitors level one for any safety goal violations.

00:00:42.384 --> 00:00:44.835
For example, level two software,

00:00:44.835 --> 00:00:47.070
would monitor the lane assistants time and

00:00:47.070 --> 00:00:50.329
torque request as discussed in the previous lessons.

00:00:50.329 --> 00:00:54.159
Level three is for processor monitoring of major hardware components.

00:00:54.159 --> 00:00:56.804
Level three software boot, for example,

00:00:56.804 --> 00:00:59.994
monitor RAM, ROM and control flow.

00:00:59.994 --> 00:01:02.234
In our lane assistants example,

00:01:02.234 --> 00:01:07.036
the level one software would send torque requests to the steering wheel motor.

00:01:07.036 --> 00:01:10.155
If the level two or three software detects an error,

00:01:10.155 --> 00:01:15.075
then output from level one is disabled and the level two or three software,

00:01:15.075 --> 00:01:17.760
leads the system to a safe state.

00:01:17.760 --> 00:01:23.000
In this case, we determined that the safe state would send a torque output of zero.

