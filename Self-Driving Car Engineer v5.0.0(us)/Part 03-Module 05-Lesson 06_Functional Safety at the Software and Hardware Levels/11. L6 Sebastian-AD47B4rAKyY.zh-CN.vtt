WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.990
早些时候 我们建造了一台机器开车穿越沙漠

00:00:03.990 --> 00:00:08.789
在 Dawawine Challenge 赛中 Stanley 表现很棒

00:00:08.789 --> 00:00:11.924
大概每隔 40 英里

00:00:11.925 --> 00:00:15.660
它会看到前面出现一个神奇的巨大障碍

00:00:15.660 --> 00:00:20.039
它会被吓坏了 并试图跳下悬崖

00:00:20.039 --> 00:00:21.434
这非常罕见

00:00:21.434 --> 00:00:24.379
每隔 40 英里 大约每隔两三小时

00:00:24.379 --> 00:00:29.625
这让我们摸不着头脑 惊呆了 为什么突然间

00:00:29.625 --> 00:00:31.992
原本一切都很完美 结果突然间

00:00:31.992 --> 00:00:36.170
就出现了这个随机的巨大障碍

00:00:36.170 --> 00:00:42.439
花了我几个月的时间才搞清楚 中间过程就不啰嗦了 直接说结果吧

00:00:42.439 --> 00:00:45.929
我们制作了一台激光扫描器 用于扫描地形

00:00:45.929 --> 00:00:49.740
并确保当激光数据随时间重叠时

00:00:49.740 --> 00:00:51.175
你会上下颠簸

00:00:51.174 --> 00:00:54.459
从而不会陷入比较不在同一个框架内的

00:00:54.460 --> 00:00:56.463
激光读数陷阱

00:00:56.463 --> 00:00:59.880
我们只是说 激光读数少了 一段时间过去了

00:00:59.880 --> 00:01:01.960
时间过去得越多 我们变得越不自信

00:01:01.960 --> 00:01:05.250
这实际上是一条很好的规则

00:01:05.250 --> 00:01:09.430
所以如果能非常成功地及时获得数据 我们会非常自信

00:01:09.430 --> 00:01:13.140
我们对比所有的数据点 自信心受损

00:01:13.140 --> 00:01:18.765
然后 我们将这个架构导入到多台计算机并导出

00:01:18.765 --> 00:01:22.320
我们必须同步这些计算机的时间

00:01:22.319 --> 00:01:25.877
在这些计算机的时间同步中

00:01:25.878 --> 00:01:29.084
时间偶尔会倒退

00:01:29.084 --> 00:01:32.914
对我们的自信心造成灾难性的打击

00:01:32.915 --> 00:01:36.195
这意味着 突然间 不是随着时间放松信心

00:01:36.194 --> 00:01:40.009
而是要坚定不会看到障碍的信心

00:01:40.010 --> 00:01:44.320
当时 时钟倒退 直到所有时钟同步

00:01:44.319 --> 00:01:46.434
与此同时 汽车上下颠簸

00:01:46.435 --> 00:01:50.549
造成灾难

00:01:50.549 --> 00:01:52.140
现在 作为一名软件工程师

00:01:52.140 --> 00:01:55.995
我就不会问关于这些怪异障碍的问题

00:01:55.995 --> 00:01:58.079
时钟会后退吗

00:01:58.079 --> 00:02:01.894
当时真的花费了我们大量的时间 研究正确的数字

00:02:01.894 --> 00:02:06.644
才搞明白这种时间倒退会造成汽车坠落

00:02:06.644 --> 00:02:08.490
这个例子

00:02:08.490 --> 00:02:10.000
告诉我们 有时候 找到正确的故障原因很难

