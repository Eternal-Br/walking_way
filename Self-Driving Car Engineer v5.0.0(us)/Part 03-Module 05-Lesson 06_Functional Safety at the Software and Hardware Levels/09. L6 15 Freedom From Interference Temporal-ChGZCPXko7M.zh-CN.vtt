WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.955
时间干扰是指随着时间的推移

00:00:02.955 --> 00:00:06.750
一个设备阻止另一个设备的执行

00:00:06.750 --> 00:00:10.199
例如 如果两个软件设备共享数据

00:00:10.199 --> 00:00:14.219
更高优先级的线程可以连续访问数据

00:00:14.220 --> 00:00:18.414
低优先级的线程则会一直等待

00:00:18.414 --> 00:00:20.859
这被称为阻止执行

00:00:20.859 --> 00:00:23.730
还有许多其他时间干扰的例子

00:00:23.730 --> 00:00:26.300
我们将讨论几个月

00:00:26.300 --> 00:00:30.855
当两个执行线程需要彼此资源时 会发生死锁

00:00:30.855 --> 00:00:33.285
尽管线程一需要资源 B

00:00:33.284 --> 00:00:37.924
但有资源 A 线程二需要资源 A

00:00:37.924 --> 00:00:39.584
但有资源 B

00:00:39.585 --> 00:00:43.219
类似的干扰被称为 Livelocks

00:00:43.219 --> 00:00:46.369
两个线程想要相同的资源

00:00:46.369 --> 00:00:51.089
在这种情况下 两个线程都有礼貌地让其他线程先行

00:00:51.090 --> 00:00:56.180
但它们会搁置一边 然后同时获取资源

00:00:56.179 --> 00:00:58.424
时间干扰的另一个例子

00:00:58.424 --> 00:01:01.649
是软件系统之间的不正确同步

00:01:01.649 --> 00:01:04.859
例如 考虑一辆自主车辆

00:01:04.859 --> 00:01:10.224
有用于车辆检测的雷达系统和相机系统

00:01:10.224 --> 00:01:12.890
每个系统都有自己的问题

00:01:12.890 --> 00:01:17.295
但是如果有问题的时钟不能正确同步

00:01:17.295 --> 00:01:20.265
那么传感器融合就无法完成

00:01:20.265 --> 00:01:24.060
因为随着时间的推移将无法压缩信号

00:01:24.060 --> 00:01:25.930
因此 时钟需要同步或

00:01:25.930 --> 00:01:29.620
所有软件系统都需要使用相同的主时钟

00:01:29.620 --> 00:01:33.045
当发生任何时间或执行人相关的故障时

00:01:33.045 --> 00:01:35.784
需要采取安全机制

00:01:35.784 --> 00:01:38.394
这可能是功能退化

00:01:38.394 --> 00:01:43.000
并最终过渡到安全状态 以避免安全目标违规

