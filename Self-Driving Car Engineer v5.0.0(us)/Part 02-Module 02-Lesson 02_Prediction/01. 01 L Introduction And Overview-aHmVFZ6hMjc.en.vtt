WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.360
Welcome back. My name is Mahni and I work on the prediction team at Mercedes.

00:00:05.360 --> 00:00:07.740
To understand what the prediction team does,

00:00:07.740 --> 00:00:10.300
imagine at T-shaped intersection.

00:00:10.300 --> 00:00:14.859
You are a self-driving car that has just pulled up to the stop sign.

00:00:14.859 --> 00:00:19.994
You want to turn left but your sensors notice another vehicle coming from the left.

00:00:19.995 --> 00:00:22.170
Now, let's pause for a moment.

00:00:22.170 --> 00:00:27.915
At this point, you as a human probably know the green vehicle will do one of two things,

00:00:27.914 --> 00:00:32.295
either it will go straight or it will go right.

00:00:32.295 --> 00:00:34.890
Well, let's say that at this point,

00:00:34.890 --> 00:00:39.655
the green vehicle starts slowing down and moving right in the lane.

00:00:39.655 --> 00:00:42.945
Well, you probably know that they are

00:00:42.945 --> 00:00:46.844
turning right which means it is safe for you to go left.

00:00:46.844 --> 00:00:49.350
By making a successful prediction,

00:00:49.350 --> 00:00:54.750
you were able to make a decision that got you to your destination safely and efficiently.

00:00:54.750 --> 00:00:58.020
And what makes prediction interesting but also

00:00:58.020 --> 00:01:01.665
challenging is that it is inherently multi-modal.

00:01:01.664 --> 00:01:04.289
A good way of thinking about what that

00:01:04.290 --> 00:01:08.160
means is to think of how you would answer the question,

00:01:08.159 --> 00:01:12.015
"Where is the green car likely to be in five seconds?"

00:01:12.015 --> 00:01:15.420
If we try to come up with the probability distribution,

00:01:15.420 --> 00:01:18.480
we would see that it has multiple peaks or moats.

00:01:18.480 --> 00:01:20.573
If the car is going straight,

00:01:20.572 --> 00:01:23.279
then the car is likely to be somewhere here.

00:01:23.280 --> 00:01:25.290
But if the car turns right,

00:01:25.290 --> 00:01:27.550
then it's more likely to be here.

00:01:27.549 --> 00:01:32.310
And in general, the way we think about handling multi-modal uncertainty is

00:01:32.310 --> 00:01:38.370
by maintaining some beliefs about how probable each potential mode is.

00:01:38.370 --> 00:01:42.900
Initially, if we just see this green car coming from far away,

00:01:42.900 --> 00:01:49.255
those beliefs could be initialized using some prior knowledge about this intersection.

00:01:49.254 --> 00:01:54.244
In this case, let's say that cars generally go straight at this intersection.

00:01:54.245 --> 00:01:56.719
But as we continue watching the car,

00:01:56.719 --> 00:01:59.414
we may notice that it is slowing down.

00:01:59.415 --> 00:02:03.195
Since this behavior is more consistent with turning right,

00:02:03.194 --> 00:02:06.514
the probability of turning right increases.

00:02:06.515 --> 00:02:08.900
And then, at the next timestep,

00:02:08.900 --> 00:02:12.120
we might notice that the car has already started turning

00:02:12.120 --> 00:02:16.265
right which again increases the probability of turning right.

00:02:16.264 --> 00:02:18.404
And as we keep observing,

00:02:18.405 --> 00:02:23.550
we continue updating our belief based on new evidence until eventually we

00:02:23.550 --> 00:02:29.230
can predict with high certainty that the vehicle is turning right at this intersection.

00:02:29.229 --> 00:02:32.669
So the responsibility of the prediction module is to do the

00:02:32.669 --> 00:02:37.589
following: We take as input a map of the world and data from sensor fusion

00:02:37.590 --> 00:02:41.759
and generate as output some predictions of the future state of

00:02:41.759 --> 00:02:46.854
all the vehicles and other moving objects in the vicinity of our vehicle.

00:02:46.854 --> 00:02:49.739
Typically, these predictions are represented by a set

00:02:49.740 --> 00:02:52.800
of possible trajectories like that two dotted arrows

00:02:52.800 --> 00:02:55.980
emanating from the green car in this scenario and

00:02:55.979 --> 00:02:59.774
an associated probability for each trajectory.

00:02:59.775 --> 00:03:01.986
Before we get into the details,

00:03:01.985 --> 00:03:05.340
let me explain what we are going to discuss in this lesson.

00:03:05.340 --> 00:03:08.670
First, we'll go through a brief overview where you will learn

00:03:08.669 --> 00:03:12.619
a bit more about the inputs and outputs to prediction.

00:03:12.620 --> 00:03:16.819
Next, we will talk about how prediction is actually done.

00:03:16.819 --> 00:03:20.310
We will discuss the two main classes of prediction techniques,

00:03:20.310 --> 00:03:23.365
model-based approaches and data-driven approaches.

00:03:23.365 --> 00:03:28.500
There, model-based approaches use mathematical models of motion to predict

00:03:28.500 --> 00:03:31.560
trajectories and data-driven approaches rely

00:03:31.560 --> 00:03:35.250
on machine learning and examples to learn from.

00:03:35.250 --> 00:03:38.599
Then, I will briefly walk you through how to apply

00:03:38.599 --> 00:03:43.585
strictly data-driven approach for prediction called trajectory clustering.

00:03:43.585 --> 00:03:48.260
Then, we will dig into model-based approaches where I'll introduce

00:03:48.259 --> 00:03:51.689
process models as a mathematical technique for modeling

00:03:51.689 --> 00:03:55.384
various maneuvers like lane changes, vehicle following, etc.

00:03:55.384 --> 00:03:58.889
And introduce multi-modal estimators as

00:03:58.889 --> 00:04:03.389
an effective technique for handling the uncertainty associated with prediction,

00:04:03.389 --> 00:04:10.314
namely, the uncertainty about which maneuver an object will do in a particular situation.

00:04:10.314 --> 00:04:13.919
Finally, we will dive deep into hybrid approaches

00:04:13.919 --> 00:04:17.729
which use data and process models to predict motion

00:04:17.730 --> 00:04:21.629
through a cycle of intense classification where we try to

00:04:21.629 --> 00:04:25.745
figure out what a driver wants to do and trajectory generation.

00:04:25.745 --> 00:04:29.655
There we try to figure out how they are likely to do it.

00:04:29.654 --> 00:04:33.689
We will end by implementing an algorithm called Naive Bayes to

00:04:33.689 --> 00:04:39.194
predict the motion of a car at a T-shaped intersection like the one you just saw.

00:04:39.194 --> 00:04:40.769
In the next few segments,

00:04:40.769 --> 00:04:43.560
I'm going to ask you to do some reading about

00:04:43.560 --> 00:04:48.509
the data processing that happens in a typical prediction module.

