WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:02.970
自動運転車が高速道路に合流しようとしている状況の

00:00:02.970 --> 00:00:08.005
プロセスモデルについて考えてみましょう

00:00:08.005 --> 00:00:12.860
よく見ると、別の車が右端の車線を走行しています

00:00:12.859 --> 00:00:16.629
この車は合流しようとしている車を

00:00:16.629 --> 00:00:18.674
無視してそのまま走行する

00:00:18.675 --> 00:00:22.170
加速して後方に合流スペースを作る

00:00:22.170 --> 00:00:25.090
減速して前方に合流スペースを作る

00:00:25.089 --> 00:00:27.670
車線変更するといった場合が考えられます

00:00:27.670 --> 00:00:30.135
そこで、各ケースのプロセスモデルを

00:00:30.135 --> 00:00:35.054
作成して予測される動きを正規化してみましょう

00:00:35.054 --> 00:00:36.939
無視してそのまま走行する場合

00:00:36.939 --> 00:00:41.280
一定速度で車線 A を追従すると考えられます

00:00:41.280 --> 00:00:44.270
加速する場合は正の値の加速度で

00:00:44.270 --> 00:00:48.440
車線を追従するモーションモデルになるでしょう

00:00:48.439 --> 00:00:50.304
減速も同様ですが

00:00:50.304 --> 00:00:51.950
この場合は加速度が

00:00:51.950 --> 00:00:54.130
負の値となります

00:00:54.130 --> 00:01:00.200
車線変更には、車線 B を一定速度で追従するモデルを使用します

00:01:00.200 --> 00:01:04.424
ここで、追従という用語が何度か登場しましたが

00:01:04.424 --> 00:01:06.094
車線追従とは何のことでしょうか

00:01:06.094 --> 00:01:08.414
数学的にはどう表現できるでしょうか

00:01:08.415 --> 00:01:10.800
これには多くの選択肢があります

00:01:10.799 --> 00:01:13.340
通常、プロセスモデルを選択する際には

00:01:13.340 --> 00:01:17.230
簡潔性と精度のトレードオフを考慮しなければなりません

00:01:17.230 --> 00:01:20.000
非常にシンプルなアプローチの 1 つに

00:01:20.000 --> 00:01:23.930
車両をホロノミックな点粒子として扱う方法があります

00:01:23.930 --> 00:01:29.605
その場合、点は随時あらゆる方向に動く可能性があると考えます

00:01:29.605 --> 00:01:33.025
もちろん、これは大変シンプルな想定で

00:01:33.025 --> 00:01:36.075
最も単純なモーションモデルは線形になります

00:01:36.075 --> 00:01:42.064
一定速度での車線追従はどの座標であっても、このような式になります

00:01:42.064 --> 00:01:45.799
車両は各タイムステップにおいて前進し

00:01:45.799 --> 00:01:50.209
車線中心との距離が一定に保たれていると仮定しています

00:01:50.209 --> 00:01:55.839
しかし実際には、線形モデルでは単純すぎます

00:01:55.840 --> 00:02:01.329
そこでより複雑にするため、モデルに非線形的な要素を加えます

00:02:01.329 --> 00:02:06.349
通常、状態ベクトルに見出しを組み込むと

00:02:06.349 --> 00:02:10.954
モデルの方程式でサインとコサインを使うことになります

00:02:10.955 --> 00:02:14.180
車線追従の非線形モデルは、デカルト座標では

00:02:14.180 --> 00:02:18.015
このような式になる可能性があります

00:02:18.014 --> 00:02:20.619
ご覧のとおり、サインとコサインがありますね

00:02:20.620 --> 00:02:23.530
これが非線形の要素です

00:02:23.530 --> 00:02:26.900
次に、車両は非ホロノミックシステムであると

00:02:26.900 --> 00:02:30.495
いう点を考慮するとより複雑化します

00:02:30.495 --> 00:02:34.670
そこでよく使用されるのが自転車モデルで

00:02:34.669 --> 00:02:38.655
慣性デカルト座標系ではこのようになります

00:02:38.655 --> 00:02:41.750
自転車モデルはステアリング角度と

00:02:41.750 --> 00:02:44.590
加速の 2 つの入力を取得します

00:02:44.590 --> 00:02:46.344
ステアリング角度に関しては

00:02:46.344 --> 00:02:52.125
目標車線の中心線を基準トラジェクトリーとして PID コントローラーを使用できます

00:02:52.125 --> 00:02:57.680
加速には一定速度モデルまたは一定加速モデルを使用し

00:02:57.680 --> 00:02:59.670
より複雑な加速挙動を扱いたい場合は

00:02:59.669 --> 00:03:03.019
制限速度をターゲットとして

00:03:03.020 --> 00:03:06.860
PID コントローラーを使用します

00:03:06.860 --> 00:03:10.070
実際のところ、これらのモデルは

00:03:10.069 --> 00:03:13.905
簡潔性と精度のバランスがよく取れていますが

00:03:13.905 --> 00:03:19.594
車両力学に関する詳細を追加すれば、さらに複雑にすることも可能です

00:03:19.594 --> 00:03:23.359
たとえば、このような動的自転車モデルを

00:03:23.360 --> 00:03:25.110
使用することができます

00:03:25.110 --> 00:03:29.415
ここで、F_c, f は

00:03:29.414 --> 00:03:35.014
前輪にかかる横方向の力

00:03:35.014 --> 00:03:41.519
F_c, r は後輪にかかる横方向の力を示しています

00:03:41.520 --> 00:03:46.590
これをさらに複雑にして、4 本の車輪をモデル化することも可能です

00:03:46.590 --> 00:03:50.939
これらのモデルは他のモデルよりも技術的に正確ですが

00:03:50.939 --> 00:03:54.784
通常、実際の予測にはあまり適していません

00:03:54.784 --> 00:04:01.759
他のドライバーの挙動は不確定要素が多すぎるため予測が難しく

00:04:01.759 --> 00:04:05.090
プロセスモデルの精度を多少改善したところでさほど意味がなく

00:04:05.090 --> 00:04:08.930
計算負荷に見合う価値がないと言えるでしょう

00:04:08.930 --> 00:04:12.530
どのモデルにも W という用語が使われていますが

00:04:12.530 --> 00:04:17.069
これはプロセスモデルの不確実性が格納されている場所です

00:04:17.069 --> 00:04:23.129
不確実性を示す際には、平均値 0 の多変量ガウス分布を使うのが最も一般的です

00:04:23.129 --> 00:04:28.204
次に、プロセスモデルについてもう少し考察し

00:04:28.204 --> 00:04:31.430
複数のプロセスモデルを同時に検討して

00:04:31.430 --> 00:04:36.840
複数の挙動について結論を下すにはどうすればよいか考えしましょう

