WEBVTT
Kind: captions
Language: ja-JP

00:00:00.550 --> 00:00:03.190
さて ひずみが画像内の物体の
サイズと

00:00:03.189 --> 00:00:07.339
形状を変えることはわかりましたが
これをキャリブレートするにはどうしたらよいでしょう

00:00:07.339 --> 00:00:11.425
既知の形状の写真を撮り
ひずみエラーを検出して

00:00:11.425 --> 00:00:13.480
補正することができます

00:00:13.480 --> 00:00:16.882
カメラをキャリブレートするために選ぶ形状は
何でもよいのですが ここではチェス盤を使用します

00:00:16.882 --> 00:00:20.390
チェス盤はキャリブレーションに
最適です

00:00:20.390 --> 00:00:24.530
コントラストの高い規則的なパターンなので
自動検出が容易です

00:00:24.530 --> 00:00:27.910
また ひずみのない平らなチェス盤が
どのように見えるかわかっています

00:00:27.910 --> 00:00:30.469
平らな表面にチェス盤を置き
カメラで複数枚の

00:00:30.469 --> 00:00:32.600
写真を撮ります

00:00:32.600 --> 00:00:36.189
これらの画像の正方形の
見かけのサイズおよび形状と

00:00:36.189 --> 00:00:40.070
実際のサイズおよび形状とを
見比べることで

00:00:40.070 --> 00:00:42.939
ひずみを
検出できます

00:00:42.939 --> 00:00:45.929
その情報を使用して
カメラをキャリブレートします

00:00:45.929 --> 00:00:49.484
これらの歪んだ点を
歪んでいない点にマッピングする変換を作成します

00:00:49.484 --> 00:00:52.950
最後に画像の歪みを除去します

00:00:52.950 --> 00:00:55.290
このすべてを
PythonとOpenCVを使用して行う方法を見てみましょう

