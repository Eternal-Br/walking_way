WEBVTT
Kind: captions
Language: ru

00:00:00.000 --> 00:00:04.000
Я хочу, чтобы вы реализовали такой контроллер.

00:00:04.000 --> 00:00:06.000
Вот код, который я подготовил для вас.

00:00:06.000 --> 00:00:08.000
Существует класс робот, с которым вы знакомы.

00:00:08.000 --> 00:00:13.000
Он имеет функцию «init». Можно задать положение, с помощью функции «set» как раньше.

00:00:13.000 --> 00:00:16.000
Есть steering_noise и distance_noise.

00:00:16.000 --> 00:00:18.000
Вы знакомы с ними.

00:00:18.000 --> 00:00:20.000
Существует также что-то, называемое «drift», который вы не будете использовать прямо сейчас,

00:00:20.000 --> 00:00:22.000
Однако позднее это станет удобным.

00:00:22.000 --> 00:00:28.000
Есть ваши команда движения, все пути, которые мы реализовали раньше.

00:00:28.000 --> 00:00:33.000
Я улучшил немного распечатку координаты с помощью float.

00:00:33.000 --> 00:00:38.000
Я хочу, чтобы вы реализовали команды run, который принимает как входной параметр элемент управления

00:00:38.000 --> 00:00:43.000
что регулирует пропорционально ответ угла поворота на crosstrack ошибку.

00:00:43.000 --> 00:00:48.000
Робот имеет начальное положение 0, 1 и 0, скорость 1,

00:00:48.000 --> 00:00:51.000
и я хотел симулировать его на 100 шагов.

00:00:51.000 --> 00:00:53.000
Вот я предвижу, что произойдет.

00:00:53.000 --> 00:00:57.000
Ваш робот изначально от оси x на 1.

00:00:57.000 --> 00:01:00.000
Я хочу ехать вдоль оси x.

00:01:00.000 --> 00:01:04.000
Значение y является таким же, как cross track ошибка.

00:01:04.000 --> 00:01:08.000
Повернув, обратно пропорционально на значение y

00:01:08.000 --> 00:01:14.000
с помощью параметра tau, который задает прочность пропорционального контроллера.

00:01:14.000 --> 00:01:19.000
Я хочу, чтобы робот, повернув в направлении оси x, ехали в этом направлении, вылез,

00:01:19.000 --> 00:01:22.000
развернулся и ехал обратно.

00:01:22.000 --> 00:01:28.000
Чтобы сделать это, симулируем мир на 800 шагов и используем термин соразмерности

00:01:28.000 --> 00:01:35.000
что устанавливает мой руководящий угол альфа пропорционально к ошибка crosstrack у.

00:01:35.000 --> 00:01:41.000
Введите код здесь и когда вы закончите с этим, запустите его с коэффициентом 0.1,

00:01:41.000 --> 00:01:45.000
Вот вывод, который я хочу, чтобы вы произвели. Это 100 линий.

00:01:45.000 --> 00:01:47.000
Вы можете увидеть положение робота, начав на 1 от y.

00:01:47.000 --> 00:01:53.000
Затем он уменьшает y со временем в отрицательном направлении.

00:01:53.000 --> 00:01:56.000
На правой стороне вы увидите соответствующий руководящую ориентацию,

00:01:56.000 --> 00:02:02.000
и вы можете видеть, как вы двигаетесь на y, возвращаясь в позитивной направлении,

00:02:02.000 --> 00:02:07.000
и вы можете увидеть, как робот промахивается медленно вокруг ссылки траектории по оси x.

00:02:07.000 --> 09:59:59.000
Пожалуйста, идите и осуществите это.

