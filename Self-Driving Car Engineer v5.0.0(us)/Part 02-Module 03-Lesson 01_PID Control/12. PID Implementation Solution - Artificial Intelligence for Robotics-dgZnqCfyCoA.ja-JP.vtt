WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:05.000
これが私の答えです変数 int_crosstrack_error をメインループの外に実装しました

00:00:05.000 --> 00:00:07.000
0 で初期化します

00:00:07.000 --> 00:00:12.000
int_crosstrack_error にローカルな crosstrack_error を加えます

00:00:12.000 --> 00:00:17.000
int&lt;u&gt;_crosstrack&lt;/u&gt;_error に比例して操舵するコントローラーがあります

00:00:17.000 --> 00:00:27.000
[Run] ボタンを押すと y 変数が最後に 0 か 0.05 へ至るまで ゆっくりと収束することがわかります

00:00:27.000 --> 00:00:31.000
このパラメーターを 0.01 に設定すると より速く収束します

00:00:31.000 --> 00:00:38.000
見ていくと少し基準線を越えていますが コントローラーは急速に 0.0 に収束します

00:00:38.000 --> 00:00:40.000
また 0.0 に近いままでいる傾向があります

00:00:46.000 --> 00:00:48.000
これを実装したところです

00:00:48.000 --> 00:00:51.000
ここで重要な質問があります

00:00:51.000 --> 00:00:55.000
どうやって適切な制御ゲインを見つければいいでしょうか

00:00:55.000 --> 00:01:01.000
制御ゲインはパラメーター tau p d i です

00:01:01.000 --> 00:01:03.000
これはこの講義で私が好きな部分です

00:01:03.000 --> 00:01:07.000
受講者全員がやり遂げました みんな私の主張に当惑していましたが

00:01:07.000 --> 00:01:14.000
実装後はこれから行うことを気に入りました

00:01:14.000 --> 00:01:17.000
先ほどのゲイン値を求めるためにTWIDDLEと呼ばれるアルゴリズム(最適解を求める手法)を使います。

00:01:17.000 --> 00:01:21.000
いじり回しは私がこれまで使ってきた中で気に入っているアルゴリズムです

00:01:21.000 --> 00:01:26.000
少し上品に聞こえるよう 座標上昇法と呼ぶ人もいますが

