WEBVTT
Kind: captions
Language: ja

00:00:00.000 --> 00:00:05.000
次の基本的な質問は基準線を
越えない方法があるかについてです

00:00:05.000 --> 00:00:11.000
蛇行する車に乗っていても楽しくないので
蛇行をなくすことができればいいですね

00:00:11.000 --> 00:00:14.000
実際に乗ると車酔いします

00:00:14.000 --> 00:00:20.000
DARPAグランド・チャレンジの準備で
数ヵ月間乗っていたのでこれは事実です

00:00:20.000 --> 00:00:23.000
解消するにはPD制御と呼ばれる方法を使います

00:00:23.000 --> 00:00:29.000
PD制御では操舵αはゲインパラメータτpに基づく

00:00:29.000 --> 00:00:33.000
クロストラックエラーのみと
関係するわけではありません

00:00:33.000 --> 00:00:36.000
クロストラックエラーの時間導関数にも関係します

00:00:36.000 --> 00:00:38.000
つまりどういうことかと言うと

00:00:38.000 --> 00:00:43.000
クロストラックエラーを減らすために
車が十分に向きを変えた時

00:00:43.000 --> 00:00:50.000
x軸に向かって思い切り動くだけでなく
それまでのエラーの減少にも注目します

00:00:50.000 --> 00:00:56.000
エラーが小さくなると逆に操舵し
再び上方向へ誘導します

00:00:56.000 --> 00:01:01.000
車は目標軌道へ緩やかに接近することができます

00:01:01.000 --> 00:01:07.000
ただし微分ゲインτdと
比例ゲインτpの適切な設定が前提です

00:01:07.000 --> 00:01:10.000
この導関数をどう求めますか？

00:01:10.000 --> 00:01:20.000
これは時間tにおいてCTEt－CTEt－1を

00:01:20.000 --> 00:01:24.000
tとt－1の間のタイムスパンΔtで
割ったものと等しいです

00:01:24.000 --> 00:01:29.000
コードではΔt＝1とするとこれを省略できます

00:01:29.000 --> 00:01:35.000
現在と前回のクロストラックエラーの差が
この項です

00:01:35.000 --> 00:01:41.000
エラーそのものだけでなく
エラーの差分にも比例するように制御します

00:01:41.000 --> 00:01:47.000
エラーの差分は2つ目の定数τdを使います

00:01:47.000 --> 00:01:53.000
これを実装しましょう　runコマンドに
2つのパラメータparam1とparam2を与えます

00:01:53.000 --> 00:01:58.000
操舵の向きを変えるコントローラを
実装してください

00:01:58.000 --> 00:02:03.000
param1に従って比例的に
param2に従って微分的に行います

00:02:03.000 --> 00:02:07.000
今回も100ステップ実行し
何が起こるか確認しましょう

00:02:07.000 --> 00:02:13.000
新たなコントローラを実行します
比例パラメータ0．2と

00:02:13.000 --> 00:02:16.000
微分パラメータ3．0です

00:02:16.000 --> 00:02:22.000
すると0に向かって穏やかに収束する
yの値の数列を得ます

00:02:22.000 --> 00:02:25.000
すばらしいことに時間がたつにつれ

00:02:25.000 --> 00:02:29.000
本当に0に収まってそのまま落ち着きます

00:02:29.000 --> 00:02:32.000
比例コントローラでは
成し遂げられなかったことです

00:02:32.000 --> 00:02:35.000
テスト用にこのルーチンを書いてください

