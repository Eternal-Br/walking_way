WEBVTT
Kind: captions
Language: ru

00:00:00.000 --> 00:00:04.000
В вертеть мы стараемся оптимизировать для набора параметров.

00:00:04.000 --> 00:00:09.000
Чтобы сделать это, наша функция run() должен возвращать добра.

00:00:09.000 --> 00:00:11.000
Это значение доброта может быть ошибка средняя crosstrack.

00:00:11.000 --> 00:00:16.000
Говорят, что я хотел осуществить вертеть таким образом, чтобы свести к минимуму ошибки средняя crosstrack.

00:00:16.000 --> 00:00:21.000
Если это так, то результат выполнения зависит трех параметров.

00:00:21.000 --> 00:00:23.000
Вот как работает вертеть.

00:00:23.000 --> 00:00:28.000
Построить параметр вектор нашей 3-целевых параметров и инициализируйте его с нуля.

00:00:28.000 --> 00:00:35.000
Кроме того, построить вектор потенциальные изменения, что вы хотите зонд и их инициализировать сейчас с 1.

00:00:35.000 --> 00:00:39.000
Затем вы можете запустить нашей команды, запускать () с нашими параметрами

00:00:39.000 --> 00:00:44.000
и все, что он выводит до сих пор наши лучшие ошибка.

00:00:44.000 --> 00:00:48.000
Теперь мы хотим изменить p чтобы сделать ошибку меньше.

00:00:48.000 --> 00:00:51.000
Вот где вертеть приходит. Я считаю, что это очень умный алгоритм.

00:00:51.000 --> 00:00:54.000
Мы последовательно пройти через эти параметры.

00:00:54.000 --> 00:00:58.000
Очевидно вы не должны написать 3. Вы должны написать лен p.

00:00:58.000 --> 00:01:02.000
Сначала мы пытались увеличить p на нашей зондирующего величину

00:01:02.000 --> 00:01:06.000
Вычислите новую ошибку для этого новое изменение p.

00:01:06.000 --> 00:01:10.000
Если эта новая ошибка это лучше, чем наши лучшие ошибка, то мы делаем две вещи.

00:01:10.000 --> 00:01:17.000
Во-первых мы ставим best_err ошибаться, и мы даже изменить наши dp немного большее значение

00:01:17.000 --> 00:01:20.000
путем умножения его с 1.1.

00:01:20.000 --> 00:01:23.000
В противном случае мы стараемся другим способом.

00:01:23.000 --> 00:01:29.000
Мы вычитаем dp от p--и мы должны сделать это дважды теперь, потому что мы добавили его раньше.

00:01:29.000 --> 00:01:31.000
Тогда мы делаем то же самое снова здесь. Я не собираюсь написать ее.

00:01:31.000 --> 00:01:38.000
Мы проверяем, является ли ошибка лучше, чем наши лучшие ошибка, мы сохраняем и dp умножить 1.1.

00:01:38.000 --> 00:01:41.000
Но если оба из тех не--это одна над здесь и это один над здесь--

00:01:41.000 --> 00:01:49.000
Мы установите p [i] исходное значение, и мы уменьшить наши зондирующего вещи здесь,

00:01:49.000 --> 00:01:54.000
Скажем, путем умножения с 0,9.

00:01:54.000 --> 00:01:59.000
Это ядро вертеть, и что она действительно делает это для каждой координаты в изоляции

00:01:59.000 --> 00:02:03.000
она движется наш параметр вниз немного на это значение здесь.

00:02:03.000 --> 00:02:10.000
Если он затем находит лучшее решение, оно сохраняет его, и он даже увеличивает зондирующего интервал.

00:02:10.000 --> 00:02:15.000
Если она не сможет найти лучшее решение, она восходит к оригиналу и уменьшается нашей зондирующего интервала.

00:02:15.000 --> 00:02:22.000
Мы делаем это всю вещь, до тех пор, пока сумма dp-больше, чем порог.

00:02:22.000 --> 00:02:34.000
Где-то здесь мы скажем пока некоторые из dp больше, чем 0,00001.

00:02:34.000 --> 00:02:36.000
Это трудно читать, но я надеюсь, что вы можете последовать за.

00:02:36.000 --> 00:02:41.000
Это вертеть. Позвольте мне поставить это в фотографии.

00:02:41.000 --> 00:02:44.000
У нас есть три параметра--0, 0, 0.

00:02:44.000 --> 00:02:49.000
Затем на первой итерации мы bump один из параметров и посмотреть, если он улучшает ошибки.

00:02:49.000 --> 00:02:51.000
Если это так, мы сохранить его.

00:02:51.000 --> 00:02:53.000
Тогда мы идем к второй параметр. Мы bump. Она не может работать.

00:02:53.000 --> 00:02:56.000
Мы bump его вниз и, возможно, сохранить что один и так далее.

00:02:56.000 --> 00:03:02.000
Теперь, как мы держать bumping вверх, мы могли бы найти что ни bumping вверх ни натыкаясь вниз помогает.

00:03:02.000 --> 00:03:06.000
Что мы делаем, вместо этого, мы сохранить оригинальное решение, но сделать наши зондирующего интервал

00:03:06.000 --> 00:03:09.000
меньше, чем раньше на коэффициент 0,9.

00:03:09.000 --> 00:03:14.000
Поступая таким образом, мы можно увеличить больше и больше в параметр detailed до тех пор, пока он наконец сходится.

00:03:14.000 --> 00:03:20.000
Это местные Хилл альпинист, но это случается быть действительно, действительно эффективным.

