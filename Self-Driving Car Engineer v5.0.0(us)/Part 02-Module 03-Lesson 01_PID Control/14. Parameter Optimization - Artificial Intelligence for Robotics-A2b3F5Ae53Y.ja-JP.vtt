WEBVTT
Kind: captions
Language: ja-JP

00:00:00.048 --> 00:00:02.528
これを実装するため 実行プロシージャ―を修正し

00:00:02.528 --> 00:00:05.383
3 つのパラメーターのパラメーターベクター

00:00:05.383 --> 00:00:08.124
を入力しました理由は後でわかりますが

00:00:08.124 --> 00:00:11.123
printflag を設けて false にデフォルト設定しました

00:00:11.123 --> 00:00:14.293
前回と同じ初期パラメーターの

00:00:14.293 --> 00:00:16.300
speed err crosstrack_error

00:00:16.300 --> 00:00:19.198
int_crosstrack_error を持たせます 5 番目のパラメーターを設定して

00:00:19.198 --> 00:00:21.416
パラメーター選択の効果が error に

00:00:21.416 --> 00:00:23.261
どう影響するかもう少し明確

00:00:23.261 --> 00:00:26.267
になるようにします

00:00:26.267 --> 00:00:29.690
総数の式を N * 2 に設定します

00:00:29.690 --> 00:00:32.518
crosstrack_error の総和を求める際は

00:00:32.518 --> 00:00:34.902
ステップ N から数えればいいだけです

00:00:34.902 --> 00:00:37.243
アルゴリズムが N ステップを 0 に変換できるようにしたので

00:00:37.243 --> 00:00:39.450
crosstrack_error は計算されませんが

00:00:39.450 --> 00:00:41.546
ステップ 101 から 200 までに crosstrack_error

00:00:41.546 --> 00:00:46.164
がどう劇的に変化するか知りたいと思います

00:00:46.164 --> 00:00:49.617
printflag が設定されていれば分散ではなく

00:00:49.617 --> 00:00:52.828
度数で出力するように設定し err の平均を値の前に返すようにします

00:00:52.828 --> 00:00:55.533
twiddle ルーチンを記述します

00:00:55.533 --> 00:00:57.570
最適なパラメーターを見つけて

00:00:57.570 --> 00:00:59.241
それらを返すルーチンですでは 許容値と

00:00:59.241 --> 00:01:02.130
しきい値が 0.001 になる twiddle を

00:01:02.130 --> 00:01:06.168
実装してくださいtwiddle では時間経過によるパラメーターと

00:01:06.168 --> 00:01:10.050
クロストラックエラーが出力

00:01:10.050 --> 00:01:12.593
されますこのクロストラックエラーは

00:01:12.593 --> 00:01:16.136
すぐに 0 になります何回か繰り返すと

00:01:16.136 --> 00:01:20.031
私の実装では 107 番目で

00:01:20.031 --> 00:01:23.621
クロストラックエラーが 3.611x10-17

00:01:23.621 --> 00:01:26.060
になりましたここに典型的な制御の

00:01:26.060 --> 00:01:29.364
出力があります 位置 x y 方向があり

00:01:29.364 --> 00:01:31.309
ドリフトは一定です 私が設定した固定の

00:01:31.309 --> 00:01:33.713
ドリフトパラメーターになります 初期の誤差は

00:01:33.713 --> 00:01:37.625
平均で 195 ですしかし時間が

00:01:37.625 --> 00:01:40.725
少し過ぎると y の誤差が

00:01:40.725 --> 00:01:43.458
10-6に減ることがわかります そして減ったままになります

00:01:43.458 --> 00:01:45.788
コントローラーが目標位置の追跡において

00:01:45.788 --> 00:01:49.604
いい結果を出している証拠です

00:01:49.604 --> 00:01:52.273
時間ステップが 100 から 200 の間の最終的な

00:01:52.273 --> 00:01:55.999
制御誤差は 3.611 ですtwiddle の実装をしたかったので

00:01:55.999 --> 00:01:58.748
これまでの設定を変えるかもしれませんが

00:01:58.748 --> 00:02:01.470
実行すれば PID コントローラーで使える

00:02:01.470 --> 00:02:03.859
最適なパラメーターがわかるでしょう

00:02:03.859 --> 00:02:05.866
最終的な制御誤差は

00:02:05.866 --> 00:02:07.890
確認したようにかなり

00:02:07.890 --> 00:02:10.830
小さくなるはずです

