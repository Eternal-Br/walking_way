WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:04.000
これが皆さんに実装してほしいコントローラーです

00:00:04.000 --> 00:00:06.000
これが準備したコードです

00:00:06.000 --> 00:00:08.000
なじみのある class robot があります

00:00:08.000 --> 00:00:13.000
それには「init」があります前のように関数「set」を使って位置を設定できます

00:00:13.000 --> 00:00:16.000
steering_noise と distance_noise があります

00:00:16.000 --> 00:00:18.000
これはよくご存じですよね

00:00:18.000 --> 00:00:20.000
また 「drift」と呼ばれるものがあり これは今は使いませんが

00:00:20.000 --> 00:00:22.000
あとで役立ちます

00:00:22.000 --> 00:00:28.000
前にいろんな方法で実装していた move コマンドがあります

00:00:28.000 --> 00:00:33.000
 float を使ったコーディネートのプリントアウトを少し改善しました

00:00:33.000 --> 00:00:38.000
input に クロストラックエラーにステアリング角度の比例する応答を管理するコントロールパラメーターを使う

00:00:38.000 --> 00:00:43.000
 run コマンドを実行します

00:00:43.000 --> 00:00:48.000
ロボットの初期位置が 0 1 0 で速度が 1 とします

00:00:48.000 --> 00:00:51.000
それを 100 回シミュレートしようと思います

00:00:51.000 --> 00:00:53.000
これが私が想像することです

00:00:53.000 --> 00:00:57.000
ロボットは最初 x 軸から 1 ずれています

00:00:57.000 --> 00:01:00.000
x 軸に沿って運転します

00:01:00.000 --> 00:01:04.000
y 値はクロストラックエラーと同じようになります

00:01:04.000 --> 00:01:08.000
回転すると 比例コントローラーの応答強さを設定するパラメーター τ を使用して

00:01:08.000 --> 00:01:14.000
y 値に逆比例します

00:01:14.000 --> 00:01:19.000
ロボットが x 軸に向かって曲がって

00:01:19.000 --> 00:01:22.000
 その方向に運転し 通り過ぎ 折り返し 戻ってくるようにします

00:01:22.000 --> 00:01:28.000
これを行うには 800 回シミュレートし クロストラックエラー y に比率で

00:01:28.000 --> 00:01:35.000
ステアリング角度 α を設定する比例期間を使用します

00:01:35.000 --> 00:01:41.000
ここにコードを入力して それが完了すると 係数 0.1 でそれを実行します

00:01:41.000 --> 00:01:45.000
それが生成したい出力ですそれは 100 個の車線です

00:01:45.000 --> 00:01:47.000
ロボットの位置は y から 1 ずれて始まります

00:01:47.000 --> 00:01:53.000
y はだんだん減っていき 負の領域に入っていきます

00:01:53.000 --> 00:01:56.000
右側には これに対応するステアリング位置があります

00:01:56.000 --> 00:02:02.000
また y が正の領域に戻ってくるのがわかります

00:02:02.000 --> 00:02:07.000
そして ロボットが x 軸の参照トラジェクトリーのまわりをゆっくりと通り過ぎるのがわかります

00:02:07.000 --> 99:59:59.999
これを実行してみてください

