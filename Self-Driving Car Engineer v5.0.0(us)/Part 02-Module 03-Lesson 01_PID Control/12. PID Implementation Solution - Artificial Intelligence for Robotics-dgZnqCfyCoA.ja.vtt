WEBVTT
Kind: captions
Language: ja

00:00:00.000 --> 00:00:02.000
これが私の答えです

00:00:02.000 --> 00:00:05.000
変数int＿crosstrack＿errorを
メインループの外に実装しました

00:00:05.000 --> 00:00:07.000
0で初期化します

00:00:07.000 --> 00:00:12.000
int＿crosstrack＿errorに
ローカルなcrosstrack＿errorを加えます

00:00:12.000 --> 00:00:17.000
int＿crosstrack＿errorに比例して
操舵するコントローラがあります

00:00:17.000 --> 00:00:21.000
RUNボタンを押すと変数yが

00:00:21.000 --> 00:00:27.000
最後に0か0．05へ至るまで
ゆっくりと収束することが分かります

00:00:27.000 --> 00:00:31.000
このパラメータを0．01に設定すると
より早く収束します

00:00:31.000 --> 00:00:37.000
見ていくと少し基準線を越えていますが
コントローラは急速に0．0に収束します

00:00:37.000 --> 00:00:40.000
また0．0に近いままでいる傾向があります

00:00:40.000 --> 00:00:46.000
このPID制御は
制御問題に対する最適な解決法です

00:00:46.000 --> 00:00:48.000
まさに今 実装しました

00:00:48.000 --> 00:00:51.000
ここで重要な質問があります

00:00:51.000 --> 00:00:55.000
どうやって適切な制御ゲインを
見つければいいでしょうか？

00:00:55.000 --> 00:01:00.000
制御ゲインはパラメータτp、τd、τiです

00:01:00.000 --> 00:01:03.000
これはこの講義で私が好きな部分です

00:01:03.000 --> 00:01:05.000
受講者全員がやり遂げました

00:01:07.000 --> 00:01:13.000
みんな私の主張に当惑していましたが
実装後はこれから行うことを気に入りました

00:01:13.000 --> 00:01:17.000
先ほどの正解には“いじり回し”と
呼ばれるものを使います

00:01:17.000 --> 00:01:21.000
いじり回しは私がこれまで使ってきた中で
気に入っているアルゴリズムです

00:01:21.000 --> 00:01:26.000
少し上品に聞こえるよう
座標上昇法と呼ぶ人もいますが

00:01:26.000 --> 00:01:31.000
動作をうまく言い表しているので
私はいじり回しと呼んでいます

