WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:05.000
基本的な次の質問は 行き過ぎるのを避ける方法があるかというものです

00:00:05.000 --> 00:00:11.000
振動のある車は運転したくないので できるのならそれに越したことはないです

00:00:11.000 --> 00:00:14.000
実際 すごいひどい船酔いのようになります 本当に

00:00:14.000 --> 00:00:20.000
DARPA グランド・チャレンジへの準備で 数か月間この車に乗り続けてたから

00:00:20.000 --> 00:00:23.000
トリックを「PD-control」と言います

00:00:23.000 --> 00:00:30.000
PD-control では ステアリング α はパラメーター τ p を

00:00:30.000 --> 00:00:33.000
増やすことクロストラックエラーに関連しているだけではなく

00:00:33.000 --> 00:00:36.000
クロストラックエラーの一時的な微分係数にも関連しています

00:00:36.000 --> 00:00:43.000
これは 車がクロストラックエラーを減らすために十分に調整されていると

00:00:43.000 --> 00:00:46.000
x 軸にぶつかるだけでなく

00:00:46.000 --> 00:00:51.000
既にエラーを減らしていることに気づくはずです

00:00:51.000 --> 00:00:57.000
エラーは徐々に小さくなります反対側に進みますまた上に進みます

00:00:57.000 --> 00:01:00.000
これにより τd と比例増加 τp の異なる増加の適切な設定を 推定することで

00:01:00.000 --> 00:01:08.000
目標のトラジェクトリーにアプローチできます

00:01:08.000 --> 00:01:10.000
ここでこの微分係数をどのように計算しますか

00:01:10.000 --> 00:01:18.000
まず 時間tはクロストラックエラーと同じなので

00:01:18.000 --> 00:01:25.000
時間tクロストラックエラーからクロストラックエラーtから1引いたものを tからtー1間の時間で割ります

00:01:25.000 --> 00:01:29.000
コードでは Δt は 1 になり これを省くことができます

00:01:29.000 --> 00:01:36.000
現在のクロストラックエラーと前のクロストラックエラーの違いは ここの文字のところです

00:01:36.000 --> 00:01:41.000
今 エラー自体の比例だけを制御するのではなく 2番目の定数 τd を使ってエラーの

00:01:41.000 --> 00:01:47.000
この違いも制御します

00:01:47.000 --> 00:01:53.000
これを実行してみましょうrun コマンドに 2 つのパラメーター param1 と param2 を提供します

00:01:53.000 --> 00:01:58.000
parameter 1 に従って比例する また異なるように比例する parameter 2

00:01:58.000 --> 00:02:03.000
に従ってステアリングの方向が変化するコントローラーを実装します

00:02:03.000 --> 00:02:08.000
もう一度 100回行うとどうなるか見てみましょう

00:02:08.000 --> 00:02:13.000
{#27}差分パラメーターを 0.2 別の方を 3.0 に設定して新しいコントローラーを実行したとします

00:02:13.000 --> 00:02:16.000
増やすことクロストラックエラーに関連しているだけではなく

00:02:16.000 --> 00:02:22.000
すると y の値は連続してほぼ 0 に近づきます

00:02:22.000 --> 00:02:29.000
驚異的に 続けていくと 0 になり その後 0 のままになり

00:02:29.000 --> 00:02:32.000
比例制御では成し遂げられなかった事です

00:02:32.000 --> 99:59:59.999
テストするためにこのルーチンを書いておいてください

