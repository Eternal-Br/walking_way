WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:01.390
&gt;&gt; このレッスンを手伝ってくれる

00:00:01.390 --> 00:00:03.085
Drew Gray氏をお迎えしています

00:00:03.085 --> 00:00:05.295
彼は現在はUberの一部である

00:00:05.295 --> 00:00:07.710
Ottoで自動運転車チームを率いています参加してくれてありがとう Drew

00:00:07.710 --> 00:00:08.730
&gt;&gt; どういたしまして

00:00:08.730 --> 00:00:11.370
&gt;&gt; さて Drew もう少し詳しく

00:00:11.370 --> 00:00:14.310
Ottoでの自動運転車に関するディープラーニングの利用について話してもらえますか

00:00:14.310 --> 00:00:18.065
&gt;&gt; そうですねディープニューラルネットワークはOttoでの私の仕事の中心です

00:00:18.065 --> 00:00:20.085
自動運転が可能かどうかを探っているのですが

00:00:20.085 --> 00:00:22.650
それにはディープニューラルネットワークだけを使用し 他には何も使用していません

00:00:22.650 --> 00:00:24.465
それを行動クローニングと呼ぶこともあります

00:00:24.465 --> 00:00:27.240
人間の運転行動をクローンするネットワークをトレーニングしているからです

00:00:27.240 --> 00:00:30.150
また エンドツーエンドラーニングと呼ばれることもあります

00:00:30.150 --> 00:00:33.065
ネットワークはセンサーからの入力だけを使用して

00:00:33.065 --> 00:00:34.550
正しいステアリング角度と速度を予測することを学習するからです

00:00:34.550 --> 00:00:36.390
&gt;&gt; 私が理解している限りではディープラーニングは

00:00:36.390 --> 00:00:38.655
自動運転車を作るための唯一のアプローチではありません

00:00:38.655 --> 00:00:40.440
長年 人々は より伝統的な種類の

00:00:40.440 --> 00:00:42.855
ロボット工学アプローチに取り組んできました

00:00:42.855 --> 00:00:46.100
では なぜロボット工学アプローチよりディープラーニングなのでしょうか

00:00:46.100 --> 00:00:50.040
&gt;&gt; そのとおりです私の博士号は実際には制御理論と人工知能におけるものです

00:00:50.040 --> 00:00:52.230
そこで私は多くの時間を両方のアプローチに費やしてきました

00:00:52.230 --> 00:00:53.940
実際 Ottoのエンジニアはディープラーニングと

00:00:53.940 --> 00:00:56.810
標準的ロボット工学アプローチの両方に取り組んでいます

00:00:56.810 --> 00:00:59.280
私がディープラーニングに取り組んでいるのは 自動運転車の開発方法を

00:00:59.280 --> 00:01:01.920
根本から変える可能性があると思っているからです

00:01:01.920 --> 00:01:04.320
&gt;&gt; すごいですもう少し詳しく

00:01:04.320 --> 00:01:08.055
ディープラーニングアプローチとロボット工学アプローチの違いについて説明してもらえますか

00:01:08.055 --> 00:01:10.470
&gt;&gt; ロボット工学アプローチによる自動運転車の構築には

00:01:10.470 --> 00:01:13.275
センサー 制御 およびプランニングに関する多くの詳細な知識が必要です

00:01:13.275 --> 00:01:14.700
ディープラーニングアプローチでは

00:01:14.700 --> 00:01:17.620
詳細な知識を車両にプログラミングする必要はありません

00:01:17.620 --> 00:01:20.485
ただ 持てる情報のすべてをネットワークに与えて

00:01:20.485 --> 00:01:23.260
ネットワークにとって何が重要かをネットワーク自身に見つけさせます

00:01:23.260 --> 00:01:27.060
また ディープラーニングではフィードバックループを作ることができ 運転すればするほど

00:01:27.060 --> 00:01:28.395
より多くのデータを収集でき

00:01:28.395 --> 00:01:30.870
より良い運転方法を学ぶことができます

00:01:30.870 --> 00:01:33.330
&gt;&gt; あなたがしていることは学生がこのモジュールの最後の

00:01:33.330 --> 00:01:36.230
最終的なプロジェクトで行うことと かなり似ているようですね

00:01:36.230 --> 00:01:39.300
学生が実装するのは行動クローニングとシミュレーターですが

00:01:39.300 --> 00:01:41.520
&gt;&gt; ええ シミュレーターは確かに物事を簡単にしてくれますが

00:01:41.520 --> 00:01:43.140
シミュレーターでも実際の車でも

00:01:43.140 --> 00:01:45.620
全体的な原理は同じです

00:01:45.620 --> 00:01:49.450
&gt;&gt; なるほど  でもディープニューラルネットワークだけで実際の車を運転できますか

00:01:49.450 --> 00:01:51.660
&gt;&gt;できます実際 最近 サンフランシスコから

00:01:51.660 --> 00:01:54.165
空港までの高速道路の往復20マイルを

00:01:54.165 --> 00:01:56.070
一度もハンドルに触らずに運転しました

00:01:56.070 --> 00:01:58.170
&gt;&gt; 驚きです本当にできるのですね

00:01:58.170 --> 00:02:00.450
では ディープニューラルネットワークの構築を始めましょう

00:02:00.450 --> 00:02:01.110
&gt;&gt; 早速始めましょう

