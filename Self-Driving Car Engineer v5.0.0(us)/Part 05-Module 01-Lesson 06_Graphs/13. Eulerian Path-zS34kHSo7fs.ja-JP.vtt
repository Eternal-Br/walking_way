WEBVTT
Kind: captions
Language: ja-JP

00:00:00.280 --> 00:00:04.490
パスとグラフには特に顕著な
タイプのものが 2 種類あります

00:00:04.490 --> 00:00:09.120
ここでのパスとはトラバーサルメソッドや
検索における特定の経路です

00:00:09.120 --> 00:00:13.900
たとえば、グラフのエッジを
少なくとも一度通る

00:00:13.900 --> 00:00:14.340
パスを作成することができます

00:00:15.500 --> 00:00:18.620
このパスはオイラー路と呼ばれるもので

00:00:18.620 --> 00:00:23.890
著名な数学者オイラーに
ちなんで命名されました

00:00:23.890 --> 00:00:27.270
基本的なオイラー路では
1 つのノードを始点とし

00:00:27.270 --> 00:00:31.600
すべてのエッジを通過して
別のノードに終着します

00:00:32.880 --> 00:00:36.965
オイラーサイクルでは
各エッジを一度だけ通過し

00:00:36.965 --> 00:00:38.865
始点のノードに
戻ります

00:00:40.550 --> 00:00:45.850
すべてのグラフにオイラー路が
存在するわけではありません

00:00:45.850 --> 00:00:47.225
このグラフではどこから始めても
外側にあるノードの 1 つに

00:00:47.225 --> 00:00:51.250
辿り着いてしまい
すでに通ったエッジを

00:00:51.250 --> 00:00:54.745
通過せずに他のノードに
到達することができません

00:00:55.795 --> 00:00:57.400
しかし、このような方法があります

00:00:57.400 --> 00:01:02.400
オイラーの論理によると
すべての頂点の次数が奇数

00:01:02.400 --> 00:01:07.950
あるいは連結されているエッジの数が奇数でなければ
オイラーサイクルは成立しません

00:01:07.950 --> 00:01:11.560
しかし、オイラー路は
それほど条件が厳しくなく

00:01:11.560 --> 00:01:15.650
2 つのノードがパスの出発点
または到着点である限り

00:01:15.650 --> 00:01:18.500
次数が奇数のノードを 2 つ持った
グラフを作成できます

00:01:19.440 --> 00:01:23.710
オイラーサイクルを見つけるための
アルゴリズムを見てみましょう

00:01:23.710 --> 00:01:25.539
任意の頂点から開始して

00:01:25.540 --> 00:01:28.210
その頂点に戻るまで
エッジを通過します

00:01:29.280 --> 00:01:33.690
通過しないエッジがある場合は
すでに通ったノードに連結している

00:01:33.690 --> 00:01:36.929
未通過のエッジから
始めてみてください

00:01:36.930 --> 00:01:40.670
このように未通過のエッジを
通るパスを作成します

00:01:40.670 --> 00:01:43.290
グラフにあるすべての
エッジを一度通るまで

00:01:43.290 --> 00:01:44.810
このプロセスを継続します

00:01:45.990 --> 00:01:49.149
そして、これらのパスを足し
共通のノードで

00:01:49.150 --> 00:01:51.320
パスを組み合わせます

00:01:52.515 --> 00:01:54.296
このアルゴリズムはとても効率的で

00:01:54.296 --> 00:02:00.170
パスが各エッジを一度通過するため
エッジの数はビッグ O-記法で表す

00:02:00.170 --> 00:02:01.560
ことができます

00:02:03.600 --> 00:02:06.530
各頂点を一度通過する
必要のあるもう 1 つのパスに

00:02:06.530 --> 00:02:09.860
ハミルトン路があります

00:02:09.860 --> 00:02:14.910
同様にハミルトンサイクルでは
始点と終点が同じとなります

00:02:14.910 --> 00:02:18.270
コンピューターサイエンスでは
すべての頂点を一度だけ通る閉路が

00:02:18.270 --> 00:02:22.810
存在するかどうか調べる
ハミルトン閉路問題が有名です

00:02:23.880 --> 00:02:26.859
この問題については
ツールが揃ってから取り組むことにして

00:02:26.860 --> 00:02:29.980
まずは他の有名な問題に
ついて扱いたいと思います

