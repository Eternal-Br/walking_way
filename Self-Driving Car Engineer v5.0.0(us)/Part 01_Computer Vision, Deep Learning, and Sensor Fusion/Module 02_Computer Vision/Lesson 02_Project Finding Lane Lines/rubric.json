{
  "id": 1967,
  "project_id": 206,
  "upload_types": [
    "repo",
    "zip"
  ],
  "file_filter_regex": "\\A(?!(((.*/)?(__MACOSX|\\.git|node_modules|bower_components|jspm_packages|\\.idea|build|.ipynb_checkpoints|\\.Trash-0|logs)(\\Z|/))))((.*\\.(css|docx|gradle|htm|html|java|js|markdown|md|pdf|py|rmd|rst|sql|swift|txt|xml|yaml|yml)\\Z)|((.*/)?(README|Readme|readme|Makefile)\\Z))",
  "nomination_eligible": true,
  "stand_out": "We provide two video clips to try your code on, but to make a project standout, try your code on the challenge.mp4 or on video you take yourself!",
  "hide_criteria": false,
  "created_at": "2018-06-04T04:41:53.259Z",
  "updated_at": "2019-03-26T17:05:38.722Z",
  "hashtag": "",
  "max_upload_size_mb": 500,
  "estimated_sla": null,
  "project_assistant_enabled": false,
  "checkmate_enabled": false,
  "checkmate_metadata": null,
  "available_for_cert_project": false,
  "classroom_node_id": 634561,
  "classroom_project_key": "41af8036-0195-45c1-9df8-b0bd3667238b",
  "language": "en-us",
  "ndkeys": [
    "nd013-ent",
    "nd013",
    "nd026"
  ],
  "coursekeys": [],
  "sections": [
    {
      "id": 3972,
      "name": "Required Files",
      "created_at": "2018-06-04T05:03:05.858Z",
      "updated_at": "2018-06-04T05:03:16.430Z",
      "deleted_at": null,
      "position": 0,
      "rubric_id": 1967,
      "rubric_items": [
        {
          "id": 11629,
          "section_id": 3972,
          "passed_description": "The project submission includes all required files:\n* Ipython notebook with code\n* A writeup report (either pdf or markdown)",
          "exceeded_description": null,
          "created_at": "2018-06-04T05:04:01.237Z",
          "updated_at": "2018-06-04T05:05:04.080Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Have all project files been included with the submission?",
          "exceedable": false
        }
      ]
    },
    {
      "id": 3973,
      "name": "Lane Finding Pipeline",
      "created_at": "2018-06-04T05:03:16.664Z",
      "updated_at": "2018-06-04T05:03:32.386Z",
      "deleted_at": null,
      "position": 1,
      "rubric_id": 1967,
      "rubric_items": [
        {
          "id": 11631,
          "section_id": 3973,
          "passed_description": "The output video is an annotated version of the input video.",
          "exceeded_description": null,
          "created_at": "2018-06-04T05:05:24.739Z",
          "updated_at": "2018-06-04T05:05:59.487Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Does the pipeline for line identification take road images from a video as input and return an annotated video stream as output?",
          "exceedable": false
        },
        {
          "id": 11632,
          "section_id": 3973,
          "passed_description": "In a rough sense, the left and right lane lines are accurately annotated throughout almost all of the video. Annotations can be segmented or solid lines",
          "exceeded_description": null,
          "created_at": "2018-06-04T05:06:03.854Z",
          "updated_at": "2018-06-04T05:07:37.739Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Has a pipeline been implemented that uses the helper functions and / or other code to roughly identify the left and right lane lines with either line segments or solid lines? (example solution included in the repository output: raw-lines-example.mp4)",
          "exceedable": false
        },
        {
          "id": 11634,
          "section_id": 3973,
          "passed_description": "Visually, the left and right lane lines are accurately annotated by solid lines throughout most of the video.",
          "exceeded_description": null,
          "created_at": "2018-06-04T05:07:44.282Z",
          "updated_at": "2018-06-04T05:08:29.588Z",
          "deleted_at": null,
          "optional": false,
          "position": 3,
          "criteria": "Have detected line segments been filtered / averaged / extrapolated to map out the full extent of the left and right lane boundaries? (example solution included in the repository: P1_example.mp4)",
          "exceedable": false
        }
      ]
    },
    {
      "id": 3974,
      "name": "Reflection",
      "created_at": "2018-06-04T05:03:32.628Z",
      "updated_at": "2018-06-04T05:04:00.869Z",
      "deleted_at": null,
      "position": 2,
      "rubric_id": 1967,
      "rubric_items": [
        {
          "id": 11636,
          "section_id": 3974,
          "passed_description": "Reflection describes the current pipeline, identifies its potential shortcomings and suggests possible improvements. There is no minimum length. Writing in English is preferred but you may use any language.",
          "exceeded_description": null,
          "created_at": "2018-06-04T05:08:37.385Z",
          "updated_at": "2018-06-04T05:09:35.013Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Has a thoughtful reflection on the project been provided in the notebook?",
          "exceedable": false
        }
      ]
    }
  ],
  "project": {
    "id": 206,
    "name": "Finding Lane Lines on the Road",
    "nanodegree_key": "nd013",
    "is_cert_project": false,
    "audit_project_id": null,
    "hashtag": null,
    "audit_rubric_id": 1144,
    "entitlement_required": null,
    "is_career": null,
    "recruitment_family_id": 9,
    "created_at": "2016-09-01T20:57:57.158Z",
    "updated_at": "2020-05-21T05:36:00.688Z",
    "price": "5.5",
    "ungradeable_price": "3.0",
    "audit_price": "8.0"
  }
}