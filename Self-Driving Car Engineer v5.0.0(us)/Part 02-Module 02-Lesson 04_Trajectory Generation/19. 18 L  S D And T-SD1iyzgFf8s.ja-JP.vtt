WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:04.259
ここまでは A* や Hybrid A* などのアルゴリズムを使って

00:00:04.259 --> 00:00:09.105
車両の構成のシーケンスを生成することを学んできました

00:00:09.105 --> 00:00:13.375
これをパスプランニングといいますでも時間はどうでしょうか?

00:00:13.375 --> 00:00:16.230
パスプランニングでは ドライビング面と長さを

00:00:16.230 --> 00:00:21.335
その上にある ある種の離散グリッドと想像します

00:00:21.335 --> 00:00:25.844
そして 開始状態と目標状態を指定してプランを作成します

00:00:25.844 --> 00:00:29.849
生成するトラジェクトリーは A* のようなアルゴリズムではこのようなもので

00:00:29.850 --> 00:00:34.469
Hybrid A* のようなアルゴリズムではこのようなものになります

00:00:34.469 --> 00:00:38.259
これらのアルゴリズムは自動運転では重要な役割を担います

00:00:38.259 --> 00:00:42.949
でも 生成される経路は予測をあまり考慮しません

00:00:42.950 --> 00:00:47.840
たとえば 青い車両が最初に車線を変えたかったときに戻ってみましょう

00:00:47.840 --> 00:00:51.465
ここで時間を 3 つ目の次元として含めます

00:00:51.465 --> 00:00:55.170
これを視覚化する 1 つの方法は 道路をある角度から見ている

00:00:55.170 --> 00:00:58.825
と想定し 時間は上にいく次元であるとします

00:00:58.825 --> 00:01:03.150
車両が開始車両の周りを通る経路に沿って移動する

00:01:03.149 --> 00:01:05.125
 1 つの方法はこのような感じのものです

00:01:05.125 --> 00:01:08.939
後ろにいると認識した高速で移動する車両は

00:01:08.939 --> 00:01:13.459
高速で車線に接近すると予測されます これはこのような感じです

00:01:13.459 --> 00:01:16.814
ですから 私達はすぐに車線を変更できないとわかります

00:01:16.814 --> 00:01:19.980
追い越された車の前 つまり 2 次元の

00:01:19.980 --> 00:01:23.535
別の赤色のポリグラムに行こうとした場合

00:01:23.534 --> 00:01:26.209
私達はこの車両と衝突するでしょう

00:01:26.209 --> 00:01:29.739
この車両が私達を通り過ぎるのを待つ必要があります

00:01:29.739 --> 00:01:31.394
赤い車が通り過ぎたら

00:01:31.394 --> 00:01:33.719
私達は車線変更に進むことができます

00:01:33.719 --> 00:01:36.569
これでおわかりのように 経路があることはよいのですが

00:01:36.569 --> 00:01:40.229
自動運転している動的物体が常に周りにあるときには

00:01:40.230 --> 00:01:45.210
プランニングの問題を解決することは十分ではありません

00:01:45.209 --> 00:01:48.908
そのため 構成のシーケンス s d θ だけではなく

00:01:48.909 --> 00:01:53.910
これらの構成がすべて遅れないように設定する必要もあります

00:01:53.909 --> 00:01:56.674
トラジェクトリーは任意の時間 t が

00:01:56.674 --> 00:02:00.784
車両の構成を関連付ける関数です

00:02:00.784 --> 00:02:03.780
今度は このようなトラジェクトリーを生成する方法が必要です

00:02:03.780 --> 00:02:05.790
これを行う方法では

00:02:05.790 --> 00:02:09.540
s 次元で行うプランニングを

00:02:09.539 --> 00:02:11.954
d 次元で行うプランニングと分けます

00:02:11.955 --> 00:02:15.731
3 つの次元のある 1 つの図を考えずに

00:02:15.730 --> 00:02:18.840
通常 2 つの図を推論します

00:02:18.840 --> 00:02:21.840
それぞれか 2 つの次元の図です

00:02:21.840 --> 00:02:23.250
前のビデオでやった車両の追跡演習

00:02:23.250 --> 00:02:27.974
と同じものをあと 2 回見ていきます

00:02:27.974 --> 00:02:33.614
1 つは s で もう 1 つは dのものです まず s から始めます t=0 のとき

00:02:33.615 --> 00:02:36.520
ここの車両は s=0 です

00:02:36.520 --> 00:02:39.655
t=1 のときここです

00:02:39.655 --> 00:02:45.860
そして 完全に停止する状況に達するまで動き続けます

00:02:45.860 --> 00:02:50.840
このグラフと見ると 車両が停止したことがわかります

00:02:50.840 --> 00:02:55.295
ここで 傾きがフラットになっており これは動きがないことを表します

00:02:55.294 --> 00:02:57.534
これは 経路を表すために前に使用した

00:02:57.534 --> 00:03:00.889
s と比較した t のグラフで見られなかったものです

00:03:00.889 --> 00:03:08.299
次に車両は t=15 の最終構成に達するまで再び動き出します

00:03:08.300 --> 00:03:10.838
t に対する d について同じことをしましょう

00:03:10.837 --> 00:03:15.514
道路に沿って進むと d は一定のままです

00:03:15.514 --> 00:03:22.699
そして車両は完全停止し 停止後左に移動を始めます

00:03:22.699 --> 00:03:25.899
緑色の車両を抜かした後

00:03:25.900 --> 00:03:27.650
元の車線に戻ります

00:03:27.650 --> 00:03:31.219
最後に 両方のトラジェクトリーを同時に

00:03:31.219 --> 00:03:33.979
見ることができます すごいことに

00:03:33.979 --> 00:03:37.159
車の動き全体を時間の経過とともに視覚化できます

00:03:37.159 --> 00:03:38.250
これは単に経路ではなくトラジェクトリーとなり

00:03:38.250 --> 00:03:45.189
この 15 秒間で車両がどう動いたかを完全に示すことができます

00:03:45.189 --> 00:03:50.000
次に 皆さんにこれらのようなグラフに関係した質問をしようと思います

