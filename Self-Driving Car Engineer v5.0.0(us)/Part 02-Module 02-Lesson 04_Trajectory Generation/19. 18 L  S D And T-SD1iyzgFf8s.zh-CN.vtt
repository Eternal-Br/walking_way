WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.259
截止现在 大家学习了有关生成一系列配置的内容

00:00:04.259 --> 00:00:09.105
使用的算法是 A* 和混合 A*

00:00:09.105 --> 00:00:13.375
有关路径规划 我们讲了这些内容 但是时间问题如何处理？

00:00:13.375 --> 00:00:16.230
在路径规划中 我们想象着把车辆行驶的路面拿掉

00:00:16.230 --> 00:00:21.335
然后把一些离散的格子放上去

00:00:21.335 --> 00:00:25.844
接着 我们指定开始状态和目标状态来制定规划

00:00:25.844 --> 00:00:29.849
我们使用 A* 族算法来生成这样的轨迹

00:00:29.850 --> 00:00:34.469
或者使用混合 A* 族算法来生成这样的轨迹

00:00:34.469 --> 00:00:38.259
这些算法在自动驾驶中非常重要

00:00:38.259 --> 00:00:42.949
但是 这些算法生成路径时 并没有将预测考虑在内

00:00:42.950 --> 00:00:47.840
例如 我们回到前面内容 此时蓝车想要变道

00:00:47.840 --> 00:00:51.465
这里我们会把时间纳入考量 作为第三维

00:00:51.465 --> 00:00:55.170
一种可视化的方式是 想想你正在观察路面

00:00:55.170 --> 00:00:58.825
从某个角度 时间将会是向上的维度

00:00:58.825 --> 00:01:03.150
沿着道路行驶的另一辆车将会沿着某个路径绕过蓝车

00:01:03.149 --> 00:01:05.125
路径如图所示一样

00:01:05.125 --> 00:01:08.939
而我们感知到的后面的快速移动车辆 

00:01:08.939 --> 00:01:13.459
预计将会高速进入这个车道 如这里所示

00:01:13.459 --> 00:01:16.814
这就是为何我们知道目前不能马上变道

00:01:16.814 --> 00:01:19.980
如果我们试图行驶在超过我们的车辆前方

00:01:19.980 --> 00:01:23.535
那么从二维展示来看 我们的路径将是另一个红色四边形

00:01:23.534 --> 00:01:26.209
那么 我们就会和该车发生碰撞

00:01:26.209 --> 00:01:29.739
我们不得不等待 让该车先过去

00:01:29.739 --> 00:01:31.394
一旦红车超过我们

00:01:31.394 --> 00:01:33.719
我们就能继续进行先前的动作

00:01:33.719 --> 00:01:36.569
现在大家都看到了 有一条路径就很不错

00:01:36.569 --> 00:01:40.229
但是有了路径并不能完全解决规划问题 因为我们周围还有动态对象

00:01:40.230 --> 00:01:45.210
在自动驾驶的世界中 动态对象时刻存在

00:01:45.209 --> 00:01:48.908
因此 我们不得不不但规划一系列配置

00:01:48.909 --> 00:01:53.910
还得给这些配置赋予时间值

00:01:53.909 --> 00:01:56.674
轨迹是一个函数

00:01:56.674 --> 00:02:00.784
在任一时间点上 该函数可以求得一辆车的一个配置

00:02:00.784 --> 00:02:03.780
现在 我们需要一种方式来生成这样的一条轨迹

00:02:03.780 --> 00:02:05.790
我们用来解决这个问题的方法

00:02:05.790 --> 00:02:09.540
就是把我们在 S 维度上做的规划

00:02:09.539 --> 00:02:11.954
从我们在 d 维度上做的规划中分离出来

00:02:11.955 --> 00:02:15.731
我们不会考虑一张三维的图片

00:02:15.730 --> 00:02:18.840
通常我们会推导出两张图片

00:02:18.840 --> 00:02:21.840
每一个都是2维的

00:02:21.840 --> 00:02:23.250
我会给大家展示我们在上一个视频中所做的

00:02:23.250 --> 00:02:27.974
同样的车辆跟踪练习 我们来做两次

00:02:27.974 --> 00:02:33.614
一个是 s 另一个是 d 我们从 s 开始讲起

00:02:33.615 --> 00:02:36.520
当 t=0 时 车在这里 s=0

00:02:36.520 --> 00:02:39.655
然后当 t=1 时 车在这里

00:02:39.655 --> 00:02:45.860
该车继续行驶 直到完全停止不动

00:02:45.860 --> 00:02:50.840
大家注意 我们可以从这张图上看出这辆车已经停下来了

00:02:50.840 --> 00:02:55.295
这里大家可以看到一个平坡 表示没有移动发生

00:02:55.294 --> 00:02:57.534
这在我们前面使用的 代表一条路径的t-s 关系图上

00:02:57.534 --> 00:03:00.889
是看不出来的

00:03:00.889 --> 00:03:08.299
接着该车又开始移动 直到达到它的最终状态集 在 t=15 处

00:03:08.300 --> 00:03:10.838
现在 我们以同样的方式来查看 d 关于 t 的情况

00:03:10.837 --> 00:03:15.514
当我们沿着道路行驶 d 保持不变

00:03:15.514 --> 00:03:22.699
接着 车辆进入完全停止状态 在停止之后 车辆开始向左位移

00:03:22.699 --> 00:03:25.899
在它超过绿车之后

00:03:25.900 --> 00:03:27.650
它回到原来的车道

00:03:27.650 --> 00:03:31.219
最后 我们同时来看看两条轨迹

00:03:31.219 --> 00:03:33.979
我们能够可视化地显示汽车随时间的整个运动

00:03:33.979 --> 00:03:37.159
这是非常方便的

00:03:37.159 --> 00:03:38.250
它现在不仅仅是一条路径

00:03:38.250 --> 00:03:45.189
它是一条轨迹 并且 我们可以完全描述出车辆在15秒内的动作

00:03:45.189 --> 00:03:50.000
下面 我将请大家思考一些有关这些图的问题

