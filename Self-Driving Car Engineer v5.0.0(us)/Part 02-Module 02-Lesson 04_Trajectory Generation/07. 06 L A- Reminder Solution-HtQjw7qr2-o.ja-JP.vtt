WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:03.140
最初の問題の答えは NO です

00:00:03.140 --> 00:00:06.089
A* を実行する前の最初のステップは

00:00:06.089 --> 00:00:09.949
これらかプランニングする世界を表す離散的な状態を定義することです

00:00:09.949 --> 00:00:13.114
その前に A* とは離散メソッドのことです

00:00:13.115 --> 00:00:15.855
2 問目の答えは YES です

00:00:15.855 --> 00:00:17.089
有効にするためには

00:00:17.089 --> 00:00:20.109
A* ヒューリスティックを最適化する必要があります

00:00:20.109 --> 00:00:25.679
セルからゴールまでの実際のコストより低く見積もる必要があります

00:00:25.679 --> 00:00:29.210
A* は解があれば必ず見つけます

00:00:29.210 --> 00:00:33.895
A*は完全な計画アルゴリズムであることを思い出してください

00:00:33.895 --> 00:00:37.560
次の表明は少し複雑です

00:00:37.560 --> 00:00:42.225
これは使用するサーチスペースとそれが表現するものに左右されるためです

00:00:42.225 --> 00:00:45.149
前の例でご覧になったようにサーチスペースが

00:00:45.149 --> 00:00:47.869
x と y の位置のみを表し

00:00:47.869 --> 00:00:49.634
車を動かそうとしている場合

00:00:49.634 --> 00:00:55.409
A* によって返される位置のシーケンスが実行可能か保証がありません

00:00:55.409 --> 00:00:58.299
したがって この問題の答えは NO です

00:00:58.299 --> 00:01:03.044
一方で A* はグラフサーチアルゴリズムであることを覚えておいてください

00:01:03.045 --> 00:01:06.989
見出しを含めた、より複雑な検索スペースを定義できる

00:01:06.989 --> 00:01:10.859
セルを閉じた時に上に追加した

00:01:10.859 --> 00:01:15.004
セル間のコネクションを制限し クロージングセルから新しいセルまで遷移する

00:01:15.004 --> 00:01:19.964
セルのみを設定することが可能です

00:01:19.965 --> 00:01:24.460
このような場合も リザルトパスは実行可能です

00:01:24.459 --> 00:01:27.729
これは文字列上での実行 A* に対応します

00:01:27.730 --> 00:01:29.895
それでは 最後の質問です

00:01:29.894 --> 00:01:33.719
ソリューション A* は入力に使用した環境の離散化を考慮して

00:01:33.719 --> 00:01:39.364
必ず最適な状態を探します

00:01:39.364 --> 00:01:41.384
離散化の粒度が細かいほど

00:01:41.385 --> 00:01:43.090
よりよいソリューションとなります

00:01:43.090 --> 00:01:45.350
これを解像度最適といいます

