WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.450
现在看来 与常规 A* 不同

00:00:02.450 --> 00:00:05.849
混合 A* 是一种连续方法

00:00:05.849 --> 00:00:08.969
因为 作为轨迹的一部分 我们结束时的配置  

00:00:08.970 --> 00:00:13.890
并非一个预定义的离散集合的一部分

00:00:13.890 --> 00:00:19.242
与 A* 相似 混合 A* 也使用一种优化过的试探方法

00:00:19.242 --> 00:00:21.769
但是 混合 A* 算法在某方面有所牺牲

00:00:21.769 --> 00:00:26.524
那就是 在有解情况下 它并不是每次都能找出来

00:00:26.524 --> 00:00:29.144
事实上 它牺牲的是完整性

00:00:29.144 --> 00:00:32.304
原因是 相较于离散的 A* 我们的结果要求是连续性的配置

00:00:32.304 --> 00:00:38.100
与 A* 相比 混合 A* 的重大提升之处在于

00:00:38.100 --> 00:00:40.800
它发现的解一定是可行驶的

00:00:40.799 --> 00:00:44.039
虽然并非是最优解

00:00:44.039 --> 00:00:47.335
在使用混合 A* 时

00:00:47.335 --> 00:00:52.320
我们牺牲了少许完整性和优化性 但是确保了可驾驶性

00:00:52.320 --> 00:00:54.689
而在实际应用中

00:00:54.689 --> 00:00:58.000
此算法效率极高 而且几乎每次都可以找到不错的路径

