WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.740
在第一课中

00:00:01.740 --> 00:00:03.629
大家看到了一些最佳规划算法

00:00:03.629 --> 00:00:05.718
这些算法解决了运动规划问题

00:00:05.718 --> 00:00:09.509
但是 我们从未正式定义什么是 “运动规划问题” 而接下来我将定义它

00:00:09.509 --> 00:00:12.044
从现在开始 如果你开始阅读与运动规划算法相关的材料

00:00:12.044 --> 00:00:15.210
那么 大家可能会多次遇到一个词

00:00:15.210 --> 00:00:18.315
那个词就是 “配置空间” 

00:00:18.315 --> 00:00:23.075
它在给定的世界中定义了一个机器人所有的可能配置 

00:00:23.074 --> 00:00:28.522
大家想一下在第一节课中看到的迷宫 在那里配置空间都是2D格子

00:00:28.522 --> 00:00:30.480
机器人配置有时候是2维的

00:00:30.480 --> 00:00:34.170
比如当我们使用 x_y 点来表示它时

00:00:34.170 --> 00:00:38.245
有时候是三维的 第三维表示它的前进方向

00:00:38.244 --> 00:00:41.729
事实上 我们为车辆所使用的配置空间有可能变得很大

00:00:41.729 --> 00:00:45.239
取决于我们决定使用什么运动规划算法

00:00:45.240 --> 00:00:48.570
现在我们有了配置空间的概念

00:00:48.570 --> 00:00:51.375
下面我们可以定义一个运动规划问题

00:00:51.375 --> 00:00:52.770
这里有3样东西

00:00:52.770 --> 00:00:56.145
一个是最初配置 另一个是目标配置

00:00:56.145 --> 00:01:00.265
还有一些约束 这些约束描述了车辆能或不能做哪些移动操作

00:01:00.265 --> 00:01:03.469
车辆的动力学 以及环境描述

00:01:03.469 --> 00:01:06.810
这里 重要的是去理解这些配置如何与

00:01:06.810 --> 00:01:10.469
其他决策生成模块相关联

00:01:10.469 --> 00:01:15.179
通常 开始配置是车辆的当前配置

00:01:15.180 --> 00:01:19.990
配置值通过定位模块和传感器获取

00:01:19.989 --> 00:01:23.242
包括车辆位置 速度 加速度等信息

00:01:23.242 --> 00:01:26.685
行为层会给我们一个期望的最终配置

00:01:26.685 --> 00:01:31.155
也可能会给出一些限制 比如以什么速度去到什么地方

00:01:31.155 --> 00:01:34.230
最后 预测模块解决整个运动规划问题 该模块会给我们

00:01:34.230 --> 00:01:38.085
有关障碍区域如何随着时间演进的信息

00:01:38.084 --> 00:01:40.829
这样 我们生成的动作序列就会把

00:01:40.829 --> 00:01:44.087
其他车辆和行人的动作纳入考量

00:01:44.087 --> 00:01:47.140
并且 如果我们使用一个更加先进的预测模块

00:01:47.140 --> 00:01:49.859
那么 我们的行为可能会影响周围对象的行为

00:01:49.859 --> 00:01:52.950
因此 运动规划问题可以被定义为

00:01:52.950 --> 00:01:56.939
在配置空间中最终的一系列可行的运动 

00:01:56.939 --> 00:01:59.685
这些运动将驱动机器人

00:01:59.685 --> 00:02:05.250
从开始配置移动到目标配置 过程中会绕开障碍物

00:02:05.250 --> 00:02:10.000
现在 我会问大家几个问题 帮助大家去思考配置空间

