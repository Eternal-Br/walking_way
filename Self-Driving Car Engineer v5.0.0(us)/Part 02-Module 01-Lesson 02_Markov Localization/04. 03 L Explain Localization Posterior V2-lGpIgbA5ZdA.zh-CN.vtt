WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:06.629
定位就是估算状态 Xt 也就是车辆位置的

00:00:06.629 --> 00:00:08.335
概率分布

00:00:08.335 --> 00:00:13.440
前提条件是所有之前的观察

00:00:13.439 --> 00:00:15.494
Z1 到 t

00:00:15.494 --> 00:00:18.269
以及所有之前的控制

00:00:18.269 --> 00:00:22.259
u1 到 t 都已经给定

00:00:22.260 --> 00:00:25.243
要解决纯粹的定位问题

00:00:25.242 --> 00:00:29.144
我们假设地图是正确不变的

00:00:29.144 --> 00:00:32.435
因此 地图也是给定的

00:00:32.435 --> 00:00:35.700
如果我们也想估算地图

00:00:35.700 --> 00:00:39.825
那么 我们就需要求解同时定位和地图绘制的问题

00:00:39.825 --> 00:00:41.609
简称为 SLAM 问题

00:00:41.609 --> 00:00:44.070
这就复杂得多了

00:00:44.070 --> 00:00:46.920
但今天我们不讨论

00:00:46.920 --> 00:00:51.810
今天 我们讨论这里的后验分布

00:00:51.810 --> 00:00:53.835
在我们深入数学细节之前

00:00:53.835 --> 00:00:56.210
我想向你展示如何定义

00:00:56.210 --> 00:01:01.230
一个特定一维定位场景下的不同输入数据

00:01:01.229 --> 00:01:06.119
也就是说 我会解释车辆是如何感知和移动的

00:01:06.120 --> 00:01:10.225
我还会向你展示地图是什么样的

00:01:10.224 --> 00:01:14.914
这个例子和你跟 Sebastian 学的非常相似

00:01:14.915 --> 00:01:17.650
因此 我们先看地图

00:01:17.650 --> 00:01:23.000
这张梯度包括了一维的街道路灯和树的位置

00:01:23.000 --> 00:01:27.069
这意味着 我们正在处理基于地标的地图

00:01:27.069 --> 00:01:30.648
这些地图一般都比基于网格的地图更稀疏

00:01:30.649 --> 00:01:32.280
在一维情况下

00:01:32.280 --> 00:01:36.870
地图是一个对象位置的向量

00:01:36.870 --> 00:01:42.135
这里 地图包括了 6 个地标 值分别为 9、15、25、31、59 和 77

00:01:42.135 --> 00:01:49.790
对于观察 我们表示

00:01:49.790 --> 00:01:52.990
汽车测量了最近的 k

00:01:52.989 --> 00:01:57.079
在驾驶方向观察到静态对象

00:01:57.079 --> 00:02:03.509
因此 我们假设汽车能检测到街道路灯和树的距离

00:02:03.510 --> 00:02:06.810
这样我们得到了一张距离表 包括

00:02:06.810 --> 00:02:09.305
对于每个时间戳 t

00:02:09.305 --> 00:02:12.885
都有一个距离向量 zt

00:02:12.884 --> 00:02:16.819
从 zt 1 到

00:02:16.819 --> 00:02:22.544
zt k 在具体时间戳 t 我们可能检测到多个树或路灯

00:02:22.544 --> 00:02:24.699
也可能什么都检测不到

00:02:24.699 --> 00:02:30.655
控制向量包括了连续的时间戳之间的车辆直接移动

00:02:30.655 --> 00:02:32.430
这意味着控制是由

00:02:32.430 --> 00:02:36.860
汽车在 t 和 t-1 之间行驶的距离确定的

00:02:36.860 --> 00:02:40.470
在本例中 汽车向右移动了两米

00:02:40.469 --> 00:02:43.706
汽车的真实位置位于地图上的某个地方

00:02:43.706 --> 00:02:46.109
由于地图是离散的

00:02:46.110 --> 00:02:52.710
车辆的位置可能是 0 到 99 的任何整数

00:02:52.710 --> 00:02:57.765
也就是说 Xt 的信仰定义为 100 个元素组成的向量

00:02:57.764 --> 00:03:00.509
每个元素代表

00:03:00.509 --> 00:03:05.519
汽车位于对应位置的概率

00:03:05.520 --> 00:03:08.390
现在 我们要估算这些值

