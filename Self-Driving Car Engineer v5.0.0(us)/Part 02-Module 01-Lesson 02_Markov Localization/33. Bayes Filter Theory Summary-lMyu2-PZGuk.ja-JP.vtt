WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:02.240
数学については
散々やったので

00:00:02.240 --> 00:00:05.660
ここでは最後の手順の主要な
成果を説明します

00:00:05.660 --> 00:00:07.570
では まとめてみましょう

00:00:07.570 --> 00:00:09.910
ベイズローカライゼーションフィルター 
別名ベイズフィルター

00:00:09.910 --> 00:00:13.240
は 再帰的状態推定のための 
一般的なフレームワークです

00:00:13.240 --> 00:00:16.210
再帰的とは  以前の状態から
データの全履歴ではなく

00:00:16.210 --> 00:00:19.870
現在の観測値と

00:00:19.870 --> 00:00:23.440
コントロールのみを使用することで
新しい状態を推定し
することである

00:00:23.440 --> 00:00:27.310
モーションモデルはフィルターの予測
ステップを説明します

00:00:27.309 --> 00:00:29.899
観測モデルは 
新しい状態確率を

00:00:29.899 --> 00:00:33.320
推定する更新
ステップです

00:00:33.320 --> 00:00:36.320
今までに予測と更新ステップ間の
この相互作用について

00:00:36.320 --> 00:00:38.520
聞いたことがあると思います

00:00:38.520 --> 00:00:41.370
たとえば アンドレーが統合レッスンで 
カルマンフィルターについて 

00:00:41.369 --> 00:00:43.729
話していた時です

00:00:43.729 --> 00:00:47.599
これは 現在の 1D ローカライゼーション 
カルマンフィルター 

00:00:47.600 --> 00:00:50.640
 および 粒子フィルターは
ベイズフィルターの

00:00:50.640 --> 00:00:52.579
具現化という意味です

00:00:52.579 --> 00:00:55.280
確率的な根拠 および
状態推定の再帰

00:00:55.280 --> 00:00:57.109
がわかりました

00:00:57.109 --> 00:01:00.530
これは 
ローカライゼーションだけでなく

00:01:00.530 --> 00:01:04.310
自動運転の Nanodegree 
全体においても素晴らしい成果です

00:01:04.310 --> 00:01:07.480
ここまででその裏にある理論が
すべてわかりました

00:01:07.480 --> 00:01:12.370
C++ の例に戻って
ローカライザーを仕上げましょう

