WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:01.949
ロボティックアームを

00:00:01.949 --> 00:00:06.040
初めて動かすと規則性なく回転することが確認できた

00:00:06.040 --> 00:00:08.789
皆さんにはその理由を考えていただき 私からはヒントを出します

00:00:08.789 --> 00:00:10.529
課題に取り組んでいただくにあたり

00:00:10.529 --> 00:00:12.330
次の警告ラインを目にしたことと思います

00:00:12.330 --> 00:00:17.530
「Controller Spawner が目的のコントローラーマネージャー ROS インターフェースを見つけられません 」

00:00:17.530 --> 00:00:19.690
この該当部分へ飛びます

00:00:19.690 --> 00:00:22.785
ランタイム依存関係が欠如していることがわかります

00:00:22.785 --> 00:00:25.681
ROS パッケージには ビルド依存と実行依存という

00:00:25.681 --> 00:00:28.405
2 種類の依存関係があります

00:00:28.405 --> 00:00:31.260
最初に Google サーチと apt-get の組み合わせを使用して

00:00:31.260 --> 00:00:35.859
ROS 動的コントローラーマネージャーパッケージをインストールし ビルド依存を修正します

00:00:35.859 --> 00:00:38.850
こうすることで パッケージが不具合なく構築できますが

00:00:38.850 --> 00:00:42.509
一方で実行すると警告が出て目的の機能が実行できません

00:00:42.509 --> 00:00:45.100
ここですぐに使える rosdep ツールを導入します

00:00:45.100 --> 00:00:48.643
rosdep ツールを使用すれば パッケージに欠如している依存関係をチェックし

00:00:48.643 --> 00:00:51.140
必要に応じてこれらの依存関係をダウンロードしてインストールすることができます

00:00:51.140 --> 00:00:52.380
では先へ進み simple_arm パッケージで欠如している

00:00:52.380 --> 00:00:55.350
依存関係を見てみましょう

00:00:55.350 --> 00:00:58.715
先へ進み Gazebo とすべての実行ノードを削除します

00:00:58.715 --> 00:01:02.950
Ctrl C を ROS マスターコンソールウィンドウで入力して実行できます

00:01:02.950 --> 00:01:06.789
ここで catkin ワークスペースのルート内で ".Bash source." を設定します

00:01:06.789 --> 00:01:08.549
コマンド "rosdep check,"

00:01:08.549 --> 00:01:12.620
 と入力し そしてパッケージ名前を入力します

00:01:12.620 --> 00:01:16.555
ここでは "simple_arm," と入力し [enter] を押します

00:01:16.555 --> 00:01:18.150
さあ 出てきました

00:01:18.150 --> 00:01:21.170
欠如しているシステムの依存関係のリストとその入手先です

00:01:21.170 --> 00:01:25.504
ここで apt-get を使用してこれらをインストールしますが コツをお見せしましょう

00:01:25.504 --> 00:01:27.450
簡単に rosdep にインストールさせることができます

00:01:27.450 --> 00:01:29.584
rosdep でパッケージをインストールするには

00:01:29.584 --> 00:01:33.049
 Catkin ワークスペースのルートで次のコマンドを呼び出します

00:01:33.049 --> 00:01:41.680
ここでは "Rosdep Install -I simple_arm" と入力し [enter] を押します

00:01:41.680 --> 00:01:46.090
スクリプトは欠如している Debian パッケージにインストールされ このようになります

00:01:46.090 --> 00:01:50.909
simple_arm package を起動すると すべてのことが期待どおりに動作するはずです

00:01:50.909 --> 00:01:53.849
ジョイントコントローラーは 現在実際に皆さんにシステム上にあり

00:01:53.849 --> 00:01:58.069
これがロードされてアームはもうバラバラには回転しなくなりますご覧のとおりです

00:01:58.069 --> 00:02:01.844
Gazebo が起動し ご覧のとおりアームが固定されました

00:02:01.844 --> 00:02:04.144
すべてのパッケージが正しくインストールされたところで

00:02:04.144 --> 00:02:06.359
ROS パッケージについてさらに掘り下げて学習し

00:02:06.359 --> 00:02:09.110
次のレッスンで行うノード作成コマンドの記述に備えましょう

