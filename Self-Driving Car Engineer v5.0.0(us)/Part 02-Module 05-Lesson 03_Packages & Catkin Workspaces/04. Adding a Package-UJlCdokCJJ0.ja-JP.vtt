WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:02.669
ROS を使用する最大の利点の 1 つは

00:00:02.669 --> 00:00:05.168
ユーザーと開発者の巨大なコミュニティがあるために

00:00:05.168 --> 00:00:06.900
利用可能なコードがたくさんあるということです

00:00:06.900 --> 00:00:10.984
ではここで 既存のパッケージのクローンを作成し 新しく作成したワークスペースに追加してみましょう

00:00:10.984 --> 00:00:13.679
まず ソースディレクトリに移動します

00:00:13.679 --> 00:00:18.070
そして Git を使用してGitHub リポジトリからこのレッスンで使用する simple_arm パッケージのクローンを作成します

00:00:18.070 --> 00:00:21.809
ビデオを一時停止して ここで示す URL をコピーする心配はありません

00:00:21.809 --> 00:00:24.420
これは下のテキストモジュールにあります

00:00:24.420 --> 00:00:26.489
クローンが作成されたら

00:00:26.489 --> 00:00:29.640
ROS ワークスペースの最上位ディレクトリに移動し

00:00:29.640 --> 00:00:33.015
コマンド catkin-make を使用して新たなパッケージを作成します

00:00:33.015 --> 00:00:34.679
エラーがありますね

00:00:34.679 --> 00:00:39.329
"Could not find a package configuration file provided by 'controller_manager.'"

00:00:39.329 --> 00:00:43.798
controller_manager は ROS コントロールからの ROS パッケージのことだとわかりました

00:00:43.798 --> 00:00:47.380
この問題は 関連する Debian パッケージをインストールすることで解決できます

00:00:47.380 --> 00:00:48.780
しかし この知識がない場合は

00:00:48.780 --> 00:00:50.908
必要とされる正確なパッケージ名が分からないため

00:00:50.908 --> 00:00:54.039
Google などで検索しなければなりません

00:00:54.039 --> 00:00:57.340
OKこれで controller_manager パッケージがインストールされました

00:00:57.340 --> 00:00:58.825
では もう一度構築してみましょう

00:00:58.825 --> 00:01:00.475
最上位ディレクトリから移動していないため

00:01:00.475 --> 00:01:03.600
そのまま catkin_make と入力して Enter キーを押します

00:01:03.600 --> 00:01:05.683
素晴らしい構築に成功したようです

00:01:05.683 --> 00:01:07.584
いいですね悪くないです

00:01:07.584 --> 00:01:10.430
これで 今クローン作成したパッケージのコードを実行できるようになります

