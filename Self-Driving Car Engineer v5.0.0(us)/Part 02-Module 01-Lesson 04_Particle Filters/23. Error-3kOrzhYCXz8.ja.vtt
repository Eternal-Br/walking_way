WEBVTT
Kind: captions
Language: ja

00:00:00.800 --> 00:00:06.230
答えはprint eval（myrobot，p）で
それほど難しくはありません

00:00:06.230 --> 00:00:08.340
やってみると楽しいものです

00:00:08.340 --> 00:00:14.140
これが一連の数字です
常に同じというわけではありませんね

00:00:15.880 --> 00:00:18.000
うまくいかない時もあります

00:00:18.000 --> 00:00:21.450
2度目の実行ですがこれもまた小さな値です

00:00:22.300 --> 00:00:24.820
もう2回実行すると

00:00:25.000 --> 00:00:28.000
面白いことにこれらの残差が出てきます

00:00:28.000 --> 00:00:32.000
5、5、7、1、3、5、6、7、7、6です

00:00:32.000 --> 00:00:36.000
うまくいきました
粒子フィルタを実行しなかったり

00:00:36.000 --> 00:00:40.000
無作為な粒子の集合がある場合と比較しても
残差は6に下がっています

00:00:40.000 --> 00:00:44.810
これを理解するために
print evalコマンドを使用して

00:00:45.810 --> 00:00:48.380
粒子フィルタを適用していない
最初のステップに戻します

00:00:51.000 --> 00:00:56.350
実行すると粒子フィルタの1ステップ目で
38から4、3、3になり

00:00:56.350 --> 00:01:01.000
残差が急激に減少します

00:01:01.000 --> 00:01:05.000
何度も実行すると
近くに粒子がまったくなく

00:01:05.000 --> 00:01:07.760
失敗する場合もあるでしょう

00:01:09.000 --> 00:01:11.600
不思議なことにすぐには現れません

00:01:11.600 --> 00:01:14.870
以前テストしてプログラミングした時も
このような現象の1つが出て

00:01:14.870 --> 00:01:17.000
残差は15か20ほどでした

00:01:17.000 --> 00:01:19.000
デモするときはいつも動きません

00:01:19.000 --> 00:01:21.000
この粒子フィルタは性能がよすぎるので

00:01:21.000 --> 00:01:26.050
比較的正しい答えを高速ではじき出します

