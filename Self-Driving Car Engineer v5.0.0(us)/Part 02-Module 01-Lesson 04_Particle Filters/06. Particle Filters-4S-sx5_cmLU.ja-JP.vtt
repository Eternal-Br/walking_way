WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:04.000
[ナレーター] 今日のクラスの主題である粒子フィルターについて見てみましょう

00:00:04.000 --> 00:00:09.000
粒子フィルターの答えを見るのは 本当に面白いです

00:00:09.000 --> 00:00:14.000
粒子フィルターの状態空間は通常 連続的です

00:00:14.000 --> 00:00:17.000
興味深いバージョンの状態空間に入ることができますが

00:00:17.000 --> 00:00:20.000
単峰形分布に限定されるわけではありません

00:00:20.000 --> 00:00:25.000
実際には任意の多峰性分布を表すことができます

00:00:25.000 --> 00:00:29.000
他の 2 つのフィルターと似ており

00:00:29.000 --> 00:00:34.000
効率の点では 特に似ています

00:00:34.000 --> 00:00:37.000
特定の状態では 指数関数的に拡大縮小します

00:00:37.000 --> 00:00:42.000
4 次元以上のものに対して粒子フィルターを表現するのは誤りです

00:00:42.000 --> 00:00:45.000
主にトラッキング領域のような他のドメインにおいては

00:00:45.000 --> 00:00:49.000
それらはスケールがはるかに大きくなり パーティクルフィルターの

00:00:49.000 --> 00:00:54.000
実際的な複雑性の良い取扱い方法を見たことがありません

00:00:54.000 --> 00:00:56.000
しかし 粒子フィルターの主要な利点は

00:00:56.000 --> 00:00:58.000
これだけではありません

00:00:58.000 --> 00:01:01.000
主な利点は

00:01:01.000 --> 00:01:04.000
非常に簡単にプログラムできるということです

00:01:04.000 --> 00:01:06.000
今日 見たように

00:01:06.000 --> 00:01:09.000
粒子フィルターの作成は本当に簡単です

00:01:09.000 --> 00:01:15.000
実際 連続値のローカライゼーションの問題のために粒子フィルターを書いてみます

00:01:15.000 --> 00:01:19.000
これは 上記の どの問題よりも多くの点で 困難です

00:01:19.000 --> 00:01:24.000
粒子フィルターの動作を見てみましょう

00:01:24.000 --> 00:01:28.000
ここではロボットが位置していて

00:01:28.000 --> 00:01:32.000
グローバル ローカライゼーションと呼ばれるものを実行しなければならない環境の平面図です

00:01:32.000 --> 00:01:37.000
これは ロボットがどこにあるかについての手がかりがない場合に使用され

00:01:37.000 --> 00:01:40.000
単にセンサーの測定値に基づいています

00:01:40.000 --> 00:01:44.000
青いストライプで示されるように

00:01:44.000 --> 00:01:50.000
ソナー センサーを使用する距離センサーを提供します ソナー センサーにより 音と 近い障害物の距離を測ります

00:01:50.000 --> 00:01:55.000
距離センサーを使用して 良い事後分布を決定する必要があります

00:01:55.000 --> 00:01:59.000
ロボットが廊下の真ん中から始まっていることは知りません

00:01:59.000 --> 00:02:03.000
実際 それがどこにあるのかについては完全にわかりません

00:02:03.000 --> 00:02:06.000
粒子フィルターは粒子を使って表現します

00:02:06.000 --> 00:02:10.000
数千個ある赤い点のそれぞれの点は

00:02:10.000 --> 00:02:14.000
道路がどこにあるのかという個別の推測となります

00:02:14.000 --> 00:02:19.000
X 座標 Y 座標 進行方向構成でされ

00:02:19.000 --> 00:02:24.000
3 つの値が一緒になって単一の推測となりますが

00:02:24.000 --> 00:02:26.000
単一の推測はフィルターではありません

00:02:26.000 --> 00:02:29.000
これは ロボットの後部の近似表現を構成する数千の推測

00:02:29.000 --> 00:02:35.000
のセットです

00:02:35.000 --> 00:02:37.000
ではビデオを始めましょう

00:02:37.000 --> 00:02:41.000
最初は粒子は一様に広がっていますが

00:02:41.000 --> 00:02:44.000
粒子フィルターは粒子が残るようにし

00:02:44.000 --> 00:02:50.000
残る粒子の数は 1 がセンサー測定とどの程度一致しているかに比例します

00:02:50.000 --> 00:02:54.000
ロボットは廊下にあることを把握しましたが

00:02:54.000 --> 00:02:57.000
廊下の対称性のために 2 つのクラウドが残りました

00:02:57.000 --> 00:03:00.000
ロボットが 1つのオフィスに入ると

00:03:00.000 --> 00:03:06.000
対称性が崩れ 正確な粒子のセットが生き残ります

00:03:06.000 --> 00:03:09.000
もう一度 再生してみましょう

00:03:09.000 --> 00:03:11.000
粒子フィルターの本質は

00:03:11.000 --> 00:03:15.000
粒子によって道路が動いている可能性がある場所を推測することだけでなく

00:03:15.000 --> 00:03:20.000
測定と一貫性のある粒子

00:03:20.000 --> 00:03:23.000
の生存を効果的に利用して

00:03:23.000 --> 00:03:26.000
粒子を残すこともあります

00:03:26.000 --> 00:03:29.000
その結果 確率の高い場所はより多くの粒子を集めるため

00:03:29.000 --> 00:03:33.000
ロボットの後部を示す可能性が高くなります

00:03:33.000 --> 00:03:36.000
数千の粒子が

00:03:36.000 --> 00:03:38.000
単一の場所に集まります

00:03:38.000 --> 00:03:46.000
粒子はローカライズするために ロボットのおおよその場所が明らかになります

