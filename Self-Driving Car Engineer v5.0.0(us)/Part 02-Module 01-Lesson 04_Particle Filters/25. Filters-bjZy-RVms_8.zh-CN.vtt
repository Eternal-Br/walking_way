WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.000
我问你几个问题

00:00:03.000 --> 00:00:06.000
我们有测量更新和运动更新

00:00:06.000 --> 00:00:09.000
在测量更新中 在给定的测量值下

00:00:09.000 --> 00:00:11.000
计算机对于状态的后验

00:00:11.000 --> 00:00:15.000
在归一化后 和状态乘以自身概率给定后的

00:00:15.000 --> 00:00:17.000
测量值的

00:00:17.000 --> 00:00:21.000
概率成正比

00:00:21.000 --> 00:00:23.000
在运动更新中 如果你计算

00:00:23.000 --> 00:00:27.000
分布的后验 1 乘以子层

00:00:27.000 --> 00:00:30.000
也就是转换概率乘以

00:00:30.000 --> 00:00:33.000
我的先验的卷积

00:00:33.000 --> 00:00:35.000
现在 这些公式看起来比较熟悉

00:00:35.000 --> 00:00:37.000
这就是你刚刚实现的

00:00:37.000 --> 00:00:39.000
你可能不知道已经实现了 我来解释一下

00:00:39.000 --> 00:00:41.000
你是如何实现的

00:00:41.000 --> 00:00:44.000
分布是一个粒子组

00:00:44.000 --> 00:00:47.000
一千个粒子 合在一起 代表你的先验 x

00:00:47.000 --> 00:00:49.000
这些是重要性权重

00:00:49.000 --> 00:00:51.000
从技术方面 带有重要性权重

00:00:51.000 --> 00:00:53.000
的粒子是分布

00:00:53.000 --> 00:00:55.000
的表述

00:00:55.000 --> 00:00:57.000
但是 我们想要去掉重要性权重

00:00:57.000 --> 00:01:01.000
因此通过重采样 我们把重要性权重

00:01:01.000 --> 00:01:03.000
放回了粒子组 因此 所得到的粒子

00:01:03.000 --> 00:01:07.000
这里的这些 就可以表述正确的后验

00:01:07.000 --> 00:01:09.000
你已经实现了这个

00:01:09.000 --> 00:01:11.000
我只是解释一下数学原理

00:01:11.000 --> 00:01:13.000
这个也已经实现了

00:01:13.000 --> 00:01:15.000
这里是你的粒子组

00:01:15.000 --> 00:01:18.000
你从总和中抽样

00:01:18.000 --> 00:01:20.000
在这里抽取一个随机粒子

00:01:20.000 --> 00:01:23.000
然后应用带噪模型的运动模型

00:01:23.000 --> 00:01:26.000
生成了一个随机粒子 x’

00:01:26.000 --> 00:01:28.000
结果 你得到了一个新的粒子组

00:01:28.000 --> 00:01:33.000
这个粒子组就是机器人运动后的正确分布

00:01:33.000 --> 00:01:35.000
数学原理就是这样

00:01:35.000 --> 00:01:39.000
希望你理解了代码背后的数学知识

00:01:39.000 --> 00:01:42.000
你可以在这里证明很多有趣的数学事实

00:01:42.000 --> 00:01:45.000
例如 你可以证明粒子数量趋近无穷时的转换

00:01:45.000 --> 00:01:47.000
这显然是近似的

00:01:47.000 --> 00:01:49.000
粒子不是准确的表述

00:01:49.000 --> 00:01:52.000
编程也非常容易

00:01:52.000 --> 00:01:55.000
因此 当你检查粒子代码时

00:01:55.000 --> 00:01:58.000
你会发现 你实现了一个相当高级的

00:01:58.000 --> 00:02:00.000
数学公式 这个公式实际上

00:02:00.000 --> 00:02:02.000
适用于我们目前讨论的所有滤波器

00:02:02.000 --> 00:02:05.000
它还适用于我们在第一堂课

00:02:05.000 --> 00:02:07.000
学过的直方图滤波器

00:02:07.000 --> 00:02:09.000
在第二堂课的卡尔曼滤波器中

00:02:09.000 --> 00:02:12.000
我们用了同样的高斯分布数学公式

00:02:12.000 --> 00:02:15.000
下面 我提一个有趣的问题

00:02:15.000 --> 00:02:19.000
这三个滤波器中 哪个是 Sebastian 在

00:02:19.000 --> 00:02:23.000
斯坦福的求职演说中用到的？

00:02:23.000 --> 00:02:25.000
直方图滤波器、卡尔曼滤波器

00:02:25.000 --> 00:02:27.000
粒子滤波器、还是以上都不是？

00:02:27.000 --> 00:02:30.000
选择所有适用的选项

00:02:30.000 --> 00:02:32.000
当然 除非你在 google 上搜索我

00:02:32.000 --> 00:02:34.000
并查看我的主页 否则你不可能知道答案的

00:02:34.000 --> 00:02:37.000
我的主页上可能有些证据

00:02:37.000 --> 00:02:39.000
所以 随便猜猜看

00:02:39.000 --> 00:02:41.000
我会马上揭晓答案

00:02:41.000 --> 00:02:43.000
我 2003 年被斯坦福雇用

00:02:43.000 --> 00:02:47.000
为终身副教授

00:02:47.000 --> 99:59:59.999
因此 我的就职演讲肯定没那么差

