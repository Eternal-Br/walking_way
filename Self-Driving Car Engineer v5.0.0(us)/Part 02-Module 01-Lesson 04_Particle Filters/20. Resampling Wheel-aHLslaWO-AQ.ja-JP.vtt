WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:03.000
[ナレーター]これが再サンプリングステップの実装で

00:00:03.000 --> 00:00:06.000
先ほどの図と同じ論理です

00:00:06.000 --> 00:00:11.000
p3 と呼ばれる新しい粒子の集合を作ります 最初は空の集合です

00:00:11.000 --> 00:00:15.000
このルーチンの中で再サンプリングする度に

00:00:15.000 --> 00:00:21.000
前の粒子の集合からの粒子に index を付けて加えます

00:00:21.000 --> 00:00:26.000
メインループがこれで 最後に p3 を p に戻して割り当てます

00:00:26.000 --> 00:00:28.000
これが再サンプリングステップです

00:00:28.000 --> 00:00:31.000
最初の index は無作為に抽出されます

00:00:31.000 --> 00:00:34.000
これがすべての index に対して均一なランダムサンプリングステップになります

00:00:34.000 --> 00:00:38.000
次に この実行変数 beta を 0.0 に設定し

00:00:38.000 --> 00:00:43.000
少しだけ早くするために W の最大値は置いておきます

00:00:43.000 --> 00:00:46.000
ここではなく ここに最大値を置いています

00:00:46.000 --> 00:00:48.000
最大値の位置はあまり重要ではありません

00:00:48.000 --> 00:00:51.000
ただし 正確に N 個の粒子を生成したいので 方法としては

00:00:51.000 --> 00:00:55.000
beta に最大で 2 倍の均一な乱数を加えます

00:00:55.000 --> 00:01:00.000
ここの最大の重みが w のためです

00:01:00.000 --> 00:01:03.000
最大重み w を 2 倍にすると 1 ステップが非常に大きくなります

00:01:03.000 --> 00:01:06.000
しかし 0 から 1 の間になるランダム変数を加えて

00:01:06.000 --> 00:01:11.000
0 と 2*mw で均一性を持たせます

00:01:11.000 --> 00:01:16.000
この変数 beta が現在の index の重みよりも大きいうちに

00:01:16.000 --> 00:01:19.000
この重みを beta 値から引きます

00:01:19.000 --> 00:01:23.000
そして index を 1 ずつ増分し 粒子の総数 N で剰余 (%) します

00:01:23.000 --> 00:01:27.000
変数 beta が index の重みより小さくなったら終わりです

00:01:27.000 --> 00:01:32.000
その粒子を選び出して 足して 追加してを繰り返します

00:01:32.000 --> 00:01:35.000
このプロシージャ―全体はやや複雑なので

00:01:35.000 --> 00:01:38.000
正しく理解できたら素晴らしいです

00:01:38.000 --> 00:01:40.000
学ぶものが何かあればうれしいです

00:01:40.000 --> 00:01:43.000
一度理解すればプログラミングが簡単になり

00:01:43.000 --> 00:01:46.000
粒子フィルターを書く度に再利用できます

00:01:46.000 --> 00:01:49.000
このプロシージャ―にはドメイン固有のものはないので

00:01:49.000 --> 00:01:52.000
再考する必要はありません

00:01:52.000 --> 00:01:56.000
実行してみます この空の集合には何も起こりません

00:01:56.000 --> 00:02:00.000
そこで得られた粒子の集合を出力します

00:02:00.000 --> 00:02:02.000
ここに print P があります

00:02:02.000 --> 00:02:06.000
これを実行すると 当然 1,000 個の粒子を得ますよね

00:02:06.000 --> 00:02:10.000
数は多いですが よく見てみましょう

00:02:10.000 --> 00:02:14.000
この 1 番目の値を見ると ほとんど同じです

00:02:14.000 --> 00:02:18.000
すべて 76 から 82 の間です

00:02:18.000 --> 00:02:26.000
2 番目の値は 42 44 43 41 39 38 です

00:02:26.000 --> 00:02:29.000
ここで得た粒子の集合は

00:02:29.000 --> 00:02:31.000
すべて同じ場所にあります

00:02:31.000 --> 00:02:34.000
先ほどのように完全無作為の粒子の集合を持つ代わりに

00:02:34.000 --> 00:02:38.000
再サンプリングステップで x と y の位置がよく似ている

00:02:38.000 --> 00:02:40.000
粒子が得られることがわかります

00:02:40.000 --> 00:02:43.000
また 方向はそれほど似ていないことがわかります

00:02:43.000 --> 00:02:46.000
勢いよくジャンプする理由ですが

00:02:46.000 --> 00:02:52.000
今のところ 1 か所しかないので

00:02:52.000 --> 00:02:57.000
ランドマークまでの距離は方向とは無関係でしょう

00:02:57.000 --> 00:03:02.000
保護された観測では方向は影響を及ぼさないので

00:03:02.000 --> 00:03:04.000
選択においては何の役割も果たしません

00:03:04.000 --> 00:03:06.000
もう一度 4 つのランドマークで点を取り

00:03:06.000 --> 00:03:08.000
そこまでの距離を測ります

00:03:08.000 --> 00:03:12.000
この方向を向いているロボットは特定の距離の組み合わせを持っています

00:03:12.000 --> 00:03:16.000
このように別の方向を向いているロボットは

00:03:16.000 --> 00:03:19.000
同じ距離の組み合わせがあるので

00:03:19.000 --> 99:59:59.999
粒子の未来において進行方向には何の役割もありません

