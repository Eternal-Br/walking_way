WEBVTT
Kind: captions
Language: ja-JP

00:00:00.002 --> 00:00:03.961
ホットエンコーディングはほとんどの問題に対してとてもよく機能しますが

00:00:03.961 --> 00:00:06.842
それはクラス数が数万や数百万

00:00:06.842 --> 00:00:08.224
もあるという状況になるまでです

00:00:08.224 --> 00:00:11.641
その場合 ベクターがとても大きくなり

00:00:11.641 --> 00:00:15.890
すべての場所がほぼゼロになり非常に効率が悪くなります

00:00:15.890 --> 00:00:19.840
埋め込みを使って このような問題を処理する方法を後で確認します

00:00:19.840 --> 00:00:24.180
このアプローチのよい点は どの程度うまくできているかの測定を

00:00:24.180 --> 00:00:26.220
2つのベクターの単純な比較で行えることです

00:00:26.220 --> 00:00:29.430
クラシファイから生じてクラスの確率を含むベクターと

00:00:29.430 --> 00:00:34.070
ラベルに対応するワンホットエンコーディングされたベクターです

00:00:34.070 --> 00:00:36.030
実際に行う方法を見てみましょう

00:00:36.030 --> 00:00:40.450
この2つの確率ベクター間の距離を測定する自然な方法は

00:00:40.450 --> 00:00:42.079
クロスエントロピーと呼ばれます

00:00:42.079 --> 00:00:44.795
ここでは距離をDとします

00:00:44.795 --> 00:00:47.354
計算はこのようになります

00:00:47.354 --> 00:00:50.067
注意してください  クロスエントロピーは対称的ではなく

00:00:50.067 --> 00:00:51.582
扱いにくい対数があります

00:00:51.582 --> 00:00:54.011
そのため ラベルと分布が正しい場所にあることを

00:00:54.011 --> 00:00:56.516
確認する必要があります

00:00:56.516 --> 00:01:00.212
ラベルはワンホットエンコーディングされているため

00:01:00.212 --> 00:01:03.540
多くのゼロを含みますが ゼロの対数はとりたくありません

00:01:03.540 --> 00:01:07.350
この分布では softmaxはすべての場所にわずかな確率があることを常に保証するため

00:01:07.350 --> 00:01:11.650
実際にゼロの対数をとることはありません

00:01:11.650 --> 00:01:14.490
まとめましょう  既に多くの要素があります

00:01:14.490 --> 00:01:19.290
入力があります  これは線形モデルを使ってロジットに変換されます

00:01:19.290 --> 00:01:22.800
これは基本的に行列乗算とバイアスです

00:01:22.800 --> 00:01:26.244
スコアであるロジットをsoftmaxにフィードして

00:01:26.244 --> 00:01:29.205
確率に変換します

00:01:29.205 --> 00:01:32.803
さらにこれらの確率とワンホットエンコードされたラベルを

00:01:32.803 --> 00:01:35.330
クロスエントロピー関数を使用して比較します

00:01:35.330 --> 00:01:39.310
この設定全体は多項式ロジスティック分類と呼ばれることがあります

