WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.970
模型预测控制把轨迹追踪任务

00:00:02.970 --> 00:00:06.147
转化为优化问题

00:00:06.147 --> 00:00:09.810
优化问题的解就是最优轨迹

00:00:09.810 --> 00:00:13.620
模型预测控制涉及模拟不同的驱动器输入

00:00:13.619 --> 00:00:17.789
预测相应轨迹、以及选择最小成本的轨迹

00:00:17.789 --> 00:00:20.143
我们看看过程的第一步

00:00:20.143 --> 00:00:25.204
假设我们知道当前状态和想要追踪的参考轨迹

00:00:25.204 --> 00:00:28.320
我们及时优化每个步骤中的驱动器输入

00:00:28.320 --> 00:00:31.690
保证预测轨迹成本的最小化

00:00:31.690 --> 00:00:33.734
一旦找到了成本最低的轨迹

00:00:33.734 --> 00:00:36.585
我们就开始实现第一套驱动命令

00:00:36.585 --> 00:00:39.630
然后 我们扔掉计算的其他轨迹

00:00:39.630 --> 00:00:42.155
我们不使用预测的旧轨迹

00:00:42.155 --> 00:00:45.990
而是利用新状态来计算新的最优轨迹

00:00:45.990 --> 00:00:49.454
也就是说 我们在不断根据新的时域计算输入

00:00:49.454 --> 00:00:52.994
因此 该方法有时也被叫做滚动时域控制

00:00:52.994 --> 00:00:55.409
你可能在想 为什么我们不

00:00:55.409 --> 00:00:58.979
执行第一次计算出来在整条轨迹呢

00:00:58.979 --> 00:01:01.704
原因在于 我们的模型只是近似的

00:01:01.704 --> 00:01:03.289
尽管我们很努力

00:01:03.289 --> 00:01:05.474
它仍不会完美匹配真实世界

00:01:05.474 --> 00:01:07.919
一旦我们执行了驱动命令

00:01:07.920 --> 00:01:12.109
轨迹就会偏离我们预测的轨迹

00:01:12.109 --> 00:01:17.000
因此 持续重新评估并找到最优驱动非常关键

