WEBVTT
Kind: captions
Language: en

00:00:00.340 --> 00:00:03.509
To train any classifier, you need labeled data.

00:00:03.509 --> 00:00:04.979
Lots of it.

00:00:04.980 --> 00:00:05.740
In this case,

00:00:05.740 --> 00:00:10.800
the two classes you would like to distinguish are car and non-car images.

00:00:10.800 --> 00:00:13.070
So you need samples of both.

00:00:13.070 --> 00:00:15.830
If you only have full video frames available,

00:00:15.830 --> 00:00:19.829
you need to crop out regions and scale them to a fixed size.

00:00:19.829 --> 00:00:22.369
Ideally you want a balanced data set.

00:00:22.370 --> 00:00:26.450
That is the number of car and non-car images should be roughly equal.

00:00:26.449 --> 00:00:29.669
If that's not the case, you're under risk of the classifier

00:00:29.670 --> 00:00:33.560
trying to predict everything as belonging to the majority class.

00:00:33.560 --> 00:00:37.067
There are some techniques for handling imbalanced data sets, for

00:00:37.067 --> 00:00:41.337
example, duplicate some samples from the smaller class to balance the counts.

00:00:41.337 --> 00:00:46.215
For vehicle classification, if you don't have enough non-car images you could

00:00:46.215 --> 00:00:48.629
simply extract more from video frames.

00:00:48.628 --> 00:00:51.100
Okay, once you have a sizable data set,

00:00:51.100 --> 00:00:54.174
you need to split it into two collections.

00:00:54.174 --> 00:00:56.854
A training set and a test set.

00:00:56.854 --> 00:01:00.784
As the names suggest, you will only use images from the training

00:01:00.784 --> 00:01:02.884
set when training your classifier and

00:01:02.884 --> 00:01:07.144
then check how it performs on unseen examples from the test set.

00:01:07.144 --> 00:01:11.384
To avoid any possible ordering effects in the data, you should sample or

00:01:11.385 --> 00:01:16.255
shuffle the data set randomly when splitting it for training and testing.

00:01:16.254 --> 00:01:19.399
Even within the training and test sets, you should aim for

00:01:19.400 --> 00:01:23.390
a balance between the number of car and non car images.

00:01:23.390 --> 00:01:26.519
All of this preprocessing might seem like a lot of work but

00:01:26.519 --> 00:01:32.079
machine learning logarithms work on a principle of garbage in, garbage out.

00:01:32.079 --> 00:01:34.329
So you need to be careful about what you feed them.

