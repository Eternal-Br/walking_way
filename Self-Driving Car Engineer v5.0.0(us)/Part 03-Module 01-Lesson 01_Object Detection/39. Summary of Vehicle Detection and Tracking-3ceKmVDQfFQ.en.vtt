WEBVTT
Kind: captions
Language: en

00:00:00.300 --> 00:00:00.860
&gt;&gt; All right guys.

00:00:00.860 --> 00:00:02.040
Fantastic.

00:00:02.040 --> 00:00:04.570
Now, I think you've got the tools you need to detect and

00:00:04.570 --> 00:00:06.560
track vehicles in a video stream.

00:00:06.559 --> 00:00:07.569
So Arpin.

00:00:07.570 --> 00:00:08.460
Could you remind us again?

00:00:08.460 --> 00:00:11.130
What are the steps we need to do to get started on a project?

00:00:11.130 --> 00:00:11.800
&gt;&gt; Sure.

00:00:11.800 --> 00:00:14.760
First you need to decide what features to use.

00:00:14.759 --> 00:00:18.839
You'll want to try some combination of color and gradient based features.

00:00:18.839 --> 00:00:21.910
But keep in mind that this might require some experimentation

00:00:21.910 --> 00:00:23.329
to decide what works best.

00:00:24.329 --> 00:00:27.829
Next, you'll need to choose and train a classifier.

00:00:27.829 --> 00:00:31.939
A linear SVM is probably your best bet for an ideal combination of speed and

00:00:31.940 --> 00:00:33.050
accuracy.

00:00:33.049 --> 00:00:36.859
But you are encouraged to experiment with other classifiers, as well.

00:00:36.859 --> 00:00:37.600
Awesome.

00:00:37.600 --> 00:00:38.250
So, Drew.

00:00:38.250 --> 00:00:40.179
Maybe you could tell us, then, what happens next.

00:00:40.179 --> 00:00:42.340
We've chosen features and trained a classifier.

00:00:42.340 --> 00:00:43.460
Then what do we do?

00:00:43.460 --> 00:00:46.597
&gt;&gt; Well, next, you'll implement a sliding window technique to search for

00:00:46.597 --> 00:00:48.359
vehicles in some test images.

00:00:48.359 --> 00:00:49.960
You can try multiscale search or

00:00:49.960 --> 00:00:52.299
different tiling schemes to see what works best.

00:00:52.299 --> 00:00:55.509
But keep in mind, you'd like to minimize the number of search windows.

00:00:55.509 --> 00:00:58.689
So, for example, you probably don't need to search for cars in the sky and

00:00:58.689 --> 00:00:59.879
the treetops.

00:00:59.880 --> 00:01:01.609
Once you've got a working detection pipeline,

00:01:01.609 --> 00:01:03.159
you'll try it on a video stream.

00:01:03.159 --> 00:01:05.539
And implement tracking to follow, detect vehicles.

00:01:05.540 --> 00:01:07.340
And reject spurious detections.

00:01:07.340 --> 00:01:07.859
&gt;&gt; Awesome.

00:01:07.859 --> 00:01:08.549
Well, alright then.

00:01:08.549 --> 00:01:09.629
Let's get started on the project

