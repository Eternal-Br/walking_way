WEBVTT
Kind: captions
Language: zh-CN

00:00:00.420 --> 00:00:04.889
我们之前讲过 检测目标时

00:00:04.889 --> 00:00:06.419
并非只能使用一种特征

00:00:06.419 --> 00:00:10.580
基于颜色和基于形状的特征可以综合使用

00:00:10.580 --> 00:00:14.539
因为 在捕获的目标信息中里

00:00:14.539 --> 00:00:16.149
这两者互为补充

00:00:16.149 --> 00:00:16.780
实际上

00:00:16.780 --> 00:00:21.300
特征越多 设计出的检测系统更为稳定

00:00:21.300 --> 00:00:25.269
不过 你需要小心地使用这些特征时

00:00:25.269 --> 00:00:30.250
例如 假设我们使用矢量化的 HSV 值作为一个输入特征

00:00:30.250 --> 00:00:33.560
它包括 a 个元素

00:00:33.560 --> 00:00:37.080
然后使用 HoG 作为另一个特征 它包括 b 个元素

00:00:37.079 --> 00:00:40.350
要合并这两种特征 最简单办法把两个矢量连起来

00:00:40.350 --> 00:00:45.460
将 HSV 和 HoG 合并为一个长度为 a + b 个元素的向量

00:00:45.460 --> 00:00:49.520
如果你将这个向量看作一个简单的柱状图 你可能注意到

00:00:49.520 --> 00:00:54.080
在颜色特征和梯度特征的幅值不同

00:00:54.079 --> 00:00:57.399
这是因为它们代表的绝对数量不一样

00:00:57.399 --> 00:01:01.219
归一化步骤可以防止某一个特征

00:01:01.219 --> 00:01:02.879
在后续处理中占主导地位

00:01:02.880 --> 00:01:07.450
另外 有时候某种类型的单元数量可能比另外一种类型多

00:01:07.450 --> 00:01:11.180
这可能不会造成问题

00:01:11.180 --> 00:01:15.770
不过最好看一下 组合的特征向量中是否存在冗余

00:01:15.769 --> 00:01:19.599
例如 你可以应用决策树分析各种特征的

00:01:19.599 --> 00:01:23.489
相对重要性 并抛弃作用不大的特征

00:01:23.489 --> 00:01:26.729
我们先说到这里

00:01:26.730 --> 00:01:29.340
如何使用这个最终的特征向量来寻找对象

00:01:29.340 --> 00:01:33.130
是我们下节课设计分类器时要讨论的内容

